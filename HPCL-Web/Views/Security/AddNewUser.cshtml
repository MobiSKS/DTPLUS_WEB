@model HPCL.Common.Models.ViewModel.Security.ManageNewUserViewModel
@using Microsoft.AspNetCore.Http;
<div class="col-lg-12 p-4 p-md-4">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("ManageUser","Security")" class="text_primary">Manage Users</a> </li>
            <li class="breadcrumb-item font-weight-light">Add User</li>
        </ul>
        <ul class="nav nav-tabs mt-2 form_tabs justify-content-end" id="formTab" role="tablist">
            <li class="nav-item"> <a class="nav-link disable" id="userinfo-tab" data-toggle="tab" href="#userinfo" role="tab" aria-controls="userinfo" aria-selected="false">User Info</a> </li>
            <li class="nav-item"> <a class="nav-link disable" id="userrole-tab" data-toggle="tab" href="#userrole" role="tab" aria-controls="userrole" aria-selected="false">User Role</a> </li>

        </ul>
        <div class="tab-content mt-3" id="myTabContent">
            <div class="tab-pane fade show active" id="userinfo" role="tabpanel" aria-labelledby="userinfo-tab">
                <div class="border-1 rounded border-grey w-100 mt-3">
                    <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">User Information</p>
                    <div class="py-2 p-md-4">
                        <div class="d-flex align-items-center justify-content-between flex-wrap row">
                            <div class="col-lg-6 col-md-12 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">User Name <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", maxlength = "50"})
                                            <span class="error" style="display:none" id="userName_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal offset-md-1 col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = "50"})
                                            <span class="error" style="display:none" id="email_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-between flex-wrap row">
                            <div class="col-lg-6 col-md-12 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Password <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">

                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", maxlength = "50",autocomplete = "new-password"})
                                            <span class="error" style="display:none" id="password_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal offset-md-1 col-md-4 col-12">Confirm Password <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", maxlength = "50"})
                                            <span class="error" style="display:none" id="confirmPassword_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-between flex-wrap row">
                            <div class="col-lg-6 col-md-12 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Secret Question <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.DropDownListFor(m => m.SecretQuestion, new SelectList(Model.CustomerSecretQueMdl, "SecretQuestionId", "SecretQuestionName"), new { @class = "form-control" })
                                            <span class="error" style="display:none" id="secretQuestion_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal offset-md-1 col-md-4 col-12">Secret Question Answer <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.TextBoxFor(m => m.SecretAnswer, new { @class = "form-control", maxlength = "50"})
                                            <span class="error" style="display:none" id="secretAns_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="d-flex align-items-center justify-content-center mt-0">
                            <div class="px-0">
                                <button class="btn btn_primary" id="btnCreate" type="button">Create User</button>
                            </div>
                        </div>
                    </div>
                    <p class="userNote px-3 py-2  m-0" style="display:none">Note:-Minimum length of Username should be 6 and special characters(Except .,_,@@)are not allowed.Username should not start with special character and 2 consecutive special characters are not allowed.</p>
                    <p class="passNote px-3 py-2  m-0" style="display:none">Note:-Password must contain minimum 8 characters, and atleast one upper case letter, one lower case letter, one numeric digit and one special character !@@~#%^&(*)</p>
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="tab-pane fade show" id="userrole" role="tabpanel" aria-labelledby="userrole-tab">
                <div class="border-1 rounded border-grey w-100 mt-3">
                    <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">User Roles</p>
                    @if (Model.Data != null)
                    {
                        string roleId = "";
                        @if (Model.Data.tblMainAndSubLevel.Count() > 0 && Model.Data.tblMainAndSubLevel[0].RoleId != "0")
                        {
                            <div class="d-flex align-items-start flex-wrap mt-3">
                                <div class="col-12 col-lg-12">

                                    <table id="LocRoleMappingTbl" class="table table-striped d-block d-md-table table-bordered table-responsive mt-3" style="width:100%;">
                                        <thead>
                                            <tr>
                                                <th>Role</th>
                                                <th>Location</th>
                                                <th>Action</th>
                                                <th style="display:none">Id</th>
                                                <th style="display:none">ZonalID</th>
                                                <th style="display:none">RegionalId</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Data.tblMainAndSubLevel.OrderBy(x => x.RoleId))
                                            {
                                                @if (roleId != item.RoleId)
                                                {
                                                    roleId = item.RoleId;
                                                    string Location = "", ZoneIds = "", regionIds = "";
                                                    @foreach (var item1 in Model.Data.tblMainAndSubLevel.Where(t => t.RoleId == roleId).OrderBy(t => t.RoleId))
                                                    {
                                                        Location = Location + item1.RegionalOfficeName + ",";
                                                        if (item.RegionalOfficeId == null || item.RegionalOfficeId == "0")
                                                        {
                                                            ZoneIds = @item.ZonalOfficeId;
                                                        }
                                                        else
                                                        {
                                                            ZoneIds = @item.ZonalOfficeId;
                                                            regionIds = regionIds + item1.RegionalOfficeId + ",";
                                                        }
                                                    }
                                                    if (Location.Length > 0)
                                                        Location = Location.Remove(Location.Length - 1);
                                                    if (regionIds.Length > 0)
                                                        regionIds = regionIds.Remove(regionIds.Length - 1);
                                                    <tr>
                                                        <td>
                                                            <a href="#" class="roleSelect">@item.UserRole</a>
                                                        </td>
                                                        <td>
                                                            @Location
                                                        </td>
                                                        <td>

                                                            <a class="delete" data-toggle="tooltip" title="" tooltip="Delete"><i class="fa fa-trash-o" aria-hidden="true"></i></a>
                                                        </td>
                                                        <td class="roleId" style="display:none">@item.RoleId</td>
                                                        <td class="zoneId" style="display:none">@ZoneIds</td>
                                                        <td class="regionId" style="display:none">@regionIds</td>
                                                    </tr>
                                                }

                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div id="message" tabindex="0" class="mb-3 text-center alert alert-danger">No Roles Assigned to This User</div>
                        }
                    }
                    <div class="clearfix"></div>
                    <div id="msgError" tabindex="0" class="mb-3 text-center alert alert-danger" style="display:none"></div>
                </div>
                <div class="clearfix"></div>
                <div class="border-1 rounded border-grey w-100 mt-3">
                    <div class="d-flex align-items-start flex-wrap">
                        <div class="col-12 col-sm-3 px-0">
                            <div class="UserRoleArea">
                                <h2>User Role</h2>
                                @if (Model.getUserRolesandregions.Count() > 0)
                                {
                                    if (Model.getUserRolesandregions.First().Data.UserRoles.Count() > 0)
                                    {
                                        <ul id="UserRoleList" style="max-height:400px; overflow-y:scroll;">
                                            @foreach (var item in Model.getUserRolesandregions.First().Data.UserRoles)
                                            {
                                                <li id="@item.ID">@item.UserRole</li>

                                            }

                                        </ul>
                                    }
                                }

                            </div>
                        </div>

                        <div class="col-12 col-sm-9 px-0">
                            <div class="LocationsArea">
                                <h2>Locations Area</h2>
                                <div class="panel-group" id="accordion">
                                    <!-- /.panel -->
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h4 class="panel-title"></h4>
                                            <input class="form-check-input check_box_pos_sty" type="checkbox" id="checkAll" value="option1">
                                            <a class="" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" contenteditable="false">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label" for="inlineCheckbox1">All</label>
                                                </div>
                                            </a>
                                        </div>
                                        <!--/.panel-heading -->
                                        <div id="collapseTwo" class="panel-collapse collapse show">
                                            <div class="panel-body">
                                                <!-- nested -->
                                                <div class="panel-group" id="nested">
                                                    @{
                                                        int i = 0, j = 0;
                                                        string ZoneId = "0";
                                                    }
                                                    @foreach (var item in Model.getUserRolesandregions.First().Data.Locations.OrderBy(x => x.ZonalOfficeID))
                                                    {
                                                        i++;
                                                        @if (ZoneId != item.ZonalOfficeID)
                                                        {
                                                            ZoneId = item.ZonalOfficeID;
                                                            <div class="panel panel-default zoneArea class_@item.ZonalOfficeID">
                                                                <div class="panel-heading">
                                                                    <h4 class="panel-title"></h4>
                                                                    <input class="form-check-input check_box_pos_sty" type="checkbox" name="zoneChk" onclick="chkAllRegion(this,@i)" id="check_@item." value="@item.ZonalOfficeID">
                                                                    <a class="collapsed class_@item.ZonalOfficeID class_a_ZoneArea" data-toggle="collapse" data-parent="#nested" href="#nested_@i" id="id_@item.ZonalOfficeID">
                                                                        <div class="form-check form-check-inline">
                                                                            <label class="form-check-label" for="check_@i">@item.ZonalOfficeName</label>
                                                                        </div>
                                                                    </a>

                                                                </div>
                                                                <!--/.panel-heading -->
                                                        <div id="nested_@i" class="panel-collapse regionArea collapse in">
                                                                    <div class="panel-body">
                                                                        <ul style="padding-left: 25px;">
                                                                            @foreach (var item1 in Model.getUserRolesandregions.First().Data.Locations.Where(x => x.ZonalOfficeID == item.ZonalOfficeID).OrderBy(x => x.ZonalOfficeID))
                                                                            {
                                                                                j++;
                                                                                <li>
                                                                                    <div class="form-check form-check-inline">
                                                                                        <input class="form-check-input chk_@i" type="checkbox" onclick="DisableArea(this,@i)" name="regionChk" id="check_@i@j-@item.ZonalOfficeID" value="@item1.RegionalOfficeID">
                                                                                        <label class="form-check-label" for="check_@i@j">@item1.RegionalOfficeName</label>
                                                                                    </div>
                                                                                </li>
                                                                            }
                                                                        </ul>

                                                                    </div>
                                                                    <!--/.panel-body -->
                                                        </div>

                                                                <!--/.panel-collapse -->
                                                    </div>
                                                        }
                                                    }
                                                    <!-- /.panel -->

                                                </div>
                                                <!-- /.panel-group -->
                                                <!-- nested -->
                                            </div>
                                            <!--/.panel-body -->

                                        </div>

                                        <!--/.panel-collapse -->
                                    </div>
                                    <!-- /.panel -->
                                </div>
                                <!-- /.panel-group -->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="d-flex align-items-center justify-content-center mt-3">
                    @* <div class="px-2">
                        <button class="btn btn_primary" id="btnPrevious" type="button">Previous</button>
                        </div>*@
                    <div class="px-2">
                        <button class="btn btn_primary" id="btnSave" type="button">Save</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<div class="clearfix"></div>

<script type="text/javascript">
     var selectedRole="";
     var userNameVal="";
     var emailVal="";
      $(document).ready(function (){
        var update="@ViewBag.Update";

         if(update=="Yes"){
              ShowUserRolesData();
          }
          else{
              ShowUserInfoData();
          }
       });
        function chkAllRegion(o,cnt){
           var zoneId=o.value;
           $('input[type=checkbox][name=regionChk]').prop("checked",false);
           $('input:checkbox.chk_'+cnt).not(this).prop('checked', o.checked);
           if(o.checked){
               $(".zoneArea").addClass("disable");
               $(".class_"+zoneId).removeClass("disable");
           }
           else{
                $(".zoneArea").removeClass("disable");
           }
           $("#message").html("");
           $("#message").attr("style","display:none");
       }

       function DisableArea(o,cnt){
           var chkROId=o.id;
           var zoneId=chkROId.substring(chkROId.indexOf('-') + 1);
           if(o.checked){
               $(".zoneArea").addClass("disable");
               $(".class_"+zoneId).removeClass("disable");
           }
           var checkedCnt=0;
           $('input:checkbox.chk_'+cnt+':checked').each(function () {
               checkedCnt=checkedCnt+1;
           });
           if(checkedCnt==0)
               $(".zoneArea").removeClass("disable");
       }
        $("#checkAll").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
            $("#message").html("");
            $("#message").attr("style","display:none");
        });
        var li =document.getElementById("UserRoleList").getElementsByTagName('li');

        for(var i = 0;i<li.length;i++){
            li[i].addEventListener("click", selectItem);
        }

        function selectItem(e){
            //alert(e.target.innerText);
            //alert(e.target.attributes.id.value);
            selectedRole=e.target.attributes.id.value;
            $("#message").html("Please select location for this Role");
            $("#message").attr("style","display:block");
             $('li').removeClass("usr_active");
            $(e.target).addClass("usr_active");

        }

       $("#LocRoleMappingTbl").on('click', '.roleSelect', function (e) {


           debugger;
            var currentRow = $(this).closest("tr");
            var roleId = currentRow.find('.roleId').text();
            var regionIdsList = currentRow.find('.regionId').text();
            var regionIdArr=[];
            if(regionIdsList.indexOf(',')!=-1)
                regionIdArr=regionIdsList.split(',');
            else
                regionIdArr[0]=regionIdsList;

            //var zoneId = currentRow.find('.zoneId').text();
             $('li').removeClass("usr_active");

            $('li#'+roleId).addClass("usr_active");
             selectedRole=roleId;
            $('input[type=checkbox][name=regionChk]').prop("checked",false);
            $(".class_a_ZoneArea").addClass("collapsed");
            $(".class_a_ZoneArea").attr("aria-expanded",false);
            $(".regionArea").removeClass("show");
            $(".zoneArea").addClass("disable");
            for(var i=0;i<regionIdArr.length;i++){
                $('input[type=checkbox][name=regionChk][value='+regionIdArr[i]+']').prop("checked",true);
                var chkROId=$('input[type=checkbox][name=regionChk][value='+regionIdArr[i]+']').attr("id");
                var zoneId=chkROId.substring(chkROId.indexOf('-') + 1);

                $("#id_"+zoneId).removeClass("collapsed");
                $("#id_"+zoneId).attr("aria-expanded",true);
                var nestedId=$("#id_"+zoneId).attr("href");
                $(nestedId).addClass("show");
                $(".class_"+zoneId).removeClass("disable");
            }
            $("#msgError").html("");
            $("#msgError").attr("style","display:none");

        });

      $("#btnSave").on("click", (function (e) {
          var userName=$("#UserName").val();
          var newEmail=$("#Email").val();
          var flag="Y";
          debugger;
          var userRoleSelected=selectedRole;
          if(userRoleSelected==""){
                $("#msgError").html("Please Select Roles for User");
                $("#msgError").attr("style","display:block");
                $("#msgError").focus();
                flag="N";
          }
          if(flag=="N")
                e.preventDefault();
          else{
                objUserRole=[];
                $("input:checkbox[name=regionChk]:checked").each(function () {
                    var chkROId=$(this).attr("id");
                     var zoId=chkROId.substring(chkROId.indexOf('-') + 1);
                     objUserRole.push({ RO: $(this).val(),ZO:zoId });
                });
                var ReqModel={UserName:userName,Email:newEmail,Password:"",ConfirmPassword:"",SecretQuestion:"0",SecretQuestionAnswer:"",UserRole:userRoleSelected,FirstName:"",LastName:"",StateId:"0",ActionType:"",TypeManageUsersAddUserRole:objUserRole,UpdateStatus:"Update"};
                $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("UpdateUser", "Security")',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'JSON',
                    data: JSON.stringify(ReqModel),
                    success: function (data, status, xhr) {
                        var v = data;
                        if (status == 'success') {

                              var url = '@Html.Raw(@Url.Action("AddNewUser", "Security",new { UserName = "zzXXyyZZZZZZZzz", Email = "QQPPppSSAAQQ", update = "Yes" }))';
                                url = url.replace("zzXXyyZZZZZZZzz", encodeURIComponent(userName)).replace("QQPPppSSAAQQ", encodeURIComponent(newEmail));
                                window.location.href=url;
                        }
                        else {
                            console.log(v);
                        }
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        alert("Error"+ errorMessage);
                    }
                });
              }

       }));

        $("#btnCreate").on("click", (function (e) {
          var userName=$("#UserName").val();
          var newEmail=$("#Email").val();
          var password=$("#Password").val();
          var confirm=$("#ConfirmPassword").val();
          var secretAns=$("#SecretAnswer").val();
           var secretQstn =$("#SecretQuestion").val();
           var flag = "Y";

             if(userName.trim()==""){
                 $("#userName_error").html("Please enter User Name");
                 $("#userName_error").attr("style","display:block");
                 flag="N";
             }
             else{
                 if(!(userName.match(userNameCheck))){
                      $("#userName_error").html("Please enter valid User Name");
                      $("#userName_error").attr("style","display:block");
                      $("p.userNote").attr("style","display:block");
                       flag="N";
                 }
                 else{
                     $.ajax({
                         type: 'POST',  // http method
                         url: '@Url.Action("ValidateUserName", "Security")',
                         data: { UserName: userName.trim() },  // data to submit
                         dataType: "json",
                         success: function (data, status, xhr) {
                             var v = data;
                             if (status == 'success' && v == '0') {
                                 $("#userName_error").html("User Name already Exists");
                                 $("#userName_error").attr("style","display:block");
                             }
                             else {
                                 $("#userName_error").html("");
                                 $("#userName_error").attr("style","display:none");
                             }
                         }
                     });
                 }

             }
             if(newEmail.trim()==""){
                 $("#email_error").html("Please enter Email");
                 $("#email_error").attr("style","display:block");
                 flag="N";
             }
             else{
                 if(!(newEmail.match(email))){
                      $("#email_error").html("Please enter valid Email");
                      $("#email_error").attr("style","display:block");
                      flag="N";

                 }
             }
             if(password.trim()==""){
                 $("#password_error").html("Please enter Password");
                 $("#password_error").attr("style","display:block");
                 flag="N";
             }
             else{
                if(!(password.match(passwordCheck))){
                      $("#password_error").html("Please enter valid Password");
                      $("#password_error").attr("style","display:block");
                      $("p.userNote").attr("style","display:block");
                      flag="N";
                 }
             }
             if(confirm.trim()==""){
                 $("#confirmPassword_error").html("Please enter Confirm Password");
                 $("#confirmPassword_error").attr("style","display:block");
                 flag="N";

             }
             else{
                 if(password!=""){
                     if(confirm!=password){
                          $("#confirmPassword_error").html("Please enter same Password");
                          $("#confirmPassword_error").attr("style","display:block");
                          flag="N";
                     }
                 }
             }
             if(secretAns.trim()==""){
                 $("#secretAns_error").html("Please enter Password Answer");
                 $("#secretAns_error").attr("style","display:block");
                 flag="N";

             }
             if (secretQstn == 0) {
                 $("#secretQuestion_error").html("Please select Secret Question");
                 $("#secretQuestion_error").attr("style","display:block");
                 flag="N";
             }
           if (flag == "N")
               e.preventDefault();
            else{
                var userRoleSelected=selectedRole;
                objUserRole=[];
    @*$("input:checkbox[name=regionChk]:checked").each(function () {
        var chkROId=$(this).attr("id");
        var zoId=chkROId.substring(chkROId.indexOf('-') + 1);
        objUserRole.push({ RO: $(this).val(),ZO:zoId });
        });*@
                var ReqModel={UserName:userName,Email:newEmail,Password:password,ConfirmPassword:confirm,SecretQuestion:secretQstn,SecretQuestionAnswer:secretAns,UserRole:"0",FirstName:"",LastName:"",StateId:"0",ActionType:"",TypeManageUsersAddUserRole:objUserRole};
                $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("AddUser", "Security")',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'JSON',
                    data: JSON.stringify(ReqModel),
                    success: function (data, status, xhr) {
                        var v = data;
                          var url = '@Html.Raw(@Url.Action("AddNewUser", "Security",new { UserName = "zzXXyyZZZZZZZzz", Email = "QQPPppSSAAQQ", update = "Yes" }))';
                                url = url.replace("zzXXyyZZZZZZZzz", encodeURIComponent(userName)).replace("QQPPppSSAAQQ", encodeURIComponent(newEmail));
                                window.location.href=url;
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        alert("Error"+ errorMessage);
                    }
                });
             }
       })
       );
        function ShowUserRolesData()
         {
             document.getElementById("userrole-tab").classList.remove("disable");
             document.getElementById("userrole-tab").click();
             document.getElementById("userinfo-tab").classList.add("disable");


         }
         function ShowUserInfoData()
         {
             document.getElementById("userinfo-tab").classList.remove("disable");
             document.getElementById("userinfo-tab").click();
             document.getElementById("userrole-tab").classList.add("disable");


         }
      $("#UserName").on("blur", function() {
          var userName=$("#UserName").val();
          if(userName.trim()==""){
             $("#userName_error").html("Please enter User Name");
             $("#userName_error").attr("style","display:block");

         }
         else{
             if(!(userName.match(userNameCheck))){
                  $("#userName_error").html("Please enter valid User Name");
                  $("#userName_error").attr("style","display:block");
                  $("p.userNote").attr("style","display:block");
             }
             else{
                     $.ajax({
                         type: 'POST',  // http method
                         url: '@Url.Action("ValidateUserName", "Security")',
                         data: { UserName: userName.trim() },  // data to submit
                         dataType: "json",
                         success: function (data, status, xhr) {
                             var v = data;
                             if (status == 'success' && v == '0') {
                                 $("#userName_error").html("User Name already Exists");
                                 $("#userName_error").attr("style","display:block");

                             }
                             else {
                                 $("#userName_error").html("");
                                 $("#userName_error").attr("style","display:none");
                                 $("p.userNote").attr("style","display:none");
                             }
                         }
                     });
                 }
         }
     });
      $("#Email").on("blur", function() {
          var newEmail=$("#Email").val();
          if(newEmail.trim()==""){
             $("#email_error").html("Please enter Email");
             $("#email_error").attr("style","display:block");

         }
         else{
             if(!(newEmail.match(email))){
                  $("#email_error").html("Please enter valid Email");
                  $("#email_error").attr("style","display:block");
             }
             else{
                  $("#email_error").html("");
                  $("#email_error").attr("style","display:none");
             }

         }
     });
      $("#Password").on("blur", function() {
          var password=$("#Password").val();
          if(password.trim()==""){
             $("#password_error").html("Please enter Password");
             $("#password_error").attr("style","display:block");

         }
         else{
            if(!(password.match(passwordCheck))){
                  $("#password_error").html("Please enter valid Password");
                  $("#password_error").attr("style","display:block");
                  $("p.passNote").attr("style","display:block");
             }
             else{
                  $("#password_error").html("");
                  $("#password_error").attr("style","display:none");
                  $("p.passNote").attr("style","display:none");
             }

         }
     });
      $("#ConfirmPassword").on("blur", function() {
          var confirm=$("#ConfirmPassword").val();
          if(confirm.trim()==""){
             $("#confirmPassword_error").html("Please enter Confirm Password");
             $("#confirmPassword_error").attr("style","display:block");

         }
         else{
             var password=$("#Password").val();
             if(password!=""){
                 if(confirm!=password){
                      $("#confirmPassword_error").html("Please enter same Password");
                      $("#confirmPassword_error").attr("style","display:block");
                 }
                 else{
                      $("#confirmPassword_error").html("");
                      $("#confirmPassword_error").attr("style","display:none");
                 }
             }
             else{
                 $("#confirmPassword_error").html("");
                 $("#confirmPassword_error").attr("style","display:none");
             }

         }
     });
     $("#SecretAnswer").on("blur", function() {
          var secretAns=$("#SecretAnswer").val();
          if(secretAns.trim()==""){
             $("#secretAns_error").html("Please enter Password Answer");
             $("#secretAns_error").attr("style","display:block");

         }
         else{
             $("#secretAns_error").html("");
             $("#secretAns_error").attr("style","display:none");

         }
     });
     $("#SecretQuestion").change(function () {
         var id = this.value;
         if (id == 0) {
             $("#secretQuestion_error").html("Please select Secret Question");
             $("#secretQuestion_error").attr("style","display:block");
         }
         else{
             $("#secretQuestion_error").html("");
             $("#secretQuestion_error").attr("style","display:none");
         }
     });
      $("#LocRoleMappingTbl").on('click', '.delete', function (e) {

            var currentRow = $(this).closest("tr");
            var roleId = currentRow.find('.roleId').text();
            var regionIdsList = currentRow.find('.regionId').text();
            var regionIdArr=[];
            if(regionIdsList.indexOf(',')!=-1)
                regionIdArr=regionIdsList.split(',');
            else
                regionIdArr[0]=regionIdsList;
            var zoneId = currentRow.find('.zoneId').text();
              var userName=$("#UserName").val();
             var newEmail=$("#Email").val();
            var userRoleSelected=roleId;
                   objUserRole=[];
                   var rowCount=0;
                   rowCount=$("#LocRoleMappingTbl tr").length;
                   if(rowCount==1){
                        for(var i=0;i<regionIdArr.length;i++){
                            objUserRole.push({ RO: regionIdArr[i],ZO:zoneId });
                        }
                   }
                   var ReqModel={UserName:userName,RoleId:userRoleSelected,TypeManageUsersAddUserRole:objUserRole,UpdateStatus:"Update"};
                   $.ajax({
                       type: 'POST',  // http method
                       url: '@Url.Action("DeleteLocationMapping", "Security")',
                       contentType: "application/json; charset=utf-8",
                       dataType: 'JSON',
                       data: JSON.stringify(ReqModel),
                       success: function (data, status, xhr) {
                           var v = data;
                           if (status == 'success') {

                               var url = '@Html.Raw(@Url.Action("AddNewUser", "Security",new { UserName = "zzXXyyZZZZZZZzz", Email = "QQPPppSSAAQQ", update = "Yes" }))';
                                url = url.replace("zzXXyyZZZZZZZzz", encodeURIComponent(userName)).replace("QQPPppSSAAQQ", encodeURIComponent(newEmail));
                                window.location.href=url;
                           }
                           else {
                               console.log(v);
                           }
                       },
                       error: function (jqXhr, textStatus, errorMessage) {
                           alert("Error"+ errorMessage);
                       }
                   });

        });
</script>