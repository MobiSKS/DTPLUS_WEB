@model HPCL.Common.Models.ViewModel.Merchant.MerchantApprovalModel
@{
    ViewData["Title"] = "Details";
    PagerModel pager = new PagerModel();
    int pageNo = 0;

    if (ViewBag.pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Profile", "Merchant")" class="text_primary">Profile</a> </li>
            <li class="breadcrumb-item font-weight-light">Rejected Merchants</li>
        </ul>
        <div id="reason" class="mb-3 text-center" style="background-color: #a0f1d6;display:none;"></div>
        @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "form1" }))
        {
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="basicInfo" role="tabpanel" aria-labelledby="basicInfo-tab">
                    <div class="w-100">
                        <div class="col-lg-12 col-md-12 col-12 pl-0 pr-md-2 pr-0 py-2">
                            <div class="border-1 rounded border-grey">
                                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Rejected Merchants</p>
                                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-md-2 pr-0 py-3">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="col-lg-6 col-12">
                                            <div class="d-flex align-items-center flex-wrap mb-3">
                                                <label class="font-weight-normal col-md-5 col-12">From Date</label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control date fromdate" })
                                                    </div>
                                                    <span style="display:none" class="error" id="fromDate_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="col-lg-6 col-12">
                                            <div class="d-flex align-items-center flex-wrap mb-3">
                                                <label class="font-weight-normal col-md-5 col-12">To Date</label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control date todate" })
                                                    </div>
                                                    <span style="display:none" class="error" id="toDate_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 d-flex align-items-center justify-content-center mt-2">
                                        <div class="px-2">
                                            <button class="btn btn_primary" id="btnSearch" type="submit">Search</button>
                                        </div>
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" onclick="setDates();">Reset</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        }
        <div id="show_Table">
            @if (Model.MerchantApprovalTableDetails.Count() > 0)
            {
                <div class="table-responsive">
                    <table class="datatable table table-striped table-bordered d-md-table d-block text-nowrap display table-responsive" style="width:100%;" id="merchantRejectedDetails">
                        <thead style="background-color:lightgray;">
                            <tr>

                                <th style="width:10%;">ERP Code</th>
                                <th style="width:10%;">RO</th>
                                <th style="width:20%;">Retail Outlet Name</th>
                                <th style="width:10%;">City</th>
                                <th>Type</th>
                                <th style="width:10%;">Created Date</th>
                                <th style="width:10%;">Rejected Date</th>
                                <th style="width:10%;">Comments</th>
                                <th style="width:10%;">Action</th>
                            </tr>
                        </thead>
                        <tbody id="searchMerchantTableBody">
                            @{
                                int i = 0;
                            }
                            @foreach (var item in Model.MerchantApprovalTableDetails)
                            {
                                i = i + 1;
                                string MerchantIDVal = "";// "30" + @item.ErpCode;
                                                          //asp-route-ERPCode="@item.ErpCode"
                                                          //asp - route - MerchantIDValue = "@MerchantIDVal" asp - route - fromDate = "@Model.FromDate" asp - route - toDate = "@Model.ToDate" asp - route - category = "@Model.CategoryID"
                                <tr>
                                    <td>@item.ErpCode</td>
                                    <td>@item.RegionalOfficeName</td>
                                    <td>@item.RetailOutletName</td>
                                    <td>@item.RetailOutletCity</td>
                                    <td>@item.MerchantTypeName</td>
                                    <td>@item.CreatedDate</td>
                                    <td>@item.RejectedDate</td>
                                    @*asp-route-category="@Model.CategoryID" asp-route-ERPCode="@item.ErpCode"*@
                                    <td><input class="form-control" type="text" id="comments_@i" value="@item.Comments" /><span class="comment_error"></span></td>
                                    <td>
                                        <a class="erp_code text_primary" asp-action="MerchantSummary" asp-route-ERPCode="@item.ErpCode" asp-route-fromDate="@Model.FromDate" asp-route-toDate="@Model.ToDate">View</a>&nbsp;&nbsp;&nbsp;&nbsp;
                                        <a class="erp_code text_primary" asp-action="CreateMerchant" asp-route-MerchantIDValue="@MerchantIDVal" asp-route-fromDate="@Model.FromDate" asp-route-toDate="@Model.ToDate" asp-route-category="" asp-route-ERPCode="@item.ErpCode">Edit</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>



            }
            else
            {
                <div class="mb-3 text-center" style="background-color: #f9c9c9; color: #8d0d0d; border-color: #f3abab;">
                    @Model.Message
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    var fromdate = $("#FromDate").val();
    var todate = $("#ToDate").val();
    var notFoundError = "@ViewBag.NotFoundError";

    $(document).ready(function () {
        $('#merchantRejectedDetails table').DataTable({
            "paging": true,
            "lengthMenu": [5, 10, 20, 50, 100, 200, 500, 1000, 2000],
            "autoWidth": false,
            "oLanguage": {
                "sLengthMenu": "Display _MENU_ Records",
                "info": "Showing _START_ to _END_ of _TOTAL_ Records",
            }
        });

        if (notFoundError == "") {
            if (fromdate == "") {
                $("#FromDate").datepicker({
                    "setDate": new Date(),
                    "autoclose": true,
                    dateFormat: 'dd-mm-yy'
                });
            }
            else {
                $("#FromDate").datepicker({ dateFormat: 'dd-mm-yyyy' });
            }

            if (todate == "") {
                $("#ToDate").datepicker({
                    "setDate": new Date(),
                    "autoclose": true,
                    dateFormat: 'dd-mm-yy'
                });
                setDates();
            }
            else {
                $("#ToDate").datepicker({ dateFormat: 'dd-mm-yyyy' });
            }


        }
        else {
            alert("Details not found");
        }

    });
    $("#btnSearch").on("click", (function (e) {
        var fromD = stringToDate($("#FromDate").val(), "dd-mm-yyyy", "-");
        var toD = stringToDate($("#ToDate").val(), "dd-mm-yyyy", "-");
        var dateflag = checkDates(fromD,toD);
        if (dateflag == "N") {
            $("#show_Table").html("");
            e.preventDefault();
        }

    })
    );
    $(".date").datepicker().on('change.dp', function (e) {
        var fromD = "";
        var toD = "";
        if ($(this).hasClass("fromdate")) {
            fromD = stringToDate($("#FromDate").val(), "mm/dd/yyyy", "/");
            var fromMonth = fromD.getMonth() + 1;
        var fromday = fromD.getDate();
        var fromoutput = (fromday < 10 ? '0' : '') + fromday + '-' +
            (fromMonth < 10 ? '0' : '') + fromMonth + '-' +

            fromD.getFullYear();
        $("#FromDate").val(fromoutput);
        }
        else
            fromD = stringToDate($("#FromDate").val(), "dd-mm-yyyy", "-");
        if ($(this).hasClass("todate")){
            toD = stringToDate($("#ToDate").val(), "mm/dd/yyyy", "/");
            var toMonth = toD.getMonth()+1;
            var today = toD.getDate();
            var tooutput = (today < 10 ? '0' : '') + today + '-' +
                (toMonth < 10 ? '0' : '') + toMonth + '-' +
                toD.getFullYear();
            $("#ToDate").val(tooutput);
        }
        else
            toD = stringToDate($("#ToDate").val(), "dd-mm-yyyy", "-");
        checkDates(fromD,toD);
        $("#show_Table").html("");
    });

    function checkDates(fromD, toD) {
        var dateflag = "Y";
        if (fromD != "" && toD != "") {
            if (fromD > toD) {

                $("#fromDate_error").attr("style", "display:block");
                $("#fromDate_error").html("From Date should be less or equal to To date");
                dateflag = "N";
            }
            else {
                $("#fromDate_error").html("");
                $("#fromDate_error").attr("style", "display:none");
            }
            if (toD > new Date()) {
                $("#toDate_error").attr("style", "display:block");
                $("#toDate_error").html("To Date should be less or equal to Today's date");
                dateflag = "N";
            }
            else {
                $("#toDate_error").html("");
                $("#toDate_error").attr("style", "display:none");
            }
            return dateflag;
        }
    }
    function stringToDate(_date, _format, _delimiter) {
        var formatLowerCase = _format.toLowerCase();
        var formatItems = formatLowerCase.split(_delimiter);
        var dateItems = _date.split(_delimiter);
        var monthIndex = formatItems.indexOf("mm");
        var dayIndex = formatItems.indexOf("dd");
        var yearIndex = formatItems.indexOf("yyyy");
        var month = parseInt(dateItems[monthIndex]);
        month -= 1;
        var formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);
        return formatedDate;
    }
    function setDates() {
        var fromd = new Date();
        var fromMonth = fromd.getMonth();
        var fromday = fromd.getDate();
        var fromoutput = (fromday < 10 ? '0' : '') + fromday + '-' +
            (fromMonth < 10 ? '0' : '') + fromMonth + '-' +
            fromd.getFullYear();

        var d = new Date();
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var tooutput = (day < 10 ? '0' : '') + day + '-' +
            (month < 10 ? '0' : '') + month + '-' +
            d.getFullYear();


        $("#FromDate").val(fromoutput);
        $("#ToDate").val(tooutput);
        $("#fromDate_error").html("");
        $("#toDate_error").html("");
        $("#toDate_error").attr("style", "display:none");
        $("#fromDate_error").attr("style", "display:none");
        $("#show_Table").html("");
    };




</script>