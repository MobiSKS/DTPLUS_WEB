@model HPCL.Common.Models.ViewModel.MyHpOTCCardCustomer.GetCardAllocationActivation
@using HPCL.Common.Resources
<div class="col-lg-12 p-4 p-md-4">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "MyHpOTCCardCustomer")" class="text_primary">My HP (OTC) Card Customer</a> </li>
            <li class="breadcrumb-item font-weight-light">My HP (OTC) Card Allocation & Activation</li>
        </ul>
        <div id="reason" class="mb-3 text-center" style="background-color: #a0f1d6;"></div>
        <form >
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">My HP (OTC) Card Allocation & Activation</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">@Label.ZonalOfc</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.ZonalOfficeId, new SelectList(Model.ZoneMdl, "ZonalOfficeID", "ZonalOfficeName"), new { @class = "form-control", onchange = "getCustomerRegionalOfc()" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">@Label.RegionalOfc</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.RegionalOfficeId, new SelectList(Model.RegionMdl, "RegionalOfficeID", "RegionalOfficeName"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">From Date</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control date fromdate" })
                                            </div>
                                            <span style="display:none" class="error" id="fromDate_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">To Date</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control date todate" })
                                            </div>
                                            <span style="display:none" class="error" id="toDate_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">@Label.CustomerId</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div style="display:none;">@Html.TextBoxFor(m => m.RegionalId)</div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="searchCardActivationandAllocation()">Search</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" id="btnReset" type="button">Reset</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" id="btnDownload" type="button">Download</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </form>
        <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3 toBeHiddenOnSuccess" id="cardActivationandAllocation">

        </div>
        <div class="clearfix"></div>
    </div>
</div>

<script type="text/javascript">
    var fromdate = $("#FromDate").val();
    var todate = $("#ToDate").val();
    $(document).ready(function () {
        $(".toBeHiddenOnSuccess").show();
        if (fromdate == "") {
            $("#FromDate").datepicker({
                "setDate": new Date(),
                "autoclose": true,
                dateFormat: 'dd-mm-yy'
            });
        }
        else {
            $("#FromDate").datepicker({ dateFormat: 'dd-mm-yy' });
        }

        if (todate == "") {
            $("#ToDate").datepicker({
                "setDate": "",
                "autoclose": true,
                dateFormat: 'dd-mm-yy'
            });
            //setDates();
        }
        else {
            $("#ToDate").datepicker({ dateFormat: 'dd-mm-yy' });
        }
    });
    $("#btnReset").click(function () {
        $("#ZonalOfficeId").val(0);
        getCustomerRegionalOfc();
        $("#CustomerId").val("");
        $("#FromDate").val("");
        $("#ToDate").val("");
        $("#fromDate_error").html("");
        $("#toDate_error").html("");
        $("#toDate_error").attr("style", "display:none");
        $("#fromDate_error").attr("style", "display:none");
        $("#cardActivationandAllocation").html("");

    });
    function getCustomerRegionalOfc() {
        var id = $('#ZonalOfficeId :selected').val();
        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetRegionalOfcDetails", "Common")',
            data: { ZonalOfcID: id },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') {
                    $("#RegionalOfficeId").html("");
                    $.each(data, function (i, data) { // bind the dropdown list using json result
                        if (i == 0) {
                            $('<option>',
                                {
                                    value: 0,
                                    text: "-All-"
                                }).html("--All--").appendTo("#RegionalOfficeId");
                            $('<option>',
                                {
                                    value: data.regionalOfficeID,
                                    text: data.regionalOfficeName
                                }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                        }
                        else {
                            $('<option>',
                                {
                                    value: data.regionalOfficeID,
                                    text: data.regionalOfficeName
                                }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                        }

                    });
                }
                else {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error");
            }
        });
    };

    $("#RegionalOfficeId").change(function () {
        var id = this.value;
        $("#RegionalId").val(id);
    });

    function searchCardActivationandAllocation() {
        var fromD = "";
        var toD = "";
        if ($("#FromDate").val() != "")
            fromD = stringToDate($("#FromDate").val());
        if ($("#ToDate").val() != "")
            toD = stringToDate($("#ToDate").val());
        var dateflag = checkDates(fromD, toD);
        if (dateflag == "N") {
            return;
        }
        var zoID = $("#ZonalOfficeId").val();
        var roID = $("#RegionalOfficeId").val();
        var fromDate = $("#FromDate").val();
        var toDate = $("#ToDate").val();
        var customerId = $("#CustomerId").val();
        
        $.ajax({
            type: 'GET',  // http method
            url: '@Url.Action("SearchCardActivationandAllocation", "MyHpOTCCardCustomer")',
            contentType: "application/json; charset=utf-8",
            data: { zonalOfcID: zoID, regionalOfcID: roID, fromDate: fromDate, toDate: toDate, customerId: customerId},
            dataType: "text",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') {
                    $("#cardActivationandAllocation").html(data);
                    $('html, body').animate({
                        scrollTop: $("#cardActivationandAllocation").offset().top
                    }, 2000);
                }
                else {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error");
            }
        });
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $(".date").datepicker().on('change.dp', function (e) {
        var fromD = "";
        var toD = "";
        if ($(this).hasClass("fromdate")) {
            if ($("#FromDate").val() != "") {
                fromD = stringToDate($("#FromDate").val());
                var fromMonth = fromD.getMonth() + 1;
                var fromday = fromD.getDate();
                var fromoutput = (fromday < 10 ? '0' : '') + fromday + '-' +
                    (fromMonth < 10 ? '0' : '') + fromMonth + '-' +

                    fromD.getFullYear();
                $("#FromDate").val(fromoutput);
            }
        }
        else {
            if ($("#FromDate").val() != "")
                fromD = stringToDate($("#FromDate").val());
        }
        if ($(this).hasClass("todate")) {
            if ($("#ToDate").val() != "") {
                toD = stringToDate($("#ToDate").val());
                var toMonth = toD.getMonth() + 1;
                var today = toD.getDate();
                var tooutput = (today < 10 ? '0' : '') + today + '-' +
                    (toMonth < 10 ? '0' : '') + toMonth + '-' +
                    toD.getFullYear();
                $("#ToDate").val(tooutput);
            }
        }
        else {
            if ($("#ToDate").val() != "")
                toD = stringToDate($("#ToDate").val());
        }
        if ($("#ToDate").val() != "")
            checkDates(fromD, toD);

    });

    function checkDates(fromD, toD) {
        var dateflag = "Y";
        if (fromD != "" && toD != "") {
            if (fromD > toD) {

                $("#fromDate_error").attr("style", "display:block");
                $("#fromDate_error").html("From Date should be less or equal to To date");
                dateflag = "N";
            }
            else if (toD > new Date()) {
                $("#toDate_error").attr("style", "display:block");
                $("#toDate_error").html("To Date should be less or equal to Today's date");
                dateflag = "N";
            }
            
            else {
                $("#toDate_error").html("");
                $("#toDate_error").attr("style", "display:none");
                $("#fromDate_error").html("");
                $("#fromDate_error").attr("style", "display:none");
            }
        }
        else if (fromD != "" && toD == "") {
            $("#toDate_error").attr("style", "display:block");
            $("#toDate_error").html("Please Select Both From Date and To Date");
            dateflag = "N";
        }
        return dateflag;
    }
    function stringToDate(_date) {
        if (_date != "") {
            var _delimiter = '';
            var formatLowerCase = "";
            if (_date.includes('/')) {
                _delimiter = '/';
                formatLowerCase = "mm/dd/yyyy";
            }
            else if (_date.includes('-')) {
                _delimiter = '-';
                formatLowerCase = "dd-mm-yyyy";
            }
            var formatItems = formatLowerCase.split(_delimiter);
            var dateItems = _date.split(_delimiter);
            var monthIndex = formatItems.indexOf("mm");
            var dayIndex = formatItems.indexOf("dd");
            var yearIndex = formatItems.indexOf("yyyy");
            var month = parseInt(dateItems[monthIndex]);
            month -= 1;
            var formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);
            return formatedDate;
        }
    }
</script>

