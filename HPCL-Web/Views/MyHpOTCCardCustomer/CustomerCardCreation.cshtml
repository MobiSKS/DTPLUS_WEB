@model HPCL.Common.Models.ViewModel.MyHpOTCCardCustomer.MyHPOTCCardCustomerModel
@using HPCL.Common.Resources
@{
    ViewData["Title"] = "HP (OTC) Card Customer Creation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "MyHpOTCCardCustomer")" class="text_primary">My HP (OTC) Card Profile</a> </li>
            <li class="breadcrumb-item font-weight-light">My HP(OTC) Customer Creation</li>
        </ul>
        <form name="OTCCustomerCardCreationForm" id="OTCCustomerCardCreationForm" method="post" asp-action="CustomerCardCreation" class="w-100" autocomplete="off">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">My HP(OTC) Customer Creation</p>
                        <div class="alert alert-danger mt-3 text-center" id="dvRemarks" style="@(Model.Remarks=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Remarks)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-12 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-2 col-12">Merchant ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-3 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="MerchantId_error"></span>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-12 px-0">
                                            <div class="d-flex align-items-center flex-wrap">
                                                <div class="px-2">
                                                    <button class="btn btn_primary" type="button" id="btnSearch">@Label.Search</button>
                                                </div>
                                                <div class="px-2">
                                                    <button class="btn btn_primary" type="button" id="btnReset">@Label.Reset</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div id="dvHeaderDetails" style="@(Model.LoggedInAs=="MERCHANT" ? "display:block":"display:none")">
                                <div class="d-flex align-items-center flex-wrap pt-3">
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-4 col-12 text-right px-0">
                                                Zonal Office
                                            </div>
                                            <div class="col-md-8 col-12 col-12">
                                                @Html.TextBoxFor(m => m.Zone, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-4 col-12 text-right px-0">
                                                Regional Office
                                            </div>
                                            <div class="col-md-8 col-12 col-12">
                                                @Html.TextBoxFor(m => m.RegionalOffice, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-4 col-12 text-right px-0">
                                                Sales Area
                                            </div>
                                            <div class="col-md-8 col-12 col-12">
                                                @Html.TextBoxFor(m => m.SalesArea, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap ">
                                            <div class="font-weight-bold col-md-4 text-right px-0 col-12">
                                                Outlet Name
                                            </div>
                                            <div class="col-md-8 col-12 col-12">
                                                @Html.TextBoxFor(m => m.OutletName, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvOtherDetails" style="@(Model.LoggedInAs=="MERCHANT" ? "display:block":"display:none")">

                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Application Details</p>
                        <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Form Number <sup class="text-danger">*</sup></label>
                                        <div class="col-md-8 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FormNumber, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="formNumber_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                    <label class="font-weight-normal col-md-4 col-12">Customer/Org.Name <sup class="text-danger">*</sup></label>
                                        <div class="col-md-8 col-12">
                                            <div class="row">
                                                <div class="col-4">
                                                    <div class="custom_select">
                                                        @Html.DropDownListFor(x => x.IndividualOrgNameTitle, new[]{
                                                           new SelectListItem(){ Text = "Title", Value = "0" },
                                                           new SelectListItem(){ Text = "Mr", Value = "Mr"},
                                                           new SelectListItem(){ Text = "Ms", Value = "Ms"},
                                                           new SelectListItem(){ Text = "M/s", Value = "M/s"},
                                                           }, null, new { @class = "form-control px-0" })
                                                    </div>
                                                    <span class="error" id="salutaion_error"></span>
                                                </div>
                                                <div class="col-8 pl-0">
                                                    @Html.TextBoxFor(m => m.IndividualOrgName, new { @class = "form-control", autocomplete = "off", maxlength = "80" })
                                                    <span class="error" id="individualName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Name On Card <sup class="text-danger">*</sup></label>
                                        <div class="col-md-8 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NameOnCard, new { @class = "form-control", autocomplete = "off", maxlength = "22" })
                                                <span class="error" id="nameOnCard_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Income Tax PAN <sup class="text-danger">*</sup></label>
                                        <div class="col-md-6 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.IncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off", maxlength = "10" })
                                                <span class="error" id="incomeTaxPan_error"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-2 col-12 pl-0">
                                            <div class="custom_select">
                                               <button class="btn btn_primary" type="button" id="btnVerify" onclick="ValidatePAN()">Verify</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Communication Address</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="communicationCityName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Pin Code <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationPincode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="communicationPincode_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationStateId, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
                                                    <span class="error" id="comm_states_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationDistrictId, new SelectList(Model.CommunicationDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
                                                    <span class="error" id="comm_district_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
                                            <div class="col-md-8 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationDialCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationPhonePart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationPhonePart2_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Fax </label>
                                            <div class="col-md-8 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationFaxCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationFaxPart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationFaxPart2_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="error" id="comm_faxNumber_error"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Mobile <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationMobileNo, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <div class="error" id="comm_mobileNumber_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", autocomplete = "off", @style = "text-transform:lowercase", maxlength = "50" })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "100" })
                                                    <span class="error" id="comm_address1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "100" })
                                                    <span class="error" id="comm_address2_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0 pt-1">
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="row d-flex align-items-center flex-wrap">
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Card Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CardNumber1, new { @class = "form-control", @readonly = "readonly", maxlength = "16" })
                                                    <span class="error" id="CardNumber1_error"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" id="btnCard1" style="height:30px;" data-toggle="modal" data-target="#myModalCard1" onclick="LoadCard1Deatils()">ADD</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Vehicle Number</label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.VehicleNo1, new { @class = "form-control", maxlength = "10", @style = "text-transform:uppercase" })
                                                    <span class="error" id="VehicleNo1_error"></span>
                                                </div>

                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" id="btnCard1Verify" style="height:30px;padding:6px 8px !important">@Label.Verify</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-5 col-12">Mobile Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.MobileNo1, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="MobileNo1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row d-flex align-items-center flex-wrap">
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Card Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CardNumber2, new { @class = "form-control", @readonly = "readonly", maxlength = "16" })
                                                    <span class="error" id="CardNumber2_error"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" style="height:30px;" id="btnCard2" data-toggle="modal" data-target="#myModalCard2" onclick="LoadCard2Deatils()">ADD</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Vehicle Number </label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.VehicleNo2, new { @class = "form-control", @style = "text-transform:uppercase", maxlength = "10" })
                                                    <span class="error" id="VehicleNo2_error"></span>
                                                </div>

                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" id="btnCard2Verify" style="height:30px;padding: 6px 8px !important;">@Label.Verify</button>
                                            </div>
                                        </div>
                                    </div> 
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-5 col-12">Mobile Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.MobileNo2, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="MobileNo2_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap mt-3">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-1">
                                            <label class="font-weight-normal col-md-6 col-12">Received Copy of Driver License? <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12">
                                                <div class="d-flex align-items-center justify-content-start flex-wrap">
                                                    <div class="d-flex align-items-center mr-3">
                                                        @Html.RadioButtonFor(m => m.CopyofDriverLicense, "Yes", new { @id = "rbtnDriverLicenseYes" })
                                                        <label class="form-check-label ml-1" for="inlineRadio1">Yes</label>
                                                    </div>
                                                    <div class="d-flex align-items-center">
                                                        @Html.RadioButtonFor(m => m.CopyofDriverLicense, "No", new { @id = "rbtnDriverLicenseNo" })
                                                        <label class="form-check-label ml-1" for="inlineRadio2">No</label>
                                                    </div>
                                                </div>
                                                 <span class="error pt-2" id="CopyofDriverLicense_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-1">
                                            <label class="font-weight-normal col-md-8 col-12">Received Copy of Vehicle Registration Certificate? <sup class="text-danger">*</sup></label>
                                            <div class="col-md-4 col-12">
                                                <div class="d-flex align-items-center justify-content-start flex-wrap">
                                                    <div class="d-flex align-items-center mr-3">
                                                        @Html.RadioButtonFor(m => m.CopyofVehicleRegistrationCertificate, "Yes", new { @id = "rbtnVehicleRegistrationYes" })
                                                        <label class="form-check-label ml-1" for="inlineRadio1">Yes</label>
                                                    </div>
                                                    <div class="d-flex align-items-center">
                                                        @Html.RadioButtonFor(m => m.CopyofVehicleRegistrationCertificate, "No", new { @id = "rbtnVehicleRegistrationNo" })
                                                        <label class="form-check-label ml-1" for="inlineRadio2">No</label>
                                                    </div>
                                                </div>
                                                <span class="error pt-2" id="CopyofVehicleRegistrationCertificate_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="d-flex align-items-center justify-content-center mt-4 mb-3">
                                    <div class="px-2">
                                        <button class="btn btn_primary" type="submit" onclick="return ValidateMandatoryFields()">@Label.Submit</button>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>

                </div>
            </div>


            <!-- Modal : Card1 -->
            <div class="modal fade" id="myModalCard1" role="dialog">
                <div class="modal-dialog modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content" style='overflow:scroll; height:400px;'>
                        <div class="modal-header">
                            <h5 class="modal-title">My HP (OTC) Cards</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                         </div>
                        <div class="modal-body">
                            <input type='text' id='txt_searchCard1' placeholder='Search Card Number'  class="form-control mb-3" onkeypress='return isNumberKey(event)' onkeyup='SearchCard1Function()'>
                            <table class="table table-bordered text-nowrap" id="CardsTable1">
                                @*style="display: none"*@
                                <thead>
                                    <tr>
                                        <th>S.No</th>
                                        <th>Card Number</th>
                                    </tr>
                                </thead>
                                <tbody id="cardDetails">
                                </tbody>
                            </table>
                        </div>                        
                    </div>

                </div>
            </div>
            <!-- Modal : Card1 -->
            <!-- Modal : Card2 -->
            <div class="modal fade" id="myModalCard2" role="dialog">
                <div class="modal-dialog  modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content" style='overflow:scroll; height:400px;'>
                         <div class="modal-header">
                             <h5 class="modal-title">My HP (OTC) Cards</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                         </div>
                        <div class="modal-body">
                            <input type='text' id='txt_searchCard2' placeholder='Search Card Number' class="form-control mb-3" onkeypress='return isNumberKey(event)' onkeyup='SearchCard2Function()'>
                            <table class="table table-bordered text-nowrap" id="CardsTable2">
                                @*style="display: none"*@
                                <thead>
                                    <tr>
                                        <th>S.No</th>
                                        <th>Card Number</th>
                                    </tr>
                                </thead>
                                <tbody id="cardDetails">
                                </tbody>
                            </table>
                        </div>
                       
                    </div>

                </div>
            </div>
            <!-- Modal : Card2 -->


            <div style="display:none;">@Html.TextBoxFor(m => m.RegionalOfficeId, new { id = "RegionalOfficeId" })</div>
            <div style="display:none;">@Html.TextBoxFor(m => m.LoggedInAs, new { id = "LoggedInAs" })</div>
            @Html.HiddenFor(model => Model.ExternalPANAPIStatus)
            @Html.HiddenFor(model => Model.ExternalVehicleAPIStatus)
        </form>
    <div class="clearfix"></div>
</div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#OTCCustomerCardCreationForm").on("keypress", function (event) {
            var keyPressed = event.keyCode || event.which;
            if (keyPressed === 13) {
                console.log("You pressed the Enter key!!");
                event.preventDefault();
                return false;
            }
        });

        if (document.getElementById("LoggedInAs").value == "MERCHANT")
        {
            $('#MerchantId').attr('readonly', 'true');
        }

        var dlYesChecked = true;
        var rcYesChecked = true;

        if (!(document.querySelector('input[name="CopyofDriverLicense"]:checked'))) {
            dlYesChecked = false;
        }
        else {
            if (document.querySelector('input[name="CopyofDriverLicense"]:checked').value == "No") {
                dlYesChecked = false;
            }
        }

        if (!(document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked'))) {
            rcYesChecked = false;
        }
        else {
            if (document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked').value == "No") {
                rcYesChecked = false;
            }
        }

        if (dlYesChecked && rcYesChecked) {
            $(":submit").removeAttr("disabled");
        }
        else {
            $(":submit").attr("disabled", true);
        }

        if($("#dvRemarks").html().trim()!="")
        {
             $("#btnSearch").click();
        }

        localStorage.setItem("MOBILENUMBERREADYUSED1", "1");
        localStorage.setItem("MOBILENUMBERREADYUSED2", "1");
        localStorage.setItem("VEHICLEADYUSED1", "1");
        localStorage.setItem("VEHICLEADYUSED2", "1");
        localStorage.setItem("INVALIDVEHICLENO1", "1");
        localStorage.setItem("INVALIDVEHICLENO2", "1");

    });

    $('select').SumoSelect({
     placeholder: '--Select--',
     search: true,
     searchText: 'Enter Text here.'
    });

    $("#btnReset").click(function () {
        window.location.href = '@Url.Action("CustomerCardCreation", "MyHpOTCCardCustomer")';
    });

    $('#MerchantId').keypress(function (e) {
        if (e.keyCode == 13) {  // detect the enter key
            e.preventDefault();
            $('#btnSearch').click();
        }
    });

    $("#MerchantId").on("blur", function () 
    {
        var merchantId = document.getElementById("MerchantId").value.trim();
        if (merchantId == "") 
        {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
        }
        else if (document.getElementById("MerchantId").value.substring(0, 1) != "3") 
        {
            document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
        }
        else if (document.getElementById("MerchantId").value.length < 10) 
        {
            document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
        }
        else
        {
            document.getElementById("MerchantId_error").innerHTML = "";
        }
    });

    $("#btnSearch").click(function () {
        //debugger;
        var merchantId = document.getElementById("MerchantId").value;
        if (merchantId == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please enter Merchant ID";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("MerchantId").value.substring(0, 1) != "3") {
            document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
            return (false);
        }

        if (document.getElementById("MerchantId").value.length < 10) {
            document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
            return (false);
        }


            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetMerchantDetailsByMerchantId", "MyHpOTCCardCustomer")',
                data: { MerchantID: merchantId },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    console.log(data);
                    console.log(status);

                    if (status == 'success') 
                    {
                        if (data == "Failed to load Merchant Details") 
                        {
                            document.getElementById("Zone").value = "";
                            document.getElementById("RegionalOffice").value = "";
                            document.getElementById("SalesArea").value = "";
                            document.getElementById("OutletName").value = "";
                            document.getElementById("RegionalOfficeId").value = "";
                            $("#MerchantId").prop('readonly', false);
                            dvOtherDetails.style.display = "none";
                            dvHeaderDetails.style.display = "none";
                            document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                        }
                        else if(data.status==1)
                        {
                            document.getElementById("Zone").value = data.zonalOfficeName;
                            document.getElementById("RegionalOffice").value = data.regionalOfficeName;
                            document.getElementById("SalesArea").value = data.salesAreaName;
                            document.getElementById("OutletName").value = data.retailOutletName;
                            document.getElementById("RegionalOfficeId").value = data.regionalOfficeId;
                            $("#MerchantId").prop('readonly', true);
                            dvOtherDetails.style.display = "block";
                            dvHeaderDetails.style.display = "block";
                            document.getElementById("MerchantId_error").innerHTML = "";
                        }
                        else
                        {
                            document.getElementById("Zone").value = "";
                            document.getElementById("RegionalOffice").value = "";
                            document.getElementById("SalesArea").value = "";
                            document.getElementById("OutletName").value = "";
                            document.getElementById("RegionalOfficeId").value = "";
                            $("#MerchantId").prop('readonly', false);
                            dvOtherDetails.style.display = "none";
                            dvHeaderDetails.style.display = "none";
                            document.getElementById("MerchantId_error").innerHTML = data.reason;
                        }
                    }
                    else 
                    {
                        $("#MerchantId_error").html("");
                        document.getElementById("Zone").value = "";
                        document.getElementById("RegionalOffice").value = "";
                        document.getElementById("SalesArea").value = "";
                        document.getElementById("OutletName").value = "";
                        $("#MerchantId").prop('readonly', false);
                        document.getElementById("RegionalOfficeId").value = "";
                        dvOtherDetails.style.display = "none";
                        dvHeaderDetails.style.display = "none";
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) 
                {
                    document.getElementById("Zone").value = "";
                    document.getElementById("RegionalOffice").value = "";
                    document.getElementById("SalesArea").value = "";
                    document.getElementById("OutletName").value = "";
                    $("#MerchantId").prop('readonly', false);
                    document.getElementById("RegionalOfficeId").value = "";
                    dvOtherDetails.style.display = "none";
                    dvHeaderDetails.style.display = "none";
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                },
                statusCode: 
                {
                    1024: function () 
                    {
                        document.getElementById("Zone").value = "";
                        document.getElementById("RegionalOffice").value = "";
                        document.getElementById("SalesArea").value = "";
                        document.getElementById("OutletName").value = "";
                        $("#MerchantId").prop('readonly', false);
                        document.getElementById("RegionalOfficeId").value = "";
                        dvOtherDetails.style.display = "none";
                        dvHeaderDetails.style.display = "none";
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    }
                }
            });


    });

    $("#FormNumber").on("blur", function () {
        //debugger;
        var formNumber = document.getElementById("FormNumber").value.trim();
        if (formNumber == "") 
        {
            document.getElementById("formNumber_error").innerHTML = "Form Number field cannot be left blank";
            return (false);
        }
        else 
        {
            if (document.getElementById("FormNumber").value.substring(0, 1) == "0") 
            {
                document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                return false;
            }
            else
            {
                if (document.getElementById("FormNumber").value.length < 10) 
                {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    return false;
                }
                else
                {
                    if (!(document.getElementById("FormNumber").value.match(number))) 
                    {
                        document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                        return false;
                    }
                    else
                    {
                        document.getElementById("formNumber_error").innerHTML = "";
                    }
                }
            }

        }
        
        var formNumberUsed = false;
        localStorage.setItem("FORMNOALREADYUSED", "1");

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckformnumberDuplication", "MyHpOTCCardCustomer")',
            data: { FormNumber: formNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {

                    //if (data == "Failed to load Customer Details")
                    //    document.getElementById("RBEName").value = "";
                    if (data.status == "0") {
                        formNumberUsed = true;
                        document.getElementById("formNumber_error").innerHTML = "Form Number already exists";
                        localStorage.setItem("FORMNOALREADYUSED", "0");
                    }
                    else {
                        formNumberUsed = false;
                        document.getElementById("formNumber_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    formNumberUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //document.getElementById("RBEName").value = "";
            },
            statusCode: {
                1024: function () {
                    //document.getElementById("RBEName").value = "";
                }
            }
        });

    });

    $("#CommunicationStateId").change(function () {
            var id = this.value;

            if (id != 0) {
                $("#comm_states_error").html("");
            }

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetDistrictDetails", "MyHpOTCCardCustomer")',
                data: { Stateid: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') {
                        $("#CommunicationDistrictId").html("");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.districtID,
                                    text: data.districtName
                                }).html(data.districtName).appendTo("#CommunicationDistrictId");
                        });
                        $("#CommunicationDistrictId")[0].sumo.reload();
                    }
                    else {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating District Data");
                }
            });
    });

    function LoadCard1Deatils() {
        //debugger;

        if (document.getElementById("MerchantId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please Enter Merchant ID";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("RegionalOfficeId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Region Id cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }


        var regionalOfficeId = document.getElementById("RegionalOfficeId").value;
        var merchantId = document.getElementById("MerchantId").value;
        var cardNumber2Selected = document.getElementById("CardNumber2").value.trim();


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetAvailableOTCCardByRegionalId", "MyHpOTCCardCustomer")',
            data: { RegionalId: regionalOfficeId, MerchantID : merchantId},
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                console.log(data);
                $("#CardsTable1 td").parent().remove();
                //console.log('Praveen');

                //document.getElementById("NoOfCardsTbl").deleteTHead();
                //console.log(data.lstCardDetails);
                var j=0;
                for (var i = 0; i < data.lstCardDetails.length; i++) {

                    if(cardNumber2Selected=="")
                    {
                      var rows = "<tbody><tr>"
                        + "<td><span class='rowData'>" + (i + 1) + "</span></td>"
                        + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard1Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                    
                        $('#CardsTable1').append(rows);
                    }
                    else
                    {
                       if(data.lstCardDetails[i].cardNo!=cardNumber2Selected)
                       {
                           j=j+1;
                           var rows = "<tbody><tr>"
                            + "<td><span class='rowData'>" + (j) + "</span></td>"
                            + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard1Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                    
                            $('#CardsTable1').append(rows);
                       }
                    }

                }

            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating card Data");
            }


        });


        //document.getElementById('NoOfCardsTbl').style.display = 'table';
        //document.getElementById('NoOfCardsTbl').style.display = 'block';

    }


    function GetCard1Details(o) {
        //debugger;
        var cardNo = o.innerText;

        console.log(cardNo);

        $('#CardNumber1').val(cardNo);
        document.getElementById("CardNumber1_error").innerHTML = "";
        $('#txt_searchCard1').val('');
        $('#myModalCard1').modal('hide');
    }


   function LoadCard2Deatils() {
        //debugger;

        if (document.getElementById("MerchantId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please Enter Merchant ID";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("RegionalOfficeId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Region Id cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }


       var regionalOfficeId = document.getElementById("RegionalOfficeId").value;
       var merchantId = document.getElementById("MerchantId").value;
        var cardNumber1Selected = document.getElementById("CardNumber1").value.trim();

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetAvailableOTCCardByRegionalId", "MyHpOTCCardCustomer")',
            data: { RegionalId: regionalOfficeId, MerchantID: merchantId},
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                console.log(data);
                $("#CardsTable2 td").parent().remove();
                //console.log('Praveen');

                //document.getElementById("NoOfCardsTbl").deleteTHead();
                //console.log(data.lstCardDetails);
                var j=0;
                for (var i = 0; i < data.lstCardDetails.length; i++) 
                {
                    if(cardNumber1Selected=="")
                    {
                       var rows = "<tbody><tr>"
                        + "<td><span class='rowData'>" + (i + 1) + "</span></td>"
                        + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard2Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                       
                        $('#CardsTable2').append(rows);
                    }
                    else
                    {
                        if(data.lstCardDetails[i].cardNo!=cardNumber1Selected)
                        {
                            j=j+1;
                            
                          var rows = "<tbody><tr>"
                            + "<td><span class='rowData'>" + (j) + "</span></td>"
                            + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard2Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                       
                            $('#CardsTable2').append(rows);
                        }
                    }

                }


            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating Vehicle Type Data");
            }


        });



        //document.getElementById('NoOfCardsTbl').style.display = 'table';
        //document.getElementById('NoOfCardsTbl').style.display = 'block';

    }


    function GetCard2Details(o) {
        //debugger;
        var cardNo = o.innerText;

        console.log(cardNo);

        $('#CardNumber2').val(cardNo);
        $('#txt_searchCard2').val('');
        document.getElementById("CardNumber2_error").innerHTML = "";
        $('#myModalCard2').modal('hide');
    }

    $("#IncomeTaxPan").on("blur", function () 
    {
        //debugger;
        var panNumber = document.getElementById("IncomeTaxPan").value.trim();
        localStorage.setItem("PANNOALREADYUSED", "1");
        localStorage.setItem("PANNOANDNAMEMATCHING", "1");
        localStorage.setItem("INVALIDPAN", "1");

        if (panNumber == "") 
        {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            document.getElementById("incomeTaxPan_error").className = "error";
            return (false);
        }
        else 
        {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }

        var panNumberUsed = false;

        document.getElementById("IncomeTaxPan").value = document.getElementById("IncomeTaxPan").value.trim().toUpperCase();
        panNumber = document.getElementById("IncomeTaxPan").value.trim();

        let forthdigitPan = panNumber.substr(3, 1);
        console.log(forthdigitPan);
        if (forthdigitPan != 'P') 
        {
            document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
            document.getElementById("incomeTaxPan_error").className = "error";
            return (false);
        }
        else 
        {
            if ($('#IncomeTaxPan').val().match(pancard)) 
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                document.getElementById("incomeTaxPan_error").className = "error text-success";
            }
            else 
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                return (false);
            }
        }

       
               

        @*$.ajax({
            type: 'POST',
            url: '@Url.Action("CheckPanNoDuplication", "MyHpOTCCardCustomer")',
            data: { PanNo: panNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                var v = data;
                if (status == 'success') {

                    if (data.status == "0") {
                        panNumberUsed = true;
                        document.getElementById("incomeTaxPan_error").innerHTML = "PAN Number already exists";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        localStorage.setItem("PANNOALREADYUSED", "0");
                    }
                    else {
                        panNumberUsed = false;
                        document.getElementById("incomeTaxPan_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    panNumberUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //document.getElementById("RBEName").value = "";
            },
            statusCode: {
                1024: function () {
                    //document.getElementById("RBEName").value = "";
                }
            }
        });

        console.log(panNumberUsed);
        if (panNumberUsed == true) {
            document.getElementById("incomeTaxPan_error").innerHTML = "PAN No already exists";
            document.getElementById("incomeTaxPan_error").className = "error";
            //return (false);
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }*@

        //2nd Validation

        var panno = $('#IncomeTaxPan').val();
        var OrgName = $('#IndividualOrgName').val();
        var correctPANName = '';

        var externalPANAPIStatus="Y";

        externalPANAPIStatus = document.getElementById("ExternalPANAPIStatus").value.trim();

        console.log(externalPANAPIStatus);

        if(externalPANAPIStatus=="Y")
        {

            $.ajax({
                type: 'POST',
                url: "PANValidation/MyHpOTCCardCustomer",
                data: { PANNumber: document.getElementById("IncomeTaxPan").value },
                dataType: "json",
                success: function (data, status, xhr) 
                {
                    //debugger;
                    var jsonData = JSON.parse(data);
                     console.log(jsonData);
                    if (status == 'success' && jsonData['status-code'] == '101') 
                    {
                        //document.applicationForm.IndividualOrgName.value = jsonData["result"]["name"];
                        correctPANName = jsonData["result"]["name"];
                        if (OrgName.toUpperCase() == correctPANName.toUpperCase()) 
                        {
                            localStorage.setItem("PANNOANDNAMEMATCHING", "1");
                        }
                        else 
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Customer Name not match with pan name";
                            document.getElementById("incomeTaxPan_error").className = "error";
                            localStorage.setItem("PANNOANDNAMEMATCHING", "0");
                        }
                        console.log(OrgName);
                        console.log(correctPANName);
                        console.log(localStorage.getItem("PANNOANDNAMEMATCHING"));
                    }
                    else 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        localStorage.setItem("INVALIDPAN", "0");
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) 
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    localStorage.setItem("INVALIDPAN", "0");
                }
            });

        }
        else
        {
            localStorage.setItem("INVALIDPAN", "1");
            localStorage.setItem("PANNOANDNAMEMATCHING", "1");
        }

    });


    function ValidateMandatoryFields() {
        debugger;

        var ret = true;


        if (document.getElementById("MerchantId").value.trim() == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please Enter Merchant ID";
            ret = false;
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("Zone").value.trim() == "") {
            document.getElementById("MerchantId_error").innerHTML = "Click search button to load merchant details";
            ret = false;
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("FormNumber").value.trim() == "") 
        {
            document.getElementById("formNumber_error").innerHTML = "Form Number field cannot be left blank";
            ret = false;
        }
        else 
        {
            if (document.getElementById("FormNumber").value.substring(0, 1) == "0") 
            {
                document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                ret = false;
            }
            else 
            {
                if (document.getElementById("FormNumber").value.length < 10) 
                {
                  document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                  ret = false;
                }
                else
                {
                    if (!(document.getElementById("FormNumber").value.match(number))) 
                    {
                        document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                        ret = false;
                    }
                    else
                    {
                        if (localStorage.getItem("FORMNOALREADYUSED") == 0) 
                        {
                            document.getElementById("formNumber_error").innerHTML = "Form Number already exists";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("formNumber_error").innerHTML = "";
                        }
                    }
                    
                }
            }

            
        }

        if (document.getElementById("IndividualOrgNameTitle").value == "0") {
            document.getElementById("salutaion_error").innerHTML = "Select Title";
            ret = false;
        }
        else {
            document.getElementById("salutaion_error").innerHTML = "";
        }

        if (document.getElementById("IndividualOrgName").value.trim() == "") 
        {
            document.getElementById("individualName_error").innerHTML = "Customer/Org.Name is required";
            ret = false;
        }
        else 
        {
            
            if (!isNaN(document.getElementById("IndividualOrgName").value.trim())) 
            {
                document.getElementById("individualName_error").innerHTML = "Invalid Customer/Org.Name";
                ret = false;
            }
            else 
            {
                if (!document.getElementById("IndividualOrgName").value.trim().match(nameWithSpaceCheck)) 
                {
                    document.getElementById("individualName_error").innerHTML = "Invalid Customer/Org.Name";
                    ret = false;
                }
                else 
                {
                    document.getElementById("individualName_error").innerHTML = "";
                }
            }
            
        }

        if (document.getElementById("NameOnCard").value.trim() == "") 
        {
            document.getElementById("nameOnCard_error").innerHTML = "Name On Card field cannot be left blank";
            ret = false;
        }
        else 
        {
            
            if (!isNaN(document.getElementById("NameOnCard").value.trim())) 
            {
                document.getElementById("nameOnCard_error").innerHTML = "Invalid Name On Card";
                ret = false;
            }
            else 
            {
                if (!document.getElementById("NameOnCard").value.trim().match(nameWithSpaceCheck)) 
                {
                    document.getElementById("nameOnCard_error").innerHTML = "Invalid Name On Card";
                    ret = false;
                }
                else 
                {
                    document.getElementById("nameOnCard_error").innerHTML = "";
                }
            }
            
        }

        if (document.getElementById("IncomeTaxPan").value.trim() == "") 
        {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            document.getElementById("incomeTaxPan_error").className = "error";
            ret = false;
        }
        else 
        {
            
            document.getElementById("IncomeTaxPan").value = document.getElementById("IncomeTaxPan").value.trim().toUpperCase();

            var panNumber = document.getElementById("IncomeTaxPan").value.trim();
            let forthdigitPan = panNumber.substr(3, 1);
            console.log(forthdigitPan);
            if (forthdigitPan != 'P') 
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                ret = false;
            }
            else
            {
                if (!$('#IncomeTaxPan').val().match(pancard)) 
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    ret = false;
                }
                else
                {
                    if (localStorage.getItem("PANNOALREADYUSED") == 0) 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "PAN Number already exists";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if (localStorage.getItem("INVALIDPAN") == 0) 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if (localStorage.getItem("PANNOANDNAMEMATCHING") == 0) 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Customer Name not match with pan name";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                        document.getElementById("incomeTaxPan_error").className = "error text-success";
                    }
                }
            }
            
        }

        if (document.getElementById("CommunicationCityName").value.trim() == "") 
        {
            document.getElementById("communicationCityName_error").innerHTML = "City field cannot be left blank";
            ret = false;
        }
        else {

            if (!isNaN(document.getElementById("CommunicationCityName").value.trim())) 
            {
                document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
                ret = false;
            }
            else 
            {
                if (!document.getElementById("CommunicationCityName").value.match(nameWithSpaceCheck)) 
                {
                    document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
                    ret = false;
                }
                else {
                    document.getElementById("communicationCityName_error").innerHTML = "";
                }
            }
            
        }

        if (document.getElementById("CommunicationPincode").value.trim() == "") 
        {
            document.getElementById("communicationPincode_error").innerHTML = "Pin Code field cannot be left blank";
            ret = false;
        }
        else {
            var pin = document.getElementById("CommunicationPincode").value.trim();

            if (document.getElementById("CommunicationPincode").value.substring(0, 1) == "0") {
                    document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
                    ret = false;
             }
              else {
                document.getElementById("communicationPincode_error").innerHTML = "";
            }

            if (pin.length < 6) {
                document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
                ret = false;
            }
            else {
                document.getElementById("communicationPincode_error").innerHTML = "";
            }

            if (document.getElementById("CommunicationPincode").value.match(pincode)) {
                document.getElementById("communicationPincode_error").innerHTML = "";
            }
            else {
                document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
                ret = false;
            }             
        }


        if (document.getElementById("CommunicationStateId").value.trim() == "0") 
        {
            document.getElementById("comm_states_error").innerHTML = "State field cannot be left blank";
            ret = false;
        }
        else {
            document.getElementById("comm_states_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationDistrictId").value == "0") {
            document.getElementById("comm_district_error").innerHTML = "District field cannot be left blank";
            ret = false;
        }
        else {
            document.getElementById("comm_district_error").innerHTML = "";
        }

        var stdCode = document.getElementById("CommunicationDialCode").value.trim();
        if (stdCode != "") 
        {

            if (stdCode.length < 2 || stdCode.length > 4) 
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else if (!stdCode.match(number))
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "";
            }
        }
        else 
        {
            document.getElementById("CommunicationDialCode_error").innerHTML = "";
        }

        var phno = document.getElementById("CommunicationPhonePart2").value.trim();
        if (phno != "") 
        {
            if (phno.charAt(0) == "0") 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else if (phno.length < 6 || phno.length > 8) 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else if (!phno.match(number))
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
            }
        }
        else 
        {
            document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        }


        var faxCode = document.getElementById("CommunicationFaxCode").value.trim();
        if (faxCode != "") {

            if (faxCode.length < 2 || faxCode.length > 4) 
            {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else if(!faxCode.match(number))
            {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else 
            {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "";
            }
        }
        else 
        {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "";
        }

        var faxphno = document.getElementById("CommunicationFaxPart2").value.trim();
        if (faxphno != "") 
        {
            if (faxphno.charAt(0) == "0") 
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else if (faxphno.length < 6 || faxphno.length > 8) 
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else if (!faxphno.match(number))
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
            }
        }
        else 
        {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
        }


        if (document.getElementById("CommunicationMobileNo").value.trim() == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            ret = false;
        }
        else {
            if(!document.getElementById("CommunicationMobileNo").value.match(phoneno)) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number";
                 ret = false;
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }
        }

        if (document.getElementById("CommunicationEmailid").value.trim() == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            ret = false;
        }
        else {
            if (document.getElementById("CommunicationEmailid").value.match(email)) {
                document.getElementById("comm_email_error").innerHTML = "";
            }
            else {
                document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
                ret = false;
            }
        }

        //if (localStorage.getItem("MOBILENUMBERREADYUSED") == 0) {
        //    document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
        //    ret = false;
        //}
        //else {
        //    document.getElementById("comm_mobileNumber_error").innerHTML = "";
        //}

        //if (localStorage.getItem("EMAILIDALREADYUSED") == 0) {
        //    document.getElementById("comm_email_error").innerHTML = "Email already exists";
        //    return (false);
        //}
        //else {
        //    document.getElementById("comm_email_error").innerHTML = "";
        //}

        if (document.getElementById("CommunicationAddress1").value.trim() == "") 
        {
            document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
            ret = false;
        }
        else {
           
            if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) 
            {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else 
            {
                document.getElementById("comm_address1_error").innerHTML = "";
            }
        }


        if (document.getElementById("CommunicationAddress2").value.trim() == "") 
        {
            document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
            ret = false;
        }
        else 
        {
            if (!isNaN(document.getElementById("CommunicationAddress2").value.trim())) 
            {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else 
            {
                document.getElementById("comm_address2_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationAddress2").value.match(atLeastOneAlphabet)) 
            {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else 
            {
                document.getElementById("comm_address2_error").innerHTML = "";
            }
        }

        if (document.getElementById("CardNumber1").value == "" && document.getElementById("CardNumber2").value == "") 
        {
            document.getElementById("CardNumber1_error").innerHTML = "Card Details required";
            document.getElementById("CardNumber2_error").innerHTML = "";
            ret = false;
        }
        else 
        {
            if (document.getElementById("CardNumber1").value != "" && document.getElementById("CardNumber2").value != "") 
            {
                if (document.getElementById("CardNumber1").value == document.getElementById("CardNumber2").value) 
                {
                    document.getElementById("CardNumber1_error").innerHTML = "Both Card Nos. are same";
                    ret = false;
                }
                else 
                {
                    document.getElementById("CardNumber1_error").innerHTML = "";
                    document.getElementById("CardNumber2_error").innerHTML = "";
                }
            }
            else 
            {
                document.getElementById("CardNumber1_error").innerHTML = "";
                document.getElementById("CardNumber2_error").innerHTML = "";
            }
        }


        if (document.getElementById("MobileNo1").value.trim() == "" && document.getElementById("MobileNo2").value.trim() == "") 
        {
            document.getElementById("MobileNo1_error").innerHTML = "";
            document.getElementById("MobileNo2_error").innerHTML = "";

            if (document.getElementById("CardNumber2").value.trim() != "") 
            {
                document.getElementById("MobileNo2_error").innerHTML = "Mobile Number is required";
            }
            else
            {
                document.getElementById("MobileNo2_error").innerHTML = "";
            }

            if (document.getElementById("CardNumber1").value.trim() != "") 
            {
                document.getElementById("MobileNo1_error").innerHTML = "Mobile Number is required";
            }
            else if (document.getElementById("CardNumber1").value.trim() == "" && document.getElementById("CardNumber2").value.trim()=="") 
            {
                document.getElementById("MobileNo1_error").innerHTML = "Mobile Number is required";
            }

            ret = false;
        }
        else if (document.getElementById("MobileNo1").value.trim() != "" && document.getElementById("MobileNo2").value.trim() != "") 
        {
            
            if (document.getElementById("MobileNo1").value == document.getElementById("MobileNo2").value) 
            {
                var valid=true;
                if ($("#MobileNo1").val().length < 10) 
                {
                    document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                    ret = false;
                    valid=false;
                }
                else 
                {
                    if(!document.getElementById("MobileNo1").value.match(phoneno)) 
                    {
                        document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                        valid=false;
                    }
                    else
                    {
                        document.getElementById("MobileNo1_error").innerHTML = "";
                    }
                }

                if ($("#MobileNo2").val().length < 10) 
                {
                    document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                    ret = false;
                    valid=false;
                }
                else 
                {
                    if(!document.getElementById("MobileNo2").value.match(phoneno)) 
                    {
                        document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                        valid=false;
                    }
                    else
                    {
                        document.getElementById("MobileNo2_error").innerHTML = "";
                    }
                }

                if(valid)
                {
                    document.getElementById("MobileNo2_error").innerHTML = "Both Mobile Nos. are same";
                }
                ret = false;
            }
            else 
            {

                if ($("#MobileNo1").val().length < 10) 
                {
                    document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                    ret = false;
                }
                else 
                {
                    if(!document.getElementById("MobileNo1").value.match(phoneno)) 
                    {
                        document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                        ret = false;
                    }
                    else 
                    {
                        if (localStorage.getItem("MOBILENUMBERREADYUSED1") == 0) 
                        {
                            document.getElementById("MobileNo1_error").innerHTML = "Mobile Number already exists";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("MobileNo1_error").innerHTML = "";
                        }

                    }
                                 
                }


                if ($("#MobileNo2").val().length < 10) 
                {
                    document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                    ret = false;
                }
                else 
                {
                    if(!document.getElementById("MobileNo2").value.match(phoneno)) 
                    {
                        document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                        ret = false;
                    }
                    else 
                    {
                        if (localStorage.getItem("MOBILENUMBERREADYUSED2") == 0) 
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "Mobile Number already exists";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "";
                        }

                    }

                }



            }
            
        }
        else
        {
            if (document.getElementById("CardNumber1").value != "") 
            {
                if (document.getElementById("MobileNo1").value == "") 
                {
                    document.getElementById("MobileNo1_error").innerHTML = "Mobile Number is required";
                    ret = false;
                }
                else 
                {
                    if ($("#MobileNo1").val().length < 10) 
                    {
                        document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                        ret = false;
                    }
                    else 
                    {
                        if(!document.getElementById("MobileNo1").value.match(phoneno)) 
                        {
                            document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                            ret = false;
                        }
                        else 
                        {
                             if (localStorage.getItem("MOBILENUMBERREADYUSED1") == 0) 
                            {
                                document.getElementById("MobileNo1_error").innerHTML = "Mobile Number already exists";
                                ret = false;
                            }
                            else 
                            {
                                document.getElementById("MobileNo1_error").innerHTML = "";
                            }

                        }
                      

                    }

                }
            }
            

             if (document.getElementById("CardNumber2").value != "") 
             {
                if (document.getElementById("MobileNo2").value == "") 
                {
                    document.getElementById("MobileNo2_error").innerHTML = "Mobile Number is required";
                    ret = false;
                }
                else 
                {
                    if ($("#MobileNo2").val().length < 10) 
                    {
                        document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                        ret = false;
                    }
                    else 
                    {
                        if(!document.getElementById("MobileNo2").value.match(phoneno)) 
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "";
                        }

                        if (localStorage.getItem("MOBILENUMBERREADYUSED2") == 0) 
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "Mobile Number already exists";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "";
                        }

                    }

                    
                }
            }
            
        }

        if (document.getElementById("VehicleNo1").value.trim() != "" || document.getElementById("VehicleNo2").value.trim() != "") 
        {
            var VehicleValid=true;
            if (document.getElementById("VehicleNo1").value.trim().toUpperCase() == document.getElementById("VehicleNo2").value.trim().toUpperCase()) 
            {

                if (!(document.getElementById("VehicleNo1").value.match(forVehicleNo))) 
                {
                    document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                    VehicleValid=false;
                }
                else
                {
                    if ($("#VehicleNo1").val().length < 6 || $("#VehicleNo1").val().length > 10) 
                    {
                        document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                        VehicleValid=false;
                    }
                    else 
                    {
                       document.getElementById("VehicleNo1_error").innerHTML = "";
                    }
                }

                if(VehicleValid)
                {
                  document.getElementById("VehicleNo2_error").innerHTML = "Both Vehicle Nos. are same";
                }

                ret = false;
            }
            else 
            {
                if (document.getElementById("VehicleNo1").value != "") //Vehicle length min-6 max 10
                { 
                    if (!(document.getElementById("VehicleNo1").value.match(forVehicleNo))) 
                    {
                        document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                        ret = false;
                    }
                    else
                    {
                        if ($("#VehicleNo1").val().length < 6 || $("#VehicleNo1").val().length > 10) 
                        {
                            document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                            ret = false;
                        }
                        else 
                        {
                            if (localStorage.getItem("VEHICLEADYUSED1") == 0) 
                            {
                                document.getElementById("VehicleNo1_error").innerHTML = "Vehicle No already exists";
                                ret = false;
                            }
                            else if (localStorage.getItem("INVALIDVEHICLENO1") == 0) 
                            {
                                document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                                ret = false;
                            }
                            else 
                            {
                                document.getElementById("VehicleNo1_error").innerHTML = "";
                            }
                        }
                    }
                }
                else 
                {
                    document.getElementById("VehicleNo1_error").innerHTML = "";
                }

                if (document.getElementById("VehicleNo2").value != "")  //Vehicle length min-6 max 10
                {
                    if (!(document.getElementById("VehicleNo2").value.match(forVehicleNo))) 
                    {
                        document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                        ret = false;
                    }
                    else
                    {
                        if ($("#VehicleNo2").val().length < 6 || $("#VehicleNo2").val().length > 10) 
                        {
                            document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                            ret = false;
                        }
                        else 
                        {
                            if (localStorage.getItem("VEHICLEADYUSED2") == 0) 
                            {
                                document.getElementById("VehicleNo2_error").innerHTML = "Vehicle No already exists";
                                ret = false;
                            }
                            else if (localStorage.getItem("INVALIDVEHICLENO2") == 0) 
                            {
                                document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                                ret = false;
                            }
                            else 
                            {
                                document.getElementById("VehicleNo2_error").innerHTML = "";
                            }
                        }
                    }
                }
                else 
                {
                    document.getElementById("VehicleNo2_error").innerHTML = "";
                }
            }            
        }

        if (document.getElementById("CardNumber1").value.trim() != "") 
        {
            if (document.getElementById("CardNumber1").value.length < 16 || document.getElementById("CardNumber1").value.length > 16) 
            {
                document.getElementById("CardNumber1_error").innerHTML = "Invalid Card Number.";
                ret = false;
            }
            else if (!(document.getElementById("CardNumber1").value.match(number))) 
            {
                document.getElementById("CardNumber1_error").innerHTML = "Invalid Card Number.";
                ret = false;
            }
        }

        if (document.getElementById("CardNumber2").value.trim() != "") 
        {
            if (document.getElementById("CardNumber2").value.length < 16 || document.getElementById("CardNumber2").value.length > 16) 
            {
                document.getElementById("CardNumber2_error").innerHTML = "Invalid Card Number.";
                ret = false;
            }
            else if (!(document.getElementById("CardNumber2").value.match(number))) 
            {
                document.getElementById("CardNumber2_error").innerHTML = "Invalid Card Number.";
                ret = false;
            }
        }
        
        if (!(document.querySelector('input[name="CopyofDriverLicense"]:checked'))) {
            document.getElementById("CopyofDriverLicense_error").innerHTML = "Please select Received Copy of Driver License?";
            ret = false;
        }
        else {
            if (document.querySelector('input[name="CopyofDriverLicense"]:checked').value == "No") {
                document.getElementById("CopyofDriverLicense_error").innerHTML = "select Yes option to enable save";
                ret = false;
            }
            else {
                document.getElementById("CopyofDriverLicense_error").innerHTML = "";
            }
        }

        if (!(document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked'))) {
            document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "Please select Received Copy of Vehicle Registration Certificate?";
            ret = false;
        }
        else {
            if (document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked').value == "No") {
                document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "select Yes option to enable save";
                ret = false;
            }
            else {
                document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "";
            }
        }
        
        console.log(ret);
        return ret;
    }

    $("#CommunicationMobileNo").on("blur", function () {
        //debugger;
        var communicationMobile = document.getElementById("CommunicationMobileNo").value.trim();
        if (communicationMobile == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            return (false);
        }
        else 
        {
            if(!document.getElementById("CommunicationMobileNo").value.match(phoneno)) 
            {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number";
                return (false);
            }
            else 
            {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }
        }
        
        localStorage.setItem("MOBILENUMBERREADYUSED", "1");

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckMobilNoDuplication", "MyHpOTCCardCustomer")',
            data: { MobileNo: communicationMobile },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {

                    //console.log('Test');
                    //console.log(data.status);
                    //console.log(data.reason);
                    if (data.status == "0") {
                        document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
                        localStorage.setItem("MOBILENUMBERREADYUSED", "0");
                    }
                    else {
                        document.getElementById("comm_mobileNumber_error").innerHTML = "";
                    }
                }
                else {
                    document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
                }
            }
        });*@

    });

    $("#CommunicationEmailid").on("blur", function () {
        //debugger;
        var communicationEmail = document.getElementById("CommunicationEmailid").value.trim();
        if (communicationEmail == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "";
        }

        var emailUsed = false;
        localStorage.setItem("EMAILIDALREADYUSED", "1");

        if (communicationEmail.match(email)) {
            document.getElementById("comm_email_error").innerHTML = "";
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            return (false);
        }

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckEmailDuplication", "MyHpOTCCardCustomer")',
            data: { Emailid: communicationEmail },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                if (status == 'success') {

                    //if (data == "Failed to load Customer Details")
                    //console.log('Test');
                    //console.log(data.status);
                    //console.log(data.reason);
                    if (data.status == "0") {
                        emailUsed = true;
                        document.getElementById("comm_email_error").innerHTML = "Email already exists";
                        localStorage.setItem("EMAILIDALREADYUSED", "0");
                    }
                    else {
                        emailUsed = false;
                        document.getElementById("comm_email_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    document.getElementById("comm_email_error").innerHTML = "Email already exists";
                    emailUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("comm_email_error").innerHTML = "Email already exists";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("comm_email_error").innerHTML = "Email already exists";
                }
            }
        });*@

    });

    function RemoveSpecialChar(txtName) {
        if (txtName.value != '' && txtName.value.match(/^[\w ]+$/) == null) {
            txtName.value = txtName.value.replace(/[\W]/g, '');
        }
    }


    $("#btnCard1Verify").click(function () {
        debugger;
        localStorage.setItem("INVALIDVEHICLENO1", "1");
        var vehicleNo = document.getElementById("VehicleNo1").value;
        if (vehicleNo == "") {
            document.getElementById("VehicleNo1_error").innerHTML = "Vehicle Number is required";
            return (false);
        }
        else {
            document.getElementById("VehicleNo1_error").innerHTML = "";
        }

        if (document.getElementById("VehicleNo1").value != "") //Vehicle length min-6 max 10
        { 
            if ($("#VehicleNo1").val().length < 6 || $("#VehicleNo1").val().length > 10) 
            {
                document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                return (false);
            }
            else 
            {
               document.getElementById("VehicleNo1_error").innerHTML = "";
            }
        }
        else 
        {
            document.getElementById("VehicleNo1_error").innerHTML = "";
        }

        var externalVehicleAPIStatus="Y";

        externalVehicleAPIStatus = document.getElementById("ExternalVehicleAPIStatus").value.trim();

        console.log(externalVehicleAPIStatus);

        if(externalVehicleAPIStatus=="Y")
        {
            $.ajax({
                type: 'POST',  // http method
                url: "CheckVehicleRegistrationValid/MyHpOTCCardCustomer",
                data: { RegistrationNumber: vehicleNo },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    //debugger;
                    var jsonData = JSON.parse(data);
                    if (status == 'success' && jsonData['statusCode'] == '101') 
                    {
                        document.getElementById("VehicleNo1_error").innerHTML = "";
                        console.log(jsonData);
                        console.log(document.getElementById("VehicleNo1_error").innerHTML);
                    }
                    else 
                    {
                        document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                        localStorage.setItem("INVALIDVEHICLENO1", "0");
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) 
                {
                    document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                    localStorage.setItem("INVALIDVEHICLENO1", "0");
                }
            });
        }
        else
        {
            document.getElementById("VehicleNo1_error").innerHTML = "";
            localStorage.setItem("INVALIDVEHICLENO1", "1");
        }

    });


    $("#btnCard2Verify").click(function () {
        debugger;
        localStorage.setItem("INVALIDVEHICLENO2", "1");
        var vehicleNo = document.getElementById("VehicleNo2").value;
        if (vehicleNo == "") {
            document.getElementById("VehicleNo2_error").innerHTML = "Vehicle Number is required";
            return (false);
        }
        else 
        {
            document.getElementById("VehicleNo2_error").innerHTML = "";
        }

        if (document.getElementById("VehicleNo2").value != "") //Vehicle length min-6 max 10
        { 
            if ($("#VehicleNo2").val().length < 6 || $("#VehicleNo2").val().length > 10) 
            {
                document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                return (false);
            }
            else 
            {
               document.getElementById("VehicleNo2_error").innerHTML = "";
            }
        }
        else 
        {
            document.getElementById("VehicleNo2_error").innerHTML = "";
        }


        var externalVehicleAPIStatus="Y";

        externalVehicleAPIStatus = document.getElementById("ExternalVehicleAPIStatus").value.trim();

        console.log(externalVehicleAPIStatus);

        if(externalVehicleAPIStatus=="Y")
        {

            $.ajax({
                type: 'POST',  // http method
                url: "CheckVehicleRegistrationValid/MyHpOTCCardCustomer",
                data: { RegistrationNumber: vehicleNo },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    //debugger;
                    var jsonData = JSON.parse(data);
                    if (status == 'success' && jsonData['statusCode'] == '101') 
                    {
                        document.getElementById("VehicleNo2_error").innerHTML = "";
                        console.log(jsonData);
                        console.log(document.getElementById("VehicleNo2_error").innerHTML);
                    }
                    else 
                    {
                        document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                        localStorage.setItem("INVALIDVEHICLENO2", "0");
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) 
                {
                    document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                    localStorage.setItem("INVALIDVEHICLENO2", "0");
                }
            });

        }
        else
        {
            document.getElementById("VehicleNo2_error").innerHTML = "";
            localStorage.setItem("INVALIDVEHICLENO2", "1");
        }


    });

    $('#VehicleNo1').keydown(function (e) {
        var k = e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 8 || // Backspaces
            k == 46 || //Delete
            (!e.shiftKey && k >= 48 && k <= 57); // 0-9

        if (!ok) {
            e.preventDefault();
        }
    });

    $('#VehicleNo2').keydown(function (e) {
        var k = e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 8 || // Backspaces
            k == 46 || //Delete
            (!e.shiftKey && k >= 48 && k <= 57); // 0-9

        if (!ok) {
            e.preventDefault();
        }
    });

    $("#IncomeTaxPan").keydown(function (e) {
        var k = e.keyCode || e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 9 || //tab
            k == 46 || //del
            k == 8 || // backspaces
            (!e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)

        if (!ok || (e.ctrlKey && e.altKey)) {
            e.preventDefault();
        }
    });

    $("#CommunicationPincode").on("blur", function () {
        //debugger;
        var communicationPinCode = document.getElementById("CommunicationPincode").value;
        if (communicationPinCode == "") {
            document.getElementById("communicationPincode_error").innerHTML = "Pin Code field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("communicationPincode_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationPincode").value.substring(0, 1) == "0") {
            document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            return false;
        }
        else {
                document.getElementById("communicationPincode_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationPincode").value.length < 6) {
            document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            return false;
        }
        else {
                document.getElementById("communicationPincode_error").innerHTML = "";
        }        

        if (document.getElementById("CommunicationPincode").value.match(pincode)) {
                document.getElementById("communicationPincode_error").innerHTML = "";
        }
        else {
            document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            ret = false;
        } 
                
    });

    $("#MobileNo1").on("blur", function () 
    {
        debugger;
        localStorage.setItem("MOBILENUMBERREADYUSED1", "1");

        var mobileNo2 = document.getElementById("MobileNo2").value.trim();
        var mobileNo1 = document.getElementById("MobileNo1").value.trim();
        var cardNumber2 = document.getElementById("CardNumber2").value.trim();
        var cardNumber1 = document.getElementById("CardNumber1").value.trim();

        if (mobileNo1 == "") 
        {
            if(cardNumber2=="")
            {
              document.getElementById("MobileNo1_error").innerHTML = "Mobile Number is required";
              return (false);
            }
            else
            {
                 if(cardNumber1!="")
                 {
                   document.getElementById("MobileNo1_error").innerHTML = "Mobile Number is required";
                   return (false);
                 }
                 else
                 {
                      document.getElementById("MobileNo1_error").innerHTML = "";
                 }
            }
        }
        else 
        {
            if (document.getElementById("MobileNo1").value.substring(0, 1) == "0") 
            {
               document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
               return false;
            }
            else 
            {
                if (document.getElementById("MobileNo1").value.length < 10) 
                {
                    document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                    return false;
                }
                else 
                {
                    if(!document.getElementById("MobileNo1").value.match(phoneno)) 
                    {
                        document.getElementById("MobileNo1_error").innerHTML = "Invalid Mobile Number";
                        return false;
                    }
                    else 
                    {
                        if(mobileNo2!="")
                        {
                            if(mobileNo1==mobileNo2)
                            {
                                document.getElementById("MobileNo1_error").innerHTML = "Both Mobile Nos. are same";
                                return false;
                            }
                            else
                            {
                                if(document.getElementById("MobileNo2_error").innerHTML.toUpperCase()=="BOTH MOBILE NOS. ARE SAME")
                                {
                                    document.getElementById("MobileNo2_error").innerHTML = "";
                                }
                            }
                        }
                        else
                        {
                            document.getElementById("MobileNo1_error").innerHTML = "";
                        }
                    }
                }
            }
            
            
        }

        if(mobileNo1!="")
        {
         
            $.ajax({
                type: 'POST',   
                url: '@Url.Action("CheckMobilNoAlreadyUsedForOTCCard", "MyHpOTCCardCustomer")',
                data: { MobileNo: mobileNo1 }, 
                dataType: "json",
                success: function (data, status, xhr) {
                    console.log(data);
                    console.log(status);

                    if (status == 'success') 
                    {
                        console.log('Test');
                        console.log(data.status);
                        console.log(data.reason);
                        if (data.status == "0") 
                        {
                            document.getElementById("MobileNo1_error").innerHTML = "Mobile Number already exists";
                            localStorage.setItem("MOBILENUMBERREADYUSED1", "0");
                        }
                        else 
                        {
                            document.getElementById("MobileNo1_error").innerHTML = "";
                        }
                    }
                    else 
                    {
                        document.getElementById("MobileNo1_error").innerHTML = "Mobile Number already exists";
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) 
                {
                    document.getElementById("MobileNo1_error").innerHTML = "Mobile Number already exists";
                },
                statusCode: {
                    1024: function () {
                        document.getElementById("MobileNo1_error").innerHTML = "Mobile Number already exists";
                    }
                }
            });

        }

    });

    $("#MobileNo2").on("blur", function () 
    {
        debugger;
        localStorage.setItem("MOBILENUMBERREADYUSED2", "1");

        var mobileNo1 = document.getElementById("MobileNo1").value.trim();
        var mobileNo2 = document.getElementById("MobileNo2").value.trim();

        if (mobileNo2 == "") 
        {
            if(document.getElementById("CardNumber2").value.trim()!="")
            {
               document.getElementById("MobileNo2_error").innerHTML = "Mobile Number is required";
               return (false);
            }
            else
            {
                document.getElementById("MobileNo2_error").innerHTML = "";
            }
        }
        else 
        {
            if (document.getElementById("MobileNo2").value.substring(0, 1) == "0") 
            {
               document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
               return false;
            }
            else 
            {
                if (document.getElementById("MobileNo2").value.length < 10) 
                {
                    document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                    return false;
                }
                else 
                {
                    if(!document.getElementById("MobileNo2").value.match(phoneno)) 
                    {
                        document.getElementById("MobileNo2_error").innerHTML = "Invalid Mobile Number";
                        return false;
                    }
                    else 
                    {
                        if(mobileNo1!="")
                        {
                            if(mobileNo1==mobileNo2)
                            {
                                document.getElementById("MobileNo2_error").innerHTML = "Both Mobile Nos. are same";
                                return false;
                            }
                            else
                            {
                                if(document.getElementById("MobileNo1_error").innerHTML.toUpperCase()=="BOTH MOBILE NOS. ARE SAME")
                                {
                                    document.getElementById("MobileNo1_error").innerHTML = "";
                                }
                            }
                        }
                        else
                        {
                            document.getElementById("MobileNo2_error").innerHTML = "";
                        }
                    }
                }
            }

           
        }
        
        if(mobileNo2!="")
        {

            $.ajax({
                type: 'POST',   
                url: '@Url.Action("CheckMobilNoAlreadyUsedForOTCCard", "MyHpOTCCardCustomer")',
                data: { MobileNo: mobileNo2 }, 
                dataType: "json",
                success: function (data, status, xhr) {
                    console.log(data);
                    console.log(status);

                    if (status == 'success') {

                        console.log('Test');
                        console.log(data.status);
                        console.log(data.reason);
                        if (data.status == "0") {
                            document.getElementById("MobileNo2_error").innerHTML = "Mobile Number already exists";
                            localStorage.setItem("MOBILENUMBERREADYUSED2", "0");
                        }
                        else {
                            document.getElementById("MobileNo2_error").innerHTML = "";
                        }
                    }
                    else {
                        document.getElementById("MobileNo2_error").innerHTML = "Mobile Number already exists";
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    document.getElementById("MobileNo2_error").innerHTML = "Mobile Number already exists";
                },
                statusCode: {
                    1024: function () {
                        document.getElementById("MobileNo2_error").innerHTML = "Mobile Number already exists";
                    }
                }
            });

        }

    });

    function SearchCard1Function() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("txt_searchCard1");
        filter = input.value.toUpperCase();
        table = document.getElementById("CardsTable1");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function SearchCard2Function() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("txt_searchCard2");
        filter = input.value.toUpperCase();
        table = document.getElementById("CardsTable2");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    $("#CommunicationCityName").on("blur", function () {
        //debugger;
        var cityName = document.getElementById("CommunicationCityName").value.trim();
        if (cityName == "") {
            document.getElementById("communicationCityName_error").innerHTML = "City field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("communicationCityName_error").innerHTML = "";
        }

        if (!isNaN(document.getElementById("CommunicationCityName").value.trim())) {
            document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
            return false;
        }
        else {
            document.getElementById("communicationCityName_error").innerHTML = "";
        }

        if (!document.getElementById("CommunicationCityName").value.match(nameWithSpaceCheck)) {
            document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
            return false;
        }
        else {
            document.getElementById("communicationCityName_error").innerHTML = "";
        }

    });

    $("#CommunicationAddress1").on("blur", function () {
        //debugger;
        var address = document.getElementById("CommunicationAddress1").value.trim();
        if (address == "") {
            document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }

            if (address.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address1_error").innerHTML = "";
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                return (false);
            }
        }     

    });

    $("#CommunicationAddress2").on("blur", function () {
        //debugger;
        var address = document.getElementById("CommunicationAddress2").value.trim();
        if (address == "") {
            document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationAddress2").value.trim())) {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address2_error").innerHTML = "";
            }

            if (address.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address2_error").innerHTML = "";
            }
            else {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                return (false);
            }
        }       

    });

    $("#IndividualOrgName").on("blur", function () {
        //debugger;
        var individualOrgName = document.getElementById("IndividualOrgName").value.trim();
        if (individualOrgName == "") {
            document.getElementById("individualName_error").innerHTML = "Customer/Org.Name is required";
            return (false);
        }
        else {
             document.getElementById("individualName_error").innerHTML = "";
        }

         if (!isNaN(individualOrgName)) {
                document.getElementById("individualName_error").innerHTML = "Invalid Customer/Org.Name";
                return false;
             }
            else {
                document.getElementById("individualName_error").innerHTML = "";
            }

        if (!individualOrgName.match(nameWithSpaceCheck)) {
            document.getElementById("individualName_error").innerHTML = "Invalid Customer/Org.Name";
            return false;
        }
        else {
            document.getElementById("individualName_error").innerHTML = "";
        }
    });

    $("#NameOnCard").on("blur", function () {
        //debugger;
        var nameOnCard = document.getElementById("NameOnCard").value.trim();
        if (nameOnCard == "") {
            document.getElementById("nameOnCard_error").innerHTML = "Name On Card field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }

        if (!isNaN(document.getElementById("NameOnCard").value.trim())) {
            document.getElementById("nameOnCard_error").innerHTML = "Invalid Name On Card";
            return false;
        }
        else {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }

        if (!document.getElementById("NameOnCard").value.match(nameWithSpaceCheck)) {
            document.getElementById("nameOnCard_error").innerHTML = "Invalid Name On Card";
            return false;
        }
        else {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }
    });
        
    $('input[type=radio][name=CopyofDriverLicense]').change(function () {

        var rcYesChecked = true;
        if (this.value == "Yes") {

            if (!(document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked'))) {
                rcYesChecked = false;
            }
            else {
                if (document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked').value == "No") {
                    rcYesChecked = false;
                }
            }

            if (rcYesChecked) {
                $(":submit").removeAttr("disabled");
            }
            else {
                $(":submit").attr("disabled", true);
            }

        } else if (this.value == "No") {

            $(":submit").attr("disabled", true);
        }

    });

    $('input[type=radio][name=CopyofVehicleRegistrationCertificate]').change(function () {

        var dlYesChecked = true;
        if (this.value == "Yes") {

            if (!(document.querySelector('input[name="CopyofDriverLicense"]:checked'))) {
                dlYesChecked = false;
            }
            else {
                if (document.querySelector('input[name="CopyofDriverLicense"]:checked').value == "No") {
                    dlYesChecked = false;
                }
            }

            if (dlYesChecked) {
                $(":submit").removeAttr("disabled");
            }
            else {
                $(":submit").attr("disabled", true);
            }

        } else if (this.value == "No") {

            $(":submit").attr("disabled", true);
        }

    });

    $("#CommunicationDistrictId").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#comm_district_error").html("");
        }
    });

    $("#IndividualOrgNameTitle").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#salutaion_error").html("");
        }
    });

    $("#VehicleNo1").on("blur", function () 
    {
        //debugger;
        localStorage.setItem("VEHICLEADYUSED1", "1");
        localStorage.setItem("INVALIDVEHICLENO1", "1");

        var vehicleNo2 = document.getElementById("VehicleNo2").value.trim();
        var vehicleNo1 = document.getElementById("VehicleNo1").value.trim();
        if (vehicleNo1!= "") 
        {
            if (!(document.getElementById("VehicleNo1").value.match(forVehicleNo))) 
            {
                document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                return false;
            }
            else
            {
                if ($("#VehicleNo1").val().length < 6 || $("#VehicleNo1").val().length > 10) 
                {
                    document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                    return false;
                }
                else 
                {
                    if(vehicleNo2!="")
                    {
                        if(vehicleNo1.toUpperCase()==vehicleNo2.toUpperCase())
                        {
                            if(document.getElementById("VehicleNo2_error").innerHTML!="Invalid Vehicle Number")
                            {
                                document.getElementById("VehicleNo1_error").innerHTML = "Both Vehicle Nos. are same";
                                return false;
                            }
                            else
                            {
                                document.getElementById("VehicleNo1_error").innerHTML = "";
                            }

                        }
                        else
                        {
                            document.getElementById("VehicleNo1_error").innerHTML = "";

                            if(document.getElementById("VehicleNo2_error").innerHTML.toUpperCase()=="BOTH VEHICLE NOS. ARE SAME")
                            {
                                document.getElementById("VehicleNo2_error").innerHTML = "";
                            }
                        }
                    }
                    else
                    {
                        document.getElementById("VehicleNo1_error").innerHTML = "";
                    }

                }
            }
            
         
               $.ajax({
                    type: 'POST',  // http method
                    url: "CheckVechileNoUsed/MyHpOTCCardCustomer",
                    data: { VechileNo: vehicleNo1 },  // data to submit
                    dataType: "json",
                    success: function (data, status, xhr) 
                    {
                        console.log(data);
                        if (data.status == "0") 
                        {
                            document.getElementById("VehicleNo1_error").innerHTML = "Vechile No already exists";
                            localStorage.setItem("VEHICLEADYUSED1", "0");
                        }
                        else 
                        {
                          document.getElementById("VehicleNo1_error").innerHTML = "";
                        }
                    },
                    error: function (jqXhr, textStatus, errorMessage) 
                    {
                      document.getElementById("VehicleNo1_error").innerHTML = "Vechile No already exists";
                        
                    }
                });

         }
         else
         {
             document.getElementById("VehicleNo1_error").innerHTML = "";
         }

    });

    $("#VehicleNo2").on("blur", function () 
    {
        //debugger;
        localStorage.setItem("VEHICLEADYUSED2", "1");
        localStorage.setItem("INVALIDVEHICLENO2", "1");

        var vehicleNo2 = document.getElementById("VehicleNo2").value.trim();
        var vehicleNo1 = document.getElementById("VehicleNo1").value.trim();

        if(vehicleNo2!="")
        {
            if (!(document.getElementById("VehicleNo2").value.match(forVehicleNo))) 
            {
                document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                return false;
            }
            else
            {
                if ($("#VehicleNo2").val().length < 6 || $("#VehicleNo2").val().length > 10) 
                {
                    document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                    return false;
                }
                else 
                {
                    if(vehicleNo1!="")
                    {
                        if(vehicleNo1.toUpperCase()==vehicleNo2.toUpperCase())
                        {
                            if(document.getElementById("VehicleNo1_error").innerHTML!="Invalid Vehicle Number")
                            {
                                document.getElementById("VehicleNo2_error").innerHTML = "Both Vehicle Nos. are same";
                                return false;
                            }
                            else
                            {
                                document.getElementById("VehicleNo2_error").innerHTML = "";
                            }

                        }
                        else
                        {
                            document.getElementById("VehicleNo2_error").innerHTML = "";

                            if(document.getElementById("VehicleNo1_error").innerHTML.toUpperCase()=="BOTH VEHICLE NOS. ARE SAME")
                            {
                                document.getElementById("VehicleNo1_error").innerHTML = "";
                            }
                        }
                    }
                    else
                    {
                        document.getElementById("VehicleNo2_error").innerHTML = "";
                    }

                }
            }
            
         
               $.ajax({
                    type: 'POST',  // http method
                    url: "CheckVechileNoUsed/MyHpOTCCardCustomer",
                    data: { VechileNo: vehicleNo2 },  // data to submit
                    dataType: "json",
                    success: function (data, status, xhr) 
                    {
                        console.log(data);
                        if (data.status == "0") 
                        {
                            document.getElementById("VehicleNo2_error").innerHTML = "Vechile No already exists";
                            localStorage.setItem("VEHICLEADYUSED2", "0");
                        }
                        else 
                        {
                            document.getElementById("VehicleNo2_error").innerHTML = "";
                        }
                    },
                    error: function (jqXhr, textStatus, errorMessage) 
                    {
                      document.getElementById("VehicleNo2_error").innerHTML = "Vechile No already exists";
                        
                    }
                });

         }
         else
         {
             document.getElementById("VehicleNo2_error").innerHTML = "";
         }


    });

    $("#CommunicationDialCode").on("blur", function () 
    {
        //debugger;
        var stdCode = document.getElementById("CommunicationDialCode").value.trim();
        if (stdCode != "") 
        {

            if (stdCode.length < 2 || stdCode.length > 4) 
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else
            {
                if (!stdCode.match(number))
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "";
                }
            }
        }
        else 
        {
            document.getElementById("CommunicationDialCode_error").innerHTML = "";
        }

  });

  $("#CommunicationPhonePart2").on("blur", function () 
   {
        //debugger;
        var phno = document.getElementById("CommunicationPhonePart2").value.trim();
        if (phno != "") 
        {
            if (phno.charAt(0) == "0") 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                return false;
            }
            else if (phno.length < 6 || phno.length > 8) 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                return false;
            }
            else
            {
                if (!phno.match(number))
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else 
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
                }
            }

        }
        else 
        {
            document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        }

  });

  $("#CommunicationFaxCode").on("blur", function () 
   {
        //debugger;
    var faxCode = document.getElementById("CommunicationFaxCode").value.trim();
    if (faxCode != "") {
        if (faxCode.length < 2 || faxCode.length > 4) {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
            return false;
        }
        else
        {
            if (!faxCode.match(number))
            {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("CommunicationFaxCode_error").innerHTML = "";
    }

  });

  $("#CommunicationFaxPart2").on("blur", function () 
  {
        //debugger;
    var faxphno = document.getElementById("CommunicationFaxPart2").value.trim();
    if (faxphno != "") {
        if (faxphno.charAt(0) == "0") {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
            return false;
        }
        else if (faxphno.length < 6 || faxphno.length > 8) {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
            return false;
        }
        else
        {
            if (!faxphno.match(number))
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
            }
        }

    }
    else
    {
        document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
    }

  });

function ValidatePAN()
{
    debugger;
    var panno = $('#IncomeTaxPan').val().trim();
    var OrgName = $('#IndividualOrgName').val().trim();
    var correctPANName = '';

    if (panno == '')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
        document.getElementById("incomeTaxPan_error").className = "error";
        return (false);
    }

    if (OrgName == '')
    {
        document.getElementById("individualName_error").innerHTML = "Customer/Org.Name is required";
        //alert('Customer/Org.Name is required');
        return (false);
    }

    if ($('#IncomeTaxPan').val().match(pancard))
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
        document.getElementById("incomeTaxPan_error").className = "error text-success";
    }
    else
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        return (false);
    }

    //solo Propritorship 4th Char Pan should be 'P'
    let forthdigitPan = panno.substr(3, 1);
    console.log(forthdigitPan);
    if (forthdigitPan != 'P')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        //alert('Please Enter Valid Income Tax PAN');
        return (false);
    }
    else
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
        document.getElementById("incomeTaxPan_error").className = "error text-success";
    }


    var externalPANAPIStatus = "Y";

    externalPANAPIStatus = document.getElementById("ExternalPANAPIStatus").value.trim();

    console.log(externalPANAPIStatus);

    if (externalPANAPIStatus == "Y")
    {

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("PANValidation", "Customer")',
            data: { PANNumber: panno },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                var jsonData = JSON.parse(data);
                if (status == 'success' && jsonData['status-code'] == '101') {

                    console.log(jsonData);
                    //document.applicationForm.IndividualOrgName.value = jsonData["result"]["name"];
                    correctPANName = jsonData["result"]["name"];

                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                    document.getElementById("incomeTaxPan_error").className = "error text-success";

                    console.log(correctPANName);
                    console.log(OrgName);
                    if (correctPANName.toUpperCase() != OrgName.toUpperCase()) {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Customer Name not match with pan name";
                        document.getElementById("incomeTaxPan_error").className = "error";
                    }
                    else {
                        document.getElementById("incomeTaxPan_error").innerHTML = "";
                        document.getElementById("incomeTaxPan_error").className = "error text-success";
                    }

                }
                else {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    console.log(jsonData['status-code']);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                console.log(jsonData['status-code']);
                document.getElementById("incomeTaxPan_error").className = "error";
            }
        });
    }
    
}

</script>