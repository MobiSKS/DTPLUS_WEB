@model HPCL.Common.Models.ViewModel.MyHpOTCCardCustomer.MyHPOTCCardCustomerModel
@using HPCL.Common.Resources
@{
    ViewData["Title"] = "HP (OTC) Card Customer Creation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 p-4 p-md-4">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "MyHpOTCCardCustomer")" class="text_primary">My HP (OTC) Card Profile</a> </li>
            <li class="breadcrumb-item font-weight-light">My HP (OTC) Card Customer Creation </li>
        </ul>
        <form name="OTCCustomerCardCreationForm" method="post" asp-action="CustomerCardCreation" class="w-100" autocomplete="off">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">My HP (OTC) Card Customer Creation</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Merchant ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="MerchantId_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" id="btnSearch">@Label.Search</button>
                                        </div>
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" id="btnReset">@Label.Reset</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div id="dvHeaderDetails" style="@(Model.LoggedInAs=="MERCHANT" ? "display:block":"display:none")">
                                <div class="d-flex align-items-center flex-wrap pt-3">
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-5 col-12">
                                                Zonal Office
                                            </div>
                                            <div class="col-md-7 col-12 col-12">
                                                @Html.TextBoxFor(m => m.Zone, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-5 col-12 px-0">
                                                Regional Office
                                            </div>
                                            <div class="col-md-7 col-12 col-12">
                                                @Html.TextBoxFor(m => m.RegionalOffice, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-5 col-12 px-0">
                                                Sales Area
                                            </div>
                                            <div class="col-md-7 col-12 col-12 px-0">
                                                @Html.TextBoxFor(m => m.SalesArea, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap ">
                                            <div class="font-weight-bold col-md-5 col-12">
                                                Outlet Name
                                            </div>
                                            <div class="col-md-7 col-12 col-12 px-0">
                                                @Html.TextBoxFor(m => m.OutletName, new { @class = "form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvOtherDetails" style="@(Model.LoggedInAs=="MERCHANT" ? "display:block":"display:none")">

                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Application Details</p>
                        <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Form Number <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FormNumber, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="formNumber_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                    <label class="font-weight-normal offset-md-1 col-md-4 col-12">Customer/Org.Name <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="row">
                                                <div class="col-4">
                                                    <div class="custom_select">
                                                        @Html.DropDownListFor(x => x.IndividualOrgNameTitle, new[]{
                                                           new SelectListItem(){ Text = "Title", Value = "0" },
                                                           new SelectListItem(){ Text = "Mr", Value = "Mr"},
                                                           new SelectListItem(){ Text = "Ms", Value = "Ms"},
                                                           new SelectListItem(){ Text = "M/s", Value = "M/s"},
                                                           }, null, new { @class = "form-control px-0" })
                                                    </div>
                                                    <span class="error" id="salutaion_error"></span>
                                                </div>
                                                <div class="col-8 pl-0">
                                                    @Html.TextBoxFor(m => m.IndividualOrgName, new { @class = "form-control", autocomplete = "off", maxlength = "80" })
                                                    <span class="error" id="customername_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Name On Card <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NameOnCard, new { @class = "form-control", autocomplete = "off", maxlength = "22" })
                                                <span class="error" id="nameOnCard_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Income Tax PAN <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.IncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off", maxlength = "10" })
                                                <span class="error" id="incomeTaxPan_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Communication Address</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="communicationCityName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal offset-md-1 col-md-4 col-12">Pin Code <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationPincode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="communicationPincode_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationStateId, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
                                                    <span class="error" id="comm_states_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal offset-md-1 col-md-4 col-12">District <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationDistrictId, new SelectList(Model.CommunicationDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
                                                    <span class="error" id="comm_district_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
                                            <div class="col-md-7 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationDialCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationPhonePart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationPhonePart2_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal offset-md-1 col-md-4 col-12">Fax </label>
                                            <div class="col-md-7 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationFaxCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationFaxPart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationFaxPart2_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="error" id="comm_faxNumber_error"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Mobile <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationMobileNo, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <div class="error" id="comm_mobileNumber_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal offset-md-1 col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", autocomplete = "off", @style = "text-transform:lowercase", maxlength = "50" })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="comm_address1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal offset-md-1 col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="comm_address2_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0 pt-1">
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Card Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CardNumber1, new { @class = "form-control", @readonly = "readonly" })
                                                    <span class="error" id="CardNumber1_error"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" id="btnCard1" style="height:30px;" data-toggle="modal" data-target="#myModalCard1" onclick="LoadCard1Deatils()">ADD</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Vehicle Number</label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.VehicleNo1, new { @class = "form-control", maxlength = "10", @style = "text-transform:uppercase" })
                                                    <span class="error" id="VehicleNo1_error"></span>
                                                </div>

                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" id="btnCard1Verify" style="height:30px;">@Label.Verify</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-5 col-12">Mobile Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.MobileNo1, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="MobileNo1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Card Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CardNumber2, new { @class = "form-control", @readonly = "readonly" })
                                                    <span class="error" id="CardNumber2_error"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" style="height:30px;" id="btnCard2" data-toggle="modal" data-target="#myModalCard2" onclick="LoadCard2Deatils()">ADD</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Vehicle Number </label>
                                            <div class="col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.VehicleNo2, new { @class = "form-control", @style = "text-transform:uppercase", maxlength = "10" })
                                                    <span class="error" id="VehicleNo2_error"></span>
                                                </div>

                                            </div>
                                            <div class="col-md-2 px-0">
                                                <button class="btn btn_primary" type="button" id="btnCard2Verify" style="height:30px;">@Label.Verify</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-5 col-12">Mobile Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.MobileNo2, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="MobileNo2_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-1">
                                            <label class="font-weight-normal col-md-5 col-12">Copy of Driver License <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="d-flex align-items-center justify-content-start flex-wrap">
                                                    <div class="d-flex align-items-center mr-3">
                                                        @Html.RadioButtonFor(m => m.CopyofDriverLicense, "Yes", new { @id = "rbtnDriverLicenseYes" })
                                                        <label class="form-check-label ml-1" for="inlineRadio1">Yes</label>
                                                    </div>
                                                    <div class="d-flex align-items-center">
                                                        @Html.RadioButtonFor(m => m.CopyofDriverLicense, "No", new { @id = "rbtnDriverLicenseNo" })
                                                        <label class="form-check-label ml-1" for="inlineRadio2">No</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <span class="error" id="CopyofDriverLicense_error"></span>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-1">
                                            <label class="font-weight-normal col-md-6 col-12">Copy of Vehicle Registration Certificate <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12">
                                                <div class="d-flex align-items-center justify-content-start flex-wrap">
                                                    <div class="d-flex align-items-center mr-3">
                                                        @Html.RadioButtonFor(m => m.CopyofVehicleRegistrationCertificate, "Yes", new { @id = "rbtnVehicleRegistrationYes" })
                                                        <label class="form-check-label ml-1" for="inlineRadio1">Yes</label>
                                                    </div>
                                                    <div class="d-flex align-items-center">
                                                        @Html.RadioButtonFor(m => m.CopyofVehicleRegistrationCertificate, "No", new { @id = "rbtnVehicleRegistrationNo" })
                                                        <label class="form-check-label ml-1" for="inlineRadio2">No</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <span class="error" id="CopyofVehicleRegistrationCertificate_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="d-flex align-items-center justify-content-center mt-0 mb-3">
                                    <div class="px-2">
                                        <button class="btn btn_primary" type="submit" onclick="return ValidateMandatoryFields()">@Label.Submit</button>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>

                </div>
            </div>


            <!-- Modal : Card1 -->
            <div class="modal fade" id="myModalCard1" role="dialog">
                <div class="modal-dialog modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content" style='overflow:scroll; height:400px;'>
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                         </div>
                        <div class="modal-body">
                            <input type='text' id='txt_searchCard1' placeholder='Search Card Number'  class="form-control mb-3" onkeypress='return isNumberKey(event)' onkeyup='SearchCard1Function()'>
                            <table class="table table-bordered text-nowrap" id="CardsTable1">
                                @*style="display: none"*@
                                <thead>
                                    <tr>
                                        <th>Serial No</th>
                                        <th>Card Number</th>
                                    </tr>
                                </thead>
                                <tbody id="cardDetails">
                                </tbody>
                            </table>
                        </div>                        
                    </div>

                </div>
            </div>
            <!-- Modal : Card1 -->
            <!-- Modal : Card2 -->
            <div class="modal fade" id="myModalCard2" role="dialog">
                <div class="modal-dialog  modal-lg">

                    <!-- Modal content-->
                    <div class="modal-content" style='overflow:scroll; height:400px;'>
                         <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                         </div>
                        <div class="modal-body">
                            <input type='text' id='txt_searchCard2' placeholder='Search Card Number' class="form-control mb-3" onkeypress='return isNumberKey(event)' onkeyup='SearchCard2Function()'>
                            <table class="table table-bordered text-nowrap" id="CardsTable2">
                                @*style="display: none"*@
                                <thead>
                                    <tr>
                                        <th>Serial No</th>
                                        <th>Card Number</th>
                                    </tr>
                                </thead>
                                <tbody id="cardDetails">
                                </tbody>
                            </table>
                        </div>
                       
                    </div>

                </div>
            </div>
            <!-- Modal : Card2 -->


            <div style="display:none;">@Html.TextBoxFor(m => m.RegionalOfficeId, new { id = "RegionalOfficeId" })</div>
            <div style="display:none;">@Html.TextBoxFor(m => m.LoggedInAs, new { id = "LoggedInAs" })</div>
        </form>
    <div class="clearfix"></div>
</div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if (document.getElementById("LoggedInAs").value == "MERCHANT")
        {
            $('#MerchantId').attr('readonly', 'true');
        }
    });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode = 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $("#btnReset").click(function () {
        document.getElementById("Zone").value = "";
        document.getElementById("RegionalOffice").value = "";
        document.getElementById("SalesArea").value = "";
        document.getElementById("OutletName").value = "";
        document.getElementById("RegionalOfficeId").value = "";
        dvOtherDetails.style.display = "none";
        dvHeaderDetails.style.display = "none";
        document.getElementById("MerchantId_error").innerHTML = "";
        document.getElementById("FormNumber").value = "";
        document.getElementById("IndividualOrgName").value = "";
        document.getElementById("NameOnCard").value = "";
        document.getElementById("IncomeTaxPan").value = "";
        document.getElementById("CommunicationCityName").value = "";
        document.getElementById("CommunicationPincode").value = "";
        document.getElementById("CommunicationDialCode").value = "";
        document.getElementById("CommunicationPhonePart2").value = "";
        document.getElementById("CommunicationFaxCode").value = "";
        document.getElementById("CommunicationFaxPart2").value = "";
        document.getElementById("CommunicationMobileNo").value = "";
        document.getElementById("CommunicationEmailid").value = "";
        document.getElementById("CommunicationAddress1").value = "";
        document.getElementById("CommunicationAddress2").value = "";
        document.getElementById("CardNumber1").value = "";
        document.getElementById("VehicleNo1").value = "";
        document.getElementById("MobileNo1").value = "";
        document.getElementById("CardNumber2").value = "";
        document.getElementById("VehicleNo2").value = "";
        document.getElementById("MobileNo2").value = "";
        document.getElementById("IndividualOrgNameTitle").value="0"
        document.getElementById("CommunicationStateId").value = "0"
        document.getElementById("CommunicationDistrictId").value = "0"
        document.getElementById("formNumber_error").innerHTML = "";
        document.getElementById("salutaion_error").innerHTML = "";
        document.getElementById("customername_error").innerHTML = "";
        document.getElementById("nameOnCard_error").innerHTML = "";
        document.getElementById("incomeTaxPan_error").innerHTML = "";
        document.getElementById("communicationCityName_error").innerHTML = "";
        document.getElementById("communicationPincode_error").innerHTML = "";
        document.getElementById("comm_states_error").innerHTML = "";
        document.getElementById("comm_district_error").innerHTML = "";
        document.getElementById("CommunicationDialCode_error").innerHTML = "";
        document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        document.getElementById("CommunicationFaxCode_error").innerHTML = "";
        document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
        document.getElementById("comm_faxNumber_error").innerHTML = "";
        document.getElementById("comm_mobileNumber_error").innerHTML = "";
        document.getElementById("comm_email_error").innerHTML = "";
        document.getElementById("comm_address1_error").innerHTML = "";
        document.getElementById("comm_address2_error").innerHTML = "";
        document.getElementById("CardNumber1_error").innerHTML = "";
        document.getElementById("VehicleNo1_error").innerHTML = "";
        document.getElementById("MobileNo1_error").innerHTML = "";
        document.getElementById("CardNumber2_error").innerHTML = "";
        document.getElementById("VehicleNo2_error").innerHTML = "";
        document.getElementById("MobileNo2_error").innerHTML = "";
        
        if (document.getElementById("LoggedInAs").value == "MERCHANT") {
            $("#MerchantId").prop('readonly', true);
        }
        else {
            $("#MerchantId").prop('readonly', false);
            document.getElementById("MerchantId").value = "";
        }
    });


    $("#btnSearch").click(function () {
        //debugger;
        var merchantId = document.getElementById("MerchantId").value;
        if (merchantId == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please enter Merchant ID";
             //$("#merchantId").focus;
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("MerchantId").value.substring(0, 1) != "3") {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID should be 10 digit number starting with 3";
            document.getElementById("MerchantId").focus();
            return (false);
        }

        if (document.getElementById("MerchantId").value.length < 10) {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID should be 10 digit number";
            document.getElementById("MerchantId").focus();
            return (false);
        }

        //var found = false;

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetMerchantDetailsByMerchantId", "MyHpOTCCardCustomer")',
                data: { MerchantID: merchantId },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    console.log(data);
                    console.log(status);

                    if (status == 'success') {
                        document.getElementById("Zone").value = data.zonalOfficeName;
                        document.getElementById("RegionalOffice").value = data.regionalOfficeName;
                        document.getElementById("SalesArea").value = data.salesAreaName;
                        document.getElementById("OutletName").value = data.retailOutletName;
                        document.getElementById("RegionalOfficeId").value = data.regionalOfficeId;
                        $("#MerchantId").prop('readonly', true);
                        dvOtherDetails.style.display = "block";
                        dvHeaderDetails.style.display = "block";
                        document.getElementById("MerchantId_error").innerHTML = "";

                        if (data == "Failed to load Merchant Details") {
                            document.getElementById("Zone").value = "";
                            document.getElementById("RegionalOffice").value = "";
                            document.getElementById("SalesArea").value = "";
                            document.getElementById("OutletName").value = "";
                            document.getElementById("RegionalOfficeId").value = "";
                            $("#MerchantId").prop('readonly', false);
                            dvOtherDetails.style.display = "none";
                            dvHeaderDetails.style.display = "none";
                            document.getElementById("MerchantId_error").innerHTML = "Merchant Id does not exist";
                        }
                    }
                    else {
                        $("#MerchantId_error").html("");
                        document.getElementById("Zone").value = "";
                        document.getElementById("RegionalOffice").value = "";
                        document.getElementById("SalesArea").value = "";
                        document.getElementById("OutletName").value = "";
                        $("#MerchantId").prop('readonly', false);
                        document.getElementById("RegionalOfficeId").value = "";
                        dvOtherDetails.style.display = "none";
                        dvHeaderDetails.style.display = "none";
                        document.getElementById("MerchantId_error").innerHTML = "Merchant Id does not exist";
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    document.getElementById("Zone").value = "";
                    document.getElementById("RegionalOffice").value = "";
                    document.getElementById("SalesArea").value = "";
                    document.getElementById("OutletName").value = "";
                    $("#MerchantId").prop('readonly', false);
                    document.getElementById("RegionalOfficeId").value = "";
                    dvOtherDetails.style.display = "none";
                    dvHeaderDetails.style.display = "none";
                    document.getElementById("MerchantId_error").innerHTML = "Merchant Id does not exist";
                },
                statusCode: {
                    1024: function () {
                        document.getElementById("Zone").value = "";
                        document.getElementById("RegionalOffice").value = "";
                        document.getElementById("SalesArea").value = "";
                        document.getElementById("OutletName").value = "";
                        $("#MerchantId").prop('readonly', false);
                        document.getElementById("RegionalOfficeId").value = "";
                        dvOtherDetails.style.display = "none";
                        dvHeaderDetails.style.display = "none";
                        document.getElementById("MerchantId_error").innerHTML = "Merchant Id does not exist";
                    }
                }
            });


    });

    $("#FormNumber").on("blur", function () {
        //debugger;
        var formNumber = document.getElementById("FormNumber").value;
        if (formNumber == "") {
            document.getElementById("formNumber_error").innerHTML = "Form No field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }


        if (document.getElementById("FormNumber").value.substring(0, 1) == "0") {
            document.getElementById("formNumber_error").innerHTML = "Form No should not start with 0";
            document.getElementById("FormNumber").value = "";
            document.getElementById("FormNumber").focus();
            return false;
        }

        if (document.getElementById("FormNumber").value.length < 10) {
            document.getElementById("formNumber_error").innerHTML = "Form No length must be 10 digit";
            document.getElementById("FormNumber").value = "";
            document.getElementById("FormNumber").focus();
            return false;
        }

        var formNumberUsed = false;
        localStorage.setItem("FORMNOALREADYUSED", "1");

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckformnumberDuplication", "MyHpOTCCardCustomer")',
            data: { FormNumber: formNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {

                    //if (data == "Failed to load Customer Details")
                    //    document.getElementById("RBEName").value = "";
                    if (data.status == "0") {
                        formNumberUsed = true;
                        document.getElementById("formNumber_error").innerHTML = "Form No is already used";
                        localStorage.setItem("FORMNOALREADYUSED", "0");
                    }
                    else {
                        formNumberUsed = false;
                        document.getElementById("formNumber_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    formNumberUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //document.getElementById("RBEName").value = "";
            },
            statusCode: {
                1024: function () {
                    //document.getElementById("RBEName").value = "";
                }
            }
        });

        //console.log(fromNumberUsed);
        if (formNumberUsed == true) {
            document.getElementById("formNumber_error").innerHTML = "Form No is already used";
            //return (false);
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }

    });

    $("#CommunicationStateId").change(function () {
            var id = this.value;

            if (id != 0) {
                $("#comm_states_error").html("");
            }

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetDistrictDetails", "MyHpOTCCardCustomer")',
                data: { Stateid: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') {
                        $("#CommunicationDistrictId").html("");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.districtID,
                                    text: data.districtName
                                }).html(data.districtName).appendTo("#CommunicationDistrictId");
                        });
                    }
                    else {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating District Data");
                }
            });
    });

    function LoadCard1Deatils() {
        debugger;

        if (document.getElementById("MerchantId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please Enter Merchant Id";
            //$("#MerchantId").focus;
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("RegionalOfficeId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Region Id cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }


        var regionalOfficeId = document.getElementById("RegionalOfficeId").value;
        var merchantId = document.getElementById("MerchantId").value;


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetAvailableOTCCardByRegionalId", "MyHpOTCCardCustomer")',
            data: { RegionalId: regionalOfficeId, MerchantID : merchantId},
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                console.log(data);
                $("#CardsTable1 td").parent().remove();
                //console.log('Praveen');

                //document.getElementById("NoOfCardsTbl").deleteTHead();
                //console.log(data.lstCardDetails);

                for (var i = 0; i < data.lstCardDetails.length; i++) {

                    var rows = "<tbody><tr>"
                        + "<td><span class='rowData'>" + (i + 1) + "</span></td>"
                        + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard1Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                    //+ "<td><span class='rowData CustReferenceNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></td>"
                    //+ "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='ViewCardDetails(this," + s + ")' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"


                    $('#CardsTable1').append(rows);

                    //console.log(rows);
                }


            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating card Data");
            }


        });


        debugger;

        //document.getElementById('NoOfCardsTbl').style.display = 'table';
        //document.getElementById('NoOfCardsTbl').style.display = 'block';

    }


    function GetCard1Details(o) {
        debugger;
        var cardNo = o.innerText;

        console.log(cardNo);

        $('#CardNumber1').val(cardNo);
        $('#txt_searchCard1').val('');
        $('#myModalCard1').modal('hide');
    }


   function LoadCard2Deatils() {
        debugger;

        if (document.getElementById("MerchantId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please Enter Merchant Id";
            //$("#MerchantId").focus;
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("RegionalOfficeId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Region Id cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }


       var regionalOfficeId = document.getElementById("RegionalOfficeId").value;
       var merchantId = document.getElementById("MerchantId").value;


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetAvailableOTCCardByRegionalId", "MyHpOTCCardCustomer")',
            data: { RegionalId: regionalOfficeId, MerchantID: merchantId},
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                console.log(data);
                $("#CardsTable2 td").parent().remove();
                //console.log('Praveen');

                //document.getElementById("NoOfCardsTbl").deleteTHead();
                //console.log(data.lstCardDetails);

                for (var i = 0; i < data.lstCardDetails.length; i++) {

                    var rows = "<tbody><tr>"
                        + "<td><span class='rowData'>" + (i + 1) + "</span></td>"
                        + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard2Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                    //+ "<td><span class='rowData CustReferenceNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></td>"
                    //+ "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='ViewCardDetails(this," + s + ")' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"


                    $('#CardsTable2').append(rows);

                    //console.log(rows);
                }


            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating Vehicle Type Data");
            }


        });



        //document.getElementById('NoOfCardsTbl').style.display = 'table';
        //document.getElementById('NoOfCardsTbl').style.display = 'block';

    }


    function GetCard2Details(o) {
        debugger;
        var cardNo = o.innerText;

        console.log(cardNo);

        $('#CardNumber2').val(cardNo);
        $('#txt_searchCard2').val('');
        $('#myModalCard2').modal('hide');
    }

    $("#IncomeTaxPan").on("blur", function () {
        //debugger;
        var panNumber = document.getElementById("IncomeTaxPan").value;


        if (panNumber == "") {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }

        var panNumberUsed = false;
        localStorage.setItem("PANNOALREADYUSED", "1");

        var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}$/;

        if ($('#IncomeTaxPan').val().match(regex)) {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN is valid";
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN is not valid";
            document.getElementById("IncomeTaxPan").value = "";
            return (false);
        }

        @*$.ajax({
            type: 'POST',
            url: '@Url.Action("CheckPanNoDuplication", "MyHpOTCCardCustomer")',
            data: { PanNo: panNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                var v = data;
                if (status == 'success') {

                    if (data.status == "0") {
                        panNumberUsed = true;
                        document.getElementById("incomeTaxPan_error").innerHTML = "PAN No is already used";
                        localStorage.setItem("PANNOALREADYUSED", "0");
                    }
                    else {
                        panNumberUsed = false;
                        document.getElementById("incomeTaxPan_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    panNumberUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //document.getElementById("RBEName").value = "";
            },
            statusCode: {
                1024: function () {
                    //document.getElementById("RBEName").value = "";
                }
            }
        });

        console.log(panNumberUsed);
        if (panNumberUsed == true) {
            document.getElementById("incomeTaxPan_error").innerHTML = "PAN No is already used";
            //return (false);
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }*@

        //2nd Validation

        var result = false;

        var panno = $('#IncomeTaxPan').val();
        var OrgName = $('#IndividualOrgName').val();
        var correctPANName = '';
        localStorage.setItem("PANNOANDNAMEMATCHING", "1");
        //localStorage.setItem("PANNOANDNAMEMATCHING", "0");

        //$.ajax({
        //    type: 'POST',
        //    url: "PANValidation/MyHpOTCCardCustomer",
        //    data: { PANNumber: document.getElementById("IncomeTaxPan").value },
        //    dataType: "json",
        //    success: function (data, status, xhr) {
        //        //debugger;
        //        var jsonData = JSON.parse(data);
        //        if (status == 'success' && jsonData['status-code'] == '101') {
        //            result = true;

        //            console.log(jsonData);
        //            //document.applicationForm.IndividualOrgName.value = jsonData["result"]["name"];
        //            correctPANName = jsonData["result"]["name"];
        //            if (OrgName.toUpperCase() == correctPANName.toUpperCase()) {
        //                localStorage.setItem("PANNOANDNAMEMATCHING", "1");
        //            }
        //            else {
        //                result = false;
        //                document.getElementById("incomeTaxPan_error").innerHTML = "Your pan card name not match with pan card name";
        //                localStorage.setItem("PANNOANDNAMEMATCHING", "0");
        //            }
        //            console.log(OrgName);
        //            console.log(correctPANName);
        //            console.log(localStorage.getItem("PANNOANDNAMEMATCHING"));
        //        }
        //        else {
        //            document.getElementById("incomeTaxPan_error").innerHTML = "Invalid PAN Number";
        //            //document.getElementById("IncomeTaxPan").focus();
        //            localStorage.setItem("PANNOANDNAMEMATCHING", "0");
        //        }
        //    },
        //    error: function (jqXhr, textStatus, errorMessage) {
        //        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid PAN Number";
        //        //document.getElementById("IncomeTaxPan").focus();
        //        localStorage.setItem("PANNOANDNAMEMATCHING", "0");
        //    }
        //});


    });


    function ValidateMandatoryFields() {
        debugger;

        var ret = false;


        if (document.getElementById("MerchantId").value.trim() == "") {
            document.getElementById("MerchantId_error").innerHTML = "Please Enter Merchant ID";
            document.getElementById("MerchantId").focus();
            return ret;
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("Zone").value.trim() == "") {
            document.getElementById("MerchantId_error").innerHTML = "Click search button to load merchant details";
            document.getElementById("MerchantId").focus();
            return ret;
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("FormNumber").value.trim() == "") {
            document.getElementById("formNumber_error").innerHTML = "Form Number field cannot be left blank";
            document.getElementById("FormNumber").focus();
            return ret;
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }

        if (document.getElementById("IndividualOrgNameTitle").value == "0") {
            document.getElementById("salutaion_error").innerHTML = "Select Title";
            document.getElementById("IndividualOrgNameTitle").focus();
            return ret;
        }
        else {
            document.getElementById("salutaion_error").innerHTML = "";
        }

        if (document.getElementById("IndividualOrgName").value.trim() == "") {
            document.getElementById("customername_error").innerHTML = "Customer/Org.Name field cannot be left blank";
            document.getElementById("IndividualOrgName").focus();
            return ret;
        }
        else {
            document.getElementById("customername_error").innerHTML = "";
        }

        var nameCheck = /^[A-Za-z]{2,40}$/;

        if (!document.getElementById("IndividualOrgName").value.trim().match(nameCheck)) {
            document.getElementById("customername_error").innerHTML = "Customer/Org.Name field is not valid";
            document.getElementById("IndividualOrgName").focus();
            return ret;
        }
        else {
            document.getElementById("customername_error").innerHTML = "";
        }

        if (!isNaN(document.getElementById("IndividualOrgName").value.trim())) {
            document.getElementById("customername_error").innerHTML = "Name can not be a number";
            document.getElementById("IndividualOrgName").focus();
            return false;
        }
        else {
            document.getElementById("customername_error").innerHTML = "";
        }

        if (document.getElementById("NameOnCard").value.trim() == "") {
            document.getElementById("nameOnCard_error").innerHTML = "Name On Card field cannot be left blank";
            document.getElementById("NameOnCard").focus();
            return ret;
        }
        else {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }


        if (!document.getElementById("NameOnCard").value.trim().match(nameCheck)) {
            document.getElementById("nameOnCard_error").innerHTML = "Name On Card field is not valid";
            document.getElementById("NameOnCard").focus();
            return ret;
        }
        else {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }

        if (!isNaN(document.getElementById("NameOnCard").value.trim())) {
            document.getElementById("nameOnCard_error").innerHTML = "Name On Card can not be a number";
            document.getElementById("NameOnCard").focus();
            return false;
        }
        else {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }

        if (document.getElementById("IncomeTaxPan").value.trim() == "") {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            document.getElementById("IncomeTaxPan").focus();
            return ret;
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationCityName").value.trim() == "") {
            document.getElementById("communicationCityName_error").innerHTML = "City field cannot be left blank";
            document.getElementById("CommunicationCityName").focus();
            return ret;
        }
        else {
            document.getElementById("communicationCityName_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationPincode").value.trim() == "") {
            document.getElementById("communicationPincode_error").innerHTML = "Pin Code field cannot be left blank";
            document.getElementById("CommunicationPincode").focus();
            return ret;
        }
        else {
            var pin = document.getElementById("CommunicationPincode").value.trim();
            if (pin.length < 6) {
                document.getElementById("communicationPincode_error").innerHTML = "Pin code must be six digits";
                document.getElementById("CommunicationPincode").focus();
                return false;
            }
            else {
                document.getElementById("communicationPincode_error").innerHTML = "";
            }
        }


        if (document.getElementById("CommunicationStateId").value.trim() == "0") {
            document.getElementById("comm_states_error").innerHTML = "State field cannot be left blank";
            document.getElementById("CommunicationStateId").focus();
            return ret;
        }
        else {
            document.getElementById("comm_states_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationDistrictId").value == "0") {
            document.getElementById("comm_district_error").innerHTML = "District field cannot be left blank";
            document.getElementById("CommunicationDistrictId").focus();
            return ret;
        }
        else {
            document.getElementById("comm_district_error").innerHTML = "";
        }

        var stdCode = document.getElementById("CommunicationDialCode").value.trim();
        if (stdCode != "") {

            if (stdCode.length < 2 || stdCode.length > 4) {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Length 2 to 4 digits";
                document.getElementById("CommunicationDialCode").focus();
                return false;
            }
            else {
                document.getElementById("CommunicationDialCode_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("CommunicationDialCode_error").innerHTML = "";
        }

        var phno = document.getElementById("CommunicationPhonePart2").value.trim();
        if (phno != "") {
            if (phno.charAt(0) == "0") {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Phone no can not start with 0";
                document.getElementById("CommunicationPhonePart2").focus();
                return false;
            }
            else {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
            }

            if (phno.length < 6 || phno.length > 8) {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Phone no length 6 to 8 digits";
                document.getElementById("CommunicationPhonePart2").focus();
                return false;
            }
            else {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        }


        var faxCode = document.getElementById("CommunicationFaxCode").value.trim();
        if (faxCode != "") {

            if (faxCode.length < 2 || faxCode.length > 4) {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Length 2 to 4 digits";
                document.getElementById("CommunicationFaxCode").focus();
                return false;
            }
            else {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "";
        }

        var faxphno = document.getElementById("CommunicationFaxPart2").value.trim();
        if (faxphno != "") {
            if (phno.charAt(0) == "0") {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Fax no can not start with 0";
                document.getElementById("CommunicationFaxPart2").focus();
                return false;
            }
            else {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
            }

            if (faxphno.length < 6 || faxphno.length > 8) {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Fax no length 6 to 8 digits";
                document.getElementById("CommunicationFaxPart2").focus();
                return false;
            }
            else {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
        }


        if (document.getElementById("CommunicationMobileNo").value.trim() == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile field cannot be left blank";
            document.getElementById("CommunicationMobileNo").focus();
            return ret;
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationEmailid").value.trim() == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            document.getElementById("CommunicationEmailid").focus();
            return ret;
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "";
        }

        if (localStorage.getItem("MOBILENUMBERREADYUSED") == 0) {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No is already used";
            return (false);
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }

        if (localStorage.getItem("EMAILIDALREADYUSED") == 0) {
            document.getElementById("comm_email_error").innerHTML = "Email is already used";
            return (false);
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationAddress1").value.trim() == "") {
            document.getElementById("comm_address1_error").innerHTML = "Address 1 field cannot be left blank";
            document.getElementById("CommunicationAddress1").focus();
            return ret;
        }
        else {
            document.getElementById("comm_address1_error").innerHTML = "";
        }



        if (document.getElementById("CommunicationAddress2").value.trim() == "") {
            document.getElementById("comm_address2_error").innerHTML = "Address 2 field cannot be left blank";
            document.getElementById("CommunicationAddress2").focus();
            return ret;
        }
        else {
            document.getElementById("comm_address2_error").innerHTML = "";
        }

        if (document.getElementById("CardNumber1").value == "" && document.getElementById("CardNumber2").value == "") {
            document.getElementById("CardNumber1_error").innerHTML = "Map at least one card with this Customer!";
            document.getElementById("CardNumber1").focus();
            document.getElementById("CardNumber2_error").innerHTML = "";
            return ret;
        }
        else {
            document.getElementById("CardNumber1_error").innerHTML = "";
            document.getElementById("CardNumber2_error").innerHTML = "";
        }

        if (document.getElementById("CardNumber1").value != "" && document.getElementById("CardNumber2").value != "") {
            if (document.getElementById("CardNumber1").value == document.getElementById("CardNumber2").value) {
                document.getElementById("CardNumber1_error").innerHTML = "Both cards details can not be same";
                document.getElementById("CardNumber2").focus();
                return ret;
            }
        }
        else {
            document.getElementById("CardNumber1_error").innerHTML = "";
            document.getElementById("CardNumber2_error").innerHTML = "";
        }

        //if (document.getElementById("CardNumber1").value != "") {
        //    if (document.getElementById("VehicleNo1").value == "") {
        //        document.getElementById("VehicleNo1_error").innerHTML = "Vehicle No1 cannot be left blank";
        //        document.getElementById("VehicleNo1").focus();
        //        return ret;
        //    }
        //    else {
        //        document.getElementById("VehicleNo1_error").innerHTML = "";
        //    }
        //    if (document.getElementById("MobileNo1").value == "") {
        //        document.getElementById("MobileNo1_error").innerHTML = "Mobile1 cannot be left blank";
        //        document.getElementById("MobileNo1").focus();
        //        return ret;
        //    }
        //    else {
        //        document.getElementById("MobileNo1_error").innerHTML = "";
        //    }
        //}
        //else {
        //    document.getElementById("VehicleNo1_error").innerHTML = "";
        //    document.getElementById("MobileNo1_error").innerHTML = "";
        //    document.getElementById("CardNumber1_error").innerHTML = "";
        //}

        if (document.getElementById("VehicleNo1").value != "") { //Vehicle length min-6 max 10
            if ($("#VehicleNo1").val().length < 6 || $("#VehicleNo1").val().length > 10) {
                document.getElementById("VehicleNo1_error").innerHTML = "Vehicle No length is not valid";
                document.getElementById("VehicleNo1").focus();
                return ret;
            }
            else {
                document.getElementById("VehicleNo1_error").innerHTML = "";
            }
        }
        else {
            document.getElementById("VehicleNo1_error").innerHTML = "";
        }

        if (document.getElementById("MobileNo1").value.trim() == "") {
            document.getElementById("MobileNo1_error").innerHTML = "Mobile field cannot be left blank";
            document.getElementById("MobileNo1").focus();
            return ret;
        }
        else {
            if ($("#MobileNo1").val().length < 10) {
                document.getElementById("MobileNo1_error").innerHTML = "Mobile No length must be 10 digit";
                document.getElementById("MobileNo1").focus();
                return ret;
            }
            else {
                document.getElementById("MobileNo1_error").innerHTML = "";
            }
        }

        //if (document.getElementById("CardNumber2").value != "") {
        //    if (document.getElementById("VehicleNo2").value == "") {
        //        document.getElementById("VehicleNo2_error").innerHTML = "Vehicle No2 cannot be left blank";
        //        document.getElementById("VehicleNo2").focus();
        //        return ret;
        //    }
        //    else {
        //        document.getElementById("VehicleNo2_error").innerHTML = "";
        //    }
        //    if (document.getElementById("MobileNo2").value == "") {
        //        document.getElementById("MobileNo2_error").innerHTML = "Mobile2 cannot be left blank";
        //        document.getElementById("MobileNo2").focus();
        //        return ret;
        //    }
        //    else {
        //        document.getElementById("MobileNo2_error").innerHTML = "";
        //    }
        //}
        //else {
        //    document.getElementById("VehicleNo2_error").innerHTML = "";
        //    document.getElementById("MobileNo2_error").innerHTML = "";
        //    document.getElementById("CardNumber2_error").innerHTML = "";
        //}

        if (document.getElementById("VehicleNo2").value != "") { //Vehicle length min-6 max 10
            if ($("#VehicleNo2").val().length < 6 || $("#VehicleNo2").val().length > 10) {
                document.getElementById("VehicleNo2_error").innerHTML = "Vehicle No length is not valid";
                document.getElementById("VehicleNo2").focus();
                return ret;
            }
            else {
                document.getElementById("VehicleNo2_error").innerHTML = "";
            }
        }
        else {
            document.getElementById("VehicleNo2_error").innerHTML = "";
        }

        if (document.getElementById("CardNumber2").value != "") {
            if (document.getElementById("MobileNo2").value == "") {
                document.getElementById("MobileNo2_error").innerHTML = "Mobile field cannot be left blank";
                document.getElementById("MobileNo2").focus();
                return ret;
            }
            else {
                document.getElementById("MobileNo2_error").innerHTML = "";
            }
        }
        else {
            document.getElementById("MobileNo2_error").innerHTML = "";
            document.getElementById("CardNumber2_error").innerHTML = "";
        }

        if (localStorage.getItem("FORMNOALREADYUSED") == 0) {
            document.getElementById("formNumber_error").innerHTML = "Form No is already used";
            return (false);
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }

        if (!(document.querySelector('input[name="CopyofDriverLicense"]:checked'))) {
            document.getElementById("CopyofDriverLicense_error").innerHTML = "Please select Copy of Driver License";
            return (false);
        }
        else {
            document.getElementById("CopyofDriverLicense_error").innerHTML = "";
        }

        if (!(document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked'))) {
            document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "Please select Copy of Vehicle Registration Certificate";
            return (false);
        }
        else {
            document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "";
        }

        if (document.querySelector('input[name="CopyofDriverLicense"]:checked').value == "No") {
            document.getElementById("CopyofDriverLicense_error").innerHTML = "select Yes option to enable save";
            return (false);
        }
        else {
            document.getElementById("CopyofDriverLicense_error").innerHTML = "";
        }

        if (document.querySelector('input[name="CopyofVehicleRegistrationCertificate"]:checked').value == "No") {
            document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "select Yes option to enable save";
            return (false);
        }
        else {
            document.getElementById("CopyofVehicleRegistrationCertificate_error").innerHTML = "";
        }

        if (localStorage.getItem("PANNOALREADYUSED") == 0) {
            document.getElementById("incomeTaxPan_error").innerHTML = "PAN No is already used";
            return (false);
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }


        if (document.getElementById("IncomeTaxPan").value.trim() == "") {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            document.getElementById("IncomeTaxPan").focus();
            return ret;
        }
        else {
            var result = false;

            if (localStorage.getItem("PANNOANDNAMEMATCHING") == 0) {
                document.getElementById("incomeTaxPan_error").innerHTML = "Your pan card name not match with pan card name";
                return (false);
            }
            else {
                document.getElementById("incomeTaxPan_error").innerHTML = "";
            }

            //var panno = $('#IncomeTaxPan').val();
            //var OrgName = $('#IndividualOrgName').val();
            //var correctPANName = '';

            //$.ajax({
            //    type: 'POST',
            //    url: "PANValidation/MyHpOTCCardCustomer",
            //    data: { PANNumber: document.getElementById("IncomeTaxPan").value },
            //    dataType: "json",
            //    success: function (data, status, xhr) {
            //        //debugger;
            //        var jsonData = JSON.parse(data);
            //        if (status == 'success' && jsonData['status-code'] == '101') {
            //            result = true;

            //            console.log(jsonData);
            //            //document.applicationForm.IndividualOrgName.value = jsonData["result"]["name"];
            //            correctPANName = jsonData["result"]["name"];
            //            if (OrgName.toUpperCase() == correctPANName.toUpperCase()) {
            //                localStorage.setItem("showregAddress", true)
            //            }
            //            else {
            //                result = false;
            //                document.getElementById("incomeTaxPan_error").innerHTML = "Your pan card name not match with pan card name";
            //            }
            //        }
            //        else {
            //            document.getElementById("incomeTaxPan_error").innerHTML = "Invalid PAN Number";
            //            document.getElementById("IncomeTaxPan").focus();
            //        }
            //    },
            //    error: function (jqXhr, textStatus, errorMessage) {
            //        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid PAN Number";
            //        document.getElementById("IncomeTaxPan").focus();
            //    }
            //});

            //ret = result;

            //console.log('Inside Loop Before');
            //console.log(result);
            //console.log('Inside Loop After');
        }

        console.log('Before Check');
        console.log(localStorage.getItem("PANNOANDNAMEMATCHING"));
        console.log('After Check');

        //if (ret == false)
        //    return ret;

        return true;
    }

    $("#CommunicationMobileNo").on("blur", function () {
        //debugger;
        var communicationMobile = document.getElementById("CommunicationMobileNo").value.trim();
        if (communicationMobile == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationMobileNo").value.substring(0, 1) == "0") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No should not start with 0";
            document.getElementById("CommunicationMobileNo").value = "";
            document.getElementById("CommunicationMobileNumber").focus();
            return false;
        }

        if (document.getElementById("CommunicationMobileNo").value.length < 10) {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No length must be 10 digit";
            document.getElementById("CommunicationMobileNo").value = "";
            document.getElementById("CommunicationMobileNo").focus();
            return false;
        }

        var mobileNoUsed = false;
        localStorage.setItem("MOBILENUMBERREADYUSED", "1");

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckMobilNoDuplication", "MyHpOTCCardCustomer")',
            data: { MobileNo: communicationMobile },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {

                    //console.log('Test');
                    //console.log(data.status);
                    //console.log(data.reason);
                    if (data.status == "0") {
                        mobileNoUsed = true;
                        document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No is already used";
                        localStorage.setItem("MOBILENUMBERREADYUSED", "0");
                    }
                    else {
                        mobileNoUsed = false;
                        document.getElementById("comm_mobileNumber_error").innerHTML = "";
                    }
                }
                else {
                    document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No is already used";
                    mobileNoUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No is already used";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile No is already used";
                }
            }
        });*@

    });

    $("#CommunicationEmailid").on("blur", function () {
        //debugger;
        var communicationEmail = document.getElementById("CommunicationEmailid").value.trim();
        if (communicationEmail == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "";
        }

        var emailUsed = false;
        localStorage.setItem("EMAILIDALREADYUSED", "1");

        var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
        if (communicationEmail.match(mailformat)) {
            document.getElementById("comm_email_error").innerHTML = "";
            //return true
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            document.getElementById("CommunicationEmailid").focus();
            return (false);
        }

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckEmailDuplication", "MyHpOTCCardCustomer")',
            data: { Emailid: communicationEmail },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                if (status == 'success') {

                    //if (data == "Failed to load Customer Details")
                    //console.log('Test');
                    //console.log(data.status);
                    //console.log(data.reason);
                    if (data.status == "0") {
                        emailUsed = true;
                        document.getElementById("comm_email_error").innerHTML = "Email is already used";
                        localStorage.setItem("EMAILIDALREADYUSED", "0");
                    }
                    else {
                        emailUsed = false;
                        document.getElementById("comm_email_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    document.getElementById("comm_email_error").innerHTML = "Email is already used";
                    emailUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("comm_email_error").innerHTML = "Email is already used";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("comm_email_error").innerHTML = "Email is already used";
                }
            }
        });*@

    });

    function RemoveSpecialChar(txtName) {
        if (txtName.value != '' && txtName.value.match(/^[\w ]+$/) == null) {
            txtName.value = txtName.value.replace(/[\W]/g, '');
        }
    }


    $("#btnCard1Verify").click(function () {
        //debugger;
        var vehicleNo = document.getElementById("VehicleNo1").value;
        if (vehicleNo == "") {
            document.getElementById("VehicleNo1_error").innerHTML = "Please Enter Vehicle Number";
            $("#VehicleNo1").focus;
            return (false);
        }
        else {
            document.getElementById("VehicleNo1_error").innerHTML = "";
        }


        $.ajax({
            type: 'POST',  // http method
            url: "CheckVehicleRegistrationValid/MyHpOTCCardCustomer",
            data: { RegistrationNumber: vehicleNo },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                var jsonData = JSON.parse(data);
                if (status == 'success' && jsonData['statusCode'] == '101') {
                    result = true;
                    document.getElementById("VehicleNo1_error").innerHTML = "Vehicle Number is valid";
                    console.log(jsonData);
                    console.log(document.getElementById("VehicleNo1_error").innerHTML);
                }
                else {
                    document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                document.getElementById("VehicleNo1_error").innerHTML = "Invalid Vehicle Number";

            }
        });


    });


    $("#btnCard2Verify").click(function () {
        //debugger;
        var vehicleNo = document.getElementById("VehicleNo2").value;
        if (vehicleNo == "") {
            document.getElementById("VehicleNo2_error").innerHTML = "Please Enter Vehicle Number";
            $("#VehicleNo2").focus;
            return (false);
        }
        else {
            document.getElementById("VehicleNo2_error").innerHTML = "";
        }


        $.ajax({
            type: 'POST',  // http method
            url: "CheckVehicleRegistrationValid/MyHpOTCCardCustomer",
            data: { RegistrationNumber: vehicleNo },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                var jsonData = JSON.parse(data);
                if (status == 'success' && jsonData['statusCode'] == '101') {
                    result = true;
                    document.getElementById("VehicleNo2_error").innerHTML = "Vehicle Number is valid";
                    console.log(jsonData);
                    console.log(document.getElementById("VehicleNo2_error").innerHTML);
                }
                else {
                    document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                document.getElementById("VehicleNo2_error").innerHTML = "Invalid Vehicle Number";

            }
        });


    });

    $('#VehicleNo1').keydown(function (e) {
        var k = e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 8 || // Backspaces
            (!e.shiftKey && k >= 48 && k <= 57); // 0-9

        if (!ok) {
            e.preventDefault();
        }
    });

    $('#VehicleNo2').keydown(function (e) {
        var k = e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 8 || // Backspaces
            (!e.shiftKey && k >= 48 && k <= 57); // 0-9

        if (!ok) {
            e.preventDefault();
        }
    });

    $("#IncomeTaxPan").keydown(function (e) {
        var k = e.keyCode || e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 9 || //tab
            k == 46 || //del
            k == 8 || // backspaces
            (!e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)

        if (!ok || (e.ctrlKey && e.altKey)) {
            e.preventDefault();
        }
    });

    $("#CommunicationPincode").on("blur", function () {
        //debugger;
        var communicationPinCode = document.getElementById("CommunicationPincode").value;
        if (communicationPinCode == "") {
            document.getElementById("communicationPincode_error").innerHTML = "Pin code cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("communicationPincode_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationPincode").value.substring(0, 1) == "0") {
            document.getElementById("communicationPincode_error").innerHTML = "Pin code should not start with 0";
            document.getElementById("CommunicationPincode").value = "";
            document.getElementById("CommunicationPincode").focus();
            return false;
        }



        if (document.getElementById("CommunicationPincode").value.length < 6) {
            document.getElementById("communicationPincode_error").innerHTML = "Pin code length must be 6 digit";
            document.getElementById("CommunicationPincode").value = "";
            document.getElementById("CommunicationPincode").focus();
            return false;
        }
    });

    $("#MobileNo1").on("blur", function () {
        //debugger;
        var communicationMobile = document.getElementById("MobileNo1").value.trim();
        if (communicationMobile == "") {
            document.getElementById("MobileNo1_error").innerHTML = "Mobile No cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("MobileNo1_error").innerHTML = "";
        }

        if (document.getElementById("MobileNo1").value.substring(0, 1) == "0") {
            document.getElementById("MobileNo1_error").innerHTML = "Mobile No should not start with 0";
            document.getElementById("MobileNo1").value = "";
            document.getElementById("MobileNo1").focus();
            return false;
        }

        if (document.getElementById("MobileNo1").value.length < 10) {
            document.getElementById("MobileNo1_error").innerHTML = "Mobile No length must be 10 digit";
            document.getElementById("MobileNo1").value = "";
            document.getElementById("MobileNo1").focus();
            return false;
        }

    });

    $("#MobileNo2").on("blur", function () {
        //debugger;
        var communicationMobile = document.getElementById("MobileNo2").value.trim();
        //if (communicationMobile == "") {
        //    document.getElementById("MobileNo2_error").innerHTML = "Mobile No cannot be left blank";
        //    return (false);
        //}
        //else {
        //    document.getElementById("MobileNo2_error").innerHTML = "";
        //}

        if (document.getElementById("MobileNo2").value.substring(0, 1) == "0") {
            document.getElementById("MobileNo2_error").innerHTML = "Mobile No should not start with 0";
            document.getElementById("MobileNo2").value = "";
            document.getElementById("MobileNo2").focus();
            return false;
        }

        if (communicationMobile != "") {
            if (document.getElementById("MobileNo2").value.length < 10) {
                document.getElementById("MobileNo2_error").innerHTML = "Mobile No length must be 10 digit";
                document.getElementById("MobileNo2").value = "";
                document.getElementById("MobileNo2").focus();
                return false;
            }
        }

    });

    function SearchCard1Function() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("txt_searchCard1");
        filter = input.value.toUpperCase();
        table = document.getElementById("CardsTable1");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function SearchCard2Function() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("txt_searchCard2");
        filter = input.value.toUpperCase();
        table = document.getElementById("CardsTable2");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

</script>