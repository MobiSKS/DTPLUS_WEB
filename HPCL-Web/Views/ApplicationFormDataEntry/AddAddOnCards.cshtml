@model HPCL.Common.Models.ViewModel.ApplicationFormDataEntry.AddAddOnCard
@using Microsoft.AspNetCore.Http;
@using HPCL.Common.Resources;
@{
    ViewData["Title"] = "Add Add-On Cards";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Enrollments")" class="text_primary">Enrollment</a> </li>
            <li class="breadcrumb-item font-weight-light">Add Add-On Cards</li>
        </ul>
        @using (Html.BeginForm("AddAddOnCards", "ApplicationFormDataEntry", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Add Add-On Cards</p>
                        <div class="alert alert-danger alert-cust-success" id="dvRemarks" style="@(Model.Message=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Message)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap"> 
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">Customer ID<sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", @id = "CustomerId", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger", @id = "CustomerIdValErrMsg" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" id="btnSearch" onclick="CheckCustomer()">@Label.Search</button>
                                        </div>
                                        <div class="px-2">
                                            <button class="btn btn_primary px-4 py-2" type="button" id="btnHeaderReset">@Label.Reset</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="clearfix"></div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">Customer Name<sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerName, new { @id = "CustomerName", @class = "form-control", @readonly = "readonly" })
                                                <span class="error" id="CustomerName_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12"> Form Number <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FormNumber, new { @class = "form-control", @id = "FormNumber", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.FormNumber, "", new { @class = "text-danger", @id = "formNameValErrMsg" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">No. of Cards<sup class="text-danger">*</sup> </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NoOfCards, new {@id="NoOfCards", @class = "form-control", maxlength = "2", onkeypress = "return isNumberKey(event)" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.NoOfCards, "", new { @class = "text-danger", @id = "NoOfCardsErrMsg" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12" id="lblNoOfVehicles" style="display:none;">No. of Vehicles (For All Cards) <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NoofVechileforAllCards, new { @id = "NoofVechileforAllCards", @class = "form-control", maxlength = "2", onkeypress = "return isNumberKey(event)", @style = "display:none", autocomplete = "off" })
                                                @Html.ValidationMessageFor(m => m.NoofVechileforAllCards, "", new { @class = "text-danger", @id = "NoofVechileforAllCardsErrMsg" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12"> RBE ID </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.RBEId, new { @class = "form-control", @id = "RBEId" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.RBEId, "", new { @class = "text-danger", @id = "RbeValErrMsg" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">RBE Name </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.RBEName, new { @class = "form-control", @id = "RbeNameVal", @readonly = "readonly" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.RBEName, "", new { @class = "text-danger", @id = "RBENameErrMsg"  })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3 toBeHiddenOnSuccess" id="ViewCardDetailsTbl">
                            </div>

                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
            <div style="display:none">
                <table id="OldVehicleDetails">
                    <thead>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ObjCardDetail)
                        {
                            <tr>
                                <td>@item.CardIdentifier</td>
                                <td>@item.VechileNo</td>
                                <td>@item.VehicleType</td>
                                <td>@item.VehicleMake</td>
                                <td>@item.YearOfRegistration</td>
                                <td>@item.MobileNo</td>
                                <td>@item.VehicleNoMsg</td>
                                <td>@item.MobileNoMsg</td>
                                <td>@item.Verified</td>
                                <td>@item.CardIdentMsg</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div style="display:none;">@Html.TextBoxFor(m => m.CustomerTypeId)</div>
            @Html.HiddenFor(model => Model.FeePaymentsCollectFeeWaiver)
            @Html.HiddenFor(model => Model.Status)
            @Html.HiddenFor(model => Model.CardPreference)
            @Html.HiddenFor(model => Model.FeePaymentDate)
            @Html.HiddenFor(model => Model.FeePaymentNo)
            @Html.HiddenFor(model => Model.VehicleVerifiedManually)
            @Html.HiddenFor(model => Model.ExternalVehicleAPIStatus)
        }
        <div class="clearfix"></div>
    </div>
</div>
<div class="clearfix"></div>


<script>

      $(document).ready(function ()
      {
         if($("#dvRemarks").html().trim()!="")
         {
             debugger;
             ViewCardDetailsTbl.style.display = "block";
             var customerTypeId = document.getElementById("CustomerTypeId").value;

             var vehicles = [];
             var checked="false";

             checked=$("#VehicleVerifiedManually").val();

             var FeePayments=$("#FeePaymentsCollectFeeWaiver").val();

             console.log(FeePayments);

             if(FeePayments===undefined)
             {
                FeePayments="0";
             }
             else if(FeePayments==undefined)
             {
                FeePayments="0";
             }
             else if(FeePayments=="undefined")
             {
                FeePayments="0";
             }

             console.log(FeePayments);
             $("#OldVehicleDetails TBODY TR").each(function () {
                 var row = $(this);

                 vehicles.push({
                     CustomerTypeId: customerTypeId,
                     Message: $("#dvRemarks").html().trim(),
                     CardPreference: $("#CardPreference").val(),
                     FeePaymentDate: $("#FeePaymentDate").val(),
                     FeePaymentNo: $("#FeePaymentNo").val(),
                     FeePaymentsCollectFeeWaiver: FeePayments,
                     CardIdentifier: row.find("TD").eq(0).html(),
                     VechileNo: row.find("TD").eq(1).html(),
                     VehicleType: row.find("TD").eq(2).html(),
                     VehicleMake: row.find("TD").eq(3).html(),
                     YearOfRegistration: row.find("TD").eq(4).html(),
                     MobileNo: row.find("TD").eq(5).html(),
                     NoOfCards: "",
                     NoofVehicles: "",
                     VehicleVerifiedManually: checked,
                     Verified:row.find("TD").eq(8).html()
                 })
             });

             console.log("Value Check Main");
             console.log(JSON.stringify(vehicles));

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetAddOnCardsPartialView", "ApplicationFormDataEntry")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(vehicles),
                //data: JSON.stringify(vehicles),
                dataType: "html",
                success: function (data, status, xhr) {
                         var v = data;
                         //console.log(data);
                         if (status == 'success') {
                             $("#ViewCardDetailsTbl").html(data);
                             $('html, body').animate({
                                 scrollTop: $("#ViewCardDetailsTbl").offset().top
                             }, 2000);
                         }
                         else {
                             console.log(v);
                         }
                     },
                 error: function (jqXhr, textStatus, errorMessage) {
                     //document.getElementById("CustomerRegionID_error").innerHTML = "Error populating card details";
                     ViewCardDetailsTbl.style.display = "none";

                 }
             });

             var customerTypeId = document.getElementById("CustomerTypeId").value;

             if (customerTypeId == "905" || customerTypeId == "909")
             {
                 $('#lblNoOfVehicles').show();
                 $('#NoofVechileforAllCards').show();
                 $('#NoofVechileforAllCards').attr("readonly", false);
             }
             else
             {
                 $('#lblNoOfVehicles').hide();
                 $('#NoofVechileforAllCards').hide();
             }

         }
      });

     function CheckCustomer() {

         if ($("#CustomerId").val().trim() == "") {
             $('#CustomerIdValErrMsg').text("Customer ID should not be Empty");
             return false;
         } else {
             if (!$("#CustomerId").val().match(mappedCustomerId)) {
                 $("#CustomerIdValErrMsg").attr("style", "display:block");
                 $("#CustomerIdValErrMsg").html("start with 2 and contains 10 digits");
                 return false;
             }
         }
         $('#CustomerIdValErrMsg').text("");

         $.ajax({
             type: 'POST',  // http method
             url: '@Url.Action("GetFormName", "ApplicationFormDataEntry")',
             data: { customerId: $("#CustomerId").val() },  // data to submit
             dataType: "json",
             success: function (res) {
                 console.log(res);
                 if (res.searchResult.data.length > 0)
                 {
                     document.getElementById("CustomerName").value = res.searchResult.data[0].customerName;
                     document.getElementById("CustomerTypeId").value = res.searchResult.data[0].customerTypeId;
                     if (res.searchResult.data[0].rbeId != "")
                     {
                         document.getElementById("RBEId").value = res.searchResult.data[0].rbeId;
                         document.getElementById("RbeNameVal").value = res.searchResult.data[0].rbeName;
                         $("#RBEId").prop('readonly', true);
                     }
                     else {
                         document.getElementById("RBEId").value = "";
                         document.getElementById("RbeNameVal").value = "";
                         $("#RBEId").prop('readonly', false);
                     }

                     var customerTypeId = document.getElementById("CustomerTypeId").value;
                     $("#CustomerId").prop('readonly', true);
                     console.log(customerTypeId);
                     if (customerTypeId == "905" || customerTypeId == "909")
                     {
                         $('#lblNoOfVehicles').show();
                         $('#NoofVechileforAllCards').show();
                         $('#NoofVechileforAllCards').attr("readonly", false);
                     }
                     else
                     {
                         $('#lblNoOfVehicles').hide();
                         $('#NoofVechileforAllCards').hide();
                     }

                         ViewCardDetailsTbl.style.display = "block";


                        var vehicles = [];
                        var checked="false";
                        var FeePayments=$("#FeePaymentsCollectFeeWaiver").val();

                        if(FeePayments===undefined)
                        {
                            FeePayments="0";
                        }
                        else if(FeePayments==undefined)
                        {
                            FeePayments="0";
                        }
                        else if(FeePayments=="undefined")
                        {
                            FeePayments="0";
                        }
                        console.log('Before FeePayments');
                        console.log(FeePayments);

                         vehicles.push({
                             CustomerTypeId: customerTypeId,
                             Message: $("#dvRemarks").html().trim(),
                             CardPreference: $("#CardPreference").val(),
                             FeePaymentDate: $("#FeePaymentDate").val(),
                             FeePaymentNo: $("#FeePaymentNo").val(),
                             FeePaymentsCollectFeeWaiver: FeePayments,
                             CardIdentifier: "",
                             VechileNo: "",
                             VehicleType: "",
                             VehicleMake: "",
                             YearOfRegistration: "",
                             MobileNo: "",
                             NoOfCards: "",
                             NoofVehicles: "",
                             VehicleVerifiedManually: checked,
                             Verified:"0"
                         });

                     //console.log("Value Check");
                     //console.log(JSON.stringify(vehicles));

                         $.ajax({
                             type: 'POST',  // http method
                             url: '@Url.Action("GetAddOnCardsPartialView", "ApplicationFormDataEntry")',
                             contentType: "application/json; charset=utf-8",
                             data: JSON.stringify(vehicles),
                             //data: JSON.stringify(vehicles),
                             dataType: "html",
                             success: function (data, status, xhr) {
                                     var v = data;
                                     console.log("Inside Success");
                                     console.log(data);
                                     console.log(status);
                                     if (status == 'success') {
                                         $("#ViewCardDetailsTbl").html(data);
                                         $('html, body').animate({
                                             scrollTop: $("#ViewCardDetailsTbl").offset().top
                                         }, 2000);
                                     }
                                     else {
                                         console.log(v);
                                     }
                                 },
                             error: function (jqXhr, textStatus, errorMessage) {
                                 //document.getElementById("CustomerRegionID_error").innerHTML = "Error populating card details";
                                 ViewCardDetailsTbl.style.display = "none";

                             }
                         });

                         if (res.searchResult.data[0].paymentType != "")
                         {
                             document.getElementById("NoOfCards").value = res.searchResult.data[0].noOfCards;
                             $("#NoOfCards").prop('readonly', true);
                         }
                         else
                         {
                             document.getElementById("NoOfCards").value = "";
                             $("#NoOfCards").prop('readonly', false);
                         }

                 }
                 else
                 {
                     document.getElementById("CustomerName").value = "";
                     document.getElementById("CustomerTypeId").value = "";
                     document.getElementById("RBEId").value = "";
                     document.getElementById("RbeNameVal").value = "";
                     $("#RBEId").prop('readonly', false);
                     $("#CustomerId").prop('readonly', false);
                     ViewCardDetailsTbl.style.display = "none";
                     alert(res.searchResult.message);
                 }
             },
             error: function (xhr, ajaxOptions, thrownError) {
                 console.log(xhr);
             }
         });
     };

     $("#FormNumber").on("blur", function () {
         localStorage.setItem("FORMNOALREADYUSED", "1");
         var formNumberVal = document.getElementById("FormNumber").value;
         if (formNumberVal == "")
         {
              $("#formNameValErrMsg").html("Form Number cannot be left blank");
              $("#formNameValErrMsg").attr("style", "display:block");
              return false;
         }
         else if (formNumberVal.substring(0, 1) == "0")
         {
             $("#formNameValErrMsg").html("Invalid Form Number. Min-Max 10 digits");
             $("#formNameValErrMsg").attr("style", "display:block");
             return false;
         }
         else if (formNumberVal.length < 10)
         {
             $("#formNameValErrMsg").html("Invalid Form Number. Min-Max 10 digits");
             $("#formNameValErrMsg").attr("style", "display:block");
             return false;
         }
         else if (!(formNumberVal.match(number)))
         {
             $("#formNameValErrMsg").html("Invalid Form Number. Min-Max 10 digits");
             $("#formNameValErrMsg").attr("style", "display:block");
             return false;
         }
         else
         {
              $("#formNameValErrMsg").html("");
         }

         $.ajax({
             type: 'POST',  // http method
             url: '@Url.Action("CheckAddOnForm", "ApplicationFormDataEntry")',
             data: { formNumber: formNumberVal },  // data to submit
             dataType: "json",
             success: function (data, status, xhr) {
                 console.log(data);
                 if (data.searchResult[0].status == 0) {
                     $("#formNameValErrMsg").text(data.searchResult[0].reason);
                     localStorage.setItem("FORMNOALREADYUSED", "0");
                 } else {
                     $("#formNameValErrMsg").text("");
                 }
             },
             error: function (xhr, ajaxOptions, thrownError) {
             }
         });
     });

     $("#RBEId").on("blur", function () {
         var custRBEId = document.getElementById("RBEId").value;
          if (custRBEId == "") {
              document.getElementById("RbeValErrMsg").innerHTML = "";
              document.getElementById("RbeNameVal").innerHTML = "";
             return (false);
         }
         else {
              document.getElementById("RbeValErrMsg").innerHTML = "";
         }
         $.ajax({
             type: 'POST',  // http method
             url: '@Url.Action("GetCustomerRBEName", "Customer")',
             data: { RBEId: custRBEId },  // data to submit
             dataType: "json",
             success: function (data, status, xhr) {
                 console.log(data);
                 console.log(status);
                 var v = data;
                 if (status == 'success') {
                     document.getElementById("RbeNameVal").value = data.rbeName;
                     //found = true;

                     if(data.statusCode==1000)
                     {
                         document.getElementById("RbeNameVal").value = data.rbeName;
                         $("#RbeValErrMsg").html("");
                     }
                     else
                     {
                           $("#RbeValErrMsg").attr("style", "display:block");
                         $("#RbeValErrMsg").html("Invalid RBE ID");
                     }

                     if (data == "Failed to load Customer Details")
                         document.getElementById("RbeNameVal").value = "";
                 }
                 else {
                     $("#RBEId_error").html("");
                     document.getElementById("RbeNameVal").value = "";
                     console.log(v);
                     //found = false;
                 }
             },
             error: function (xhr, ajaxOptions, thrownError) {
                 document.getElementById("RbeNameVal").value = "";
             },
             statusCode: {
                 1024: function () {
                     document.getElementById("RbeNameVal").value = "";
                 }
             }
         });
     });

     $('#CustomerId').keypress(function (e) {
         if (e.keyCode == 13) {  // detect the enter key
             $('#btnSearch').click();
         }
     });

     $("#btnHeaderReset").click(function ()
     {
         //debugger;
         $("#CustomerId").val("");
         $("#CustomerId").prop('readonly', false);
         $("#CustomerIdValErrMsg").html("");
         $("#CustomerName").val("");
         $("#CustomerName_error").html("");
         $("#NoofVechileforAllCards").val("");
         $("#NoofVechileforAllCardsErrMsg").html("");
         $("#FormNumber").val("");
         $("#formNameValErrMsg").html("");
         $("#NoOfCards").val("");
         $("#NoOfCardsErrMsg").html("");
         $("#RBEId").val("");
         $("#RbeValErrMsg").html("");
         $("#RbeNameVal").val("");
         $("#RBENameErrMsg").html("");
         ViewCardDetailsTbl.style.display = "none";
         $("#Remarks").html('');
         $("#dvRemarks").html('');
         dvRemarks.style.display = 'none';
         //window.location.reload(true);
    });

    $('#NoOfCards').on("cut copy paste",function(e) {
       e.preventDefault();
    });

    $('#NoofVechileforAllCards').on("cut copy paste",function(e) {
       e.preventDefault();
     });

</script>