@model HPCL.Common.Models.ViewModel.Dealer.MerchanDealerSaleStatementModel
@using HPCL.Common.Resources
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js"></script>
@if (Model != null && Model.Data != null)
{
    if (Model.Data.TransactionDetails != null)
    {
        if (Model.Data.TransactionDetails.Count() > 0)
        {
            <p class="font-12 font-weight-bold d-inline-block w-auto ml-3 mb-0 px-2">Transaction Summary</p>
            <table id="TransactionSummary" class="table d-md-table table-bordered table-striped table-responsive" style="width:100%;">
                <thead>
                    <tr>
                        <th>Statement Date</th>
                        <th>Statement Period</th>
                        <th>Purchase</th>
                        <th>Payment</th>
                        <td>Previous Outstanding</td>
                        <td>Amount Due</td>
                    </tr>
                </thead>

                <tbody>

                    @foreach (var item in Model.Data.TransactionDetails)
                    {
                        <tr>
                            <td>@item.StatementDate</td>
                            <td>@item.StatementPeriod</td>
                            <td>@item.Purchase</td>
                            <td>@item.Payment</td>
                            <td>@item.PreviousOutstanding</td>
                            <td>@item.AmountDue</td>
                        </tr>
                    }
                </tbody>

            </table>
        }
    }
    <div class="clearfix"></div>
    @if (Model.Data.ViewStatementDetails != null)
    {
        @if (Model.Data.ViewStatementDetails.Count() > 0)
        {
            <p class="font-12 font-weight-bold d-inline-block w-auto ml-3 mb-0 px-2">Transaction Details</p>
            <div>
                <table id="TransactionDetails" class="datatable table d-md-table table-striped table-bordered table-responsive" style="width:100%;">
                    <thead>
                        <tr>
                            <th>S.No.</th>
                            <th>Merchant ID</th>
                            <th>Customer ID</th>
                            <th>Transaction Type</th>
                            <th>Transaction Date</th>
                            <th>Account Number</th>
                            <th>Token Number</th>
                            <th>Transaction Amount</th>
                            <th>Balance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int Sno = 0;
                        }
                        @foreach (var item in Model.Data.ViewStatementDetails)
                        {
                            Sno++;
                            <tr>
                                <td>@Sno</td>
                                <td>@item.MerchantID</td>
                                <td>@item.CustomerID</td>
                                <td>@item.TransactionType</td>
                                <td>@item.TransactionDate</td>
                                <td>@item.AccountNumber</td>
                                <td>@item.TokenNumber</td>
                                <td>@item.TransactionAmount</td>
                                <td>@item.Balance</td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="clearfix"></div>
        }
    }
}
@if (Model.Data == null)
{
    <div class="alert alert-danger text-center">
        @Model.Message
    </div>
}
else
{
    @if (Model.Data.ViewStatementDetails.Count() == 0 && Model.Data.TransactionDetails.Count() == 0)
    {
        <div class="alert alert-danger text-center">
            @Model.Message
        </div>
    }
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#TransactionDetails').DataTable({
            "lengthMenu": [10, 20, 50, 100, 200, 500],
            "oLanguage": {
                "sLengthMenu": "Display _MENU_ Records",
                "info": "Showing _START_ to _END_ of _TOTAL_ Records",
            }
        });
    });
    function tableToCSV() {

        // Variable to store the final csv data
        var csv_data = [];

        // Get each row data
        //var rows = document.getElementsByTagName('tr');
        $("#TransactionSummary tr").each(function () {
            var row = $(this);
            //debugger;
            //for (var i = 0; i < rows.length; i++) {

                // Get each column data
                var cols = row[0].querySelectorAll('td,th');

                // Stores each csv row data
                var csvrow = [];
                for (var j = 0; j < cols.length; j++) {

                    // Get the text data of each cell
                    // of a row and push it to csvrow

                        if(j==0)
                            csvrow.push("'"+cols[j].innerHTML.toString());
                        else
                            csvrow.push(cols[j].innerHTML.toString());

                }

                // Combine each column value with comma
                csv_data.push(csvrow.join(","));
            //}
        });
          $("#TransactionDetails tr").each(function () {
            var row = $(this);
            //debugger;
            //for (var i = 0; i < rows.length; i++) {

                // Get each column data
                var cols = row[0].querySelectorAll('td,th');

                // Stores each csv row data
                var csvrow = [];
                for (var j = 0; j < cols.length; j++) {

                    // Get the text data of each cell
                    // of a row and push it to csvrow

                        if(j==1 ||j==2 ||j==4 ||j==6)
                            csvrow.push("'"+cols[j].innerHTML.toString());
                        else
                            csvrow.push(cols[j].innerHTML.toString());

                }

                // Combine each column value with comma
                csv_data.push(csvrow.join(","));
            //}
        });
        // Combine each row data with new line character
        csv_data = csv_data.join('\n');

        // Call this function to download csv file
        downloadCSVFile(csv_data);

    }

    function downloadCSVFile(csv_data) {

        // Create CSV file object and feed
        // our csv_data into it
        CSVFile = new Blob([csv_data], {
            type: "text/csv"
        });

        // Create to temporary link to initiate
        // download process
        var temp_link = document.createElement('a');

        // Download csv file
        temp_link.download = "CustomerTransactionDetails.csv";
        var url = window.URL.createObjectURL(CSVFile);
        temp_link.href = url;

        // This link should not be displayed
        temp_link.style.display = "none";
        document.body.appendChild(temp_link);

        // Automatically click the link to
        // trigger download
        temp_link.click();
        document.body.removeChild(temp_link);
    }

</script>