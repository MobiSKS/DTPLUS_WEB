@model HPCL.Common.Models.ViewModel.Dealer.DealerCreditMappingViewModel
@using HPCL.Common.Resources

<div class="col-lg-12 px-0">
    <div class="bg-white p-2 p-md-4" style="background: #edecec !important;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Dealer")" class="text_primary">Dealer Credit Management</a> </li>
            <li class="breadcrumb-item font-weight-light">Dealer Credit Mapping</li>
        </ul>
        @if (ViewBag.SuccessMessage != "" && ViewBag.SuccessMessage != null)
        {
            <div id="reason" class="mb-3 text-center alert alert-success">@ViewBag.SuccessMessage</div>
        }
        @if (ViewBag.ErrorMessage != "" && ViewBag.ErrorMessage != null)
        {
            <div id="reason" class="mb-3 text-center alert alert-danger">@ViewBag.ErrorMessage</div>
        }
        @{
            string CCMSBalance = "", strMsg = "";
        }
        @if (Model.Data != null && ViewBag.Reset != "Y")
        {
            @if (Model.Data.CustomerCCMSBalanceDetails != null)
            {
                @if (Model.Data.CustomerCCMSBalanceDetails.Count() > 0)
                {
                    @if (Model.Data.CustomerCCMSBalanceDetails.First().Status == "0")
                    {
                        strMsg = Model.Data.CustomerCCMSBalanceDetails.First().Reason;
                    }

                    CCMSBalance = Model.Data.CustomerCCMSBalanceDetails.First().CCMSBalance;
                }
            }
        }
        <form>
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Dealer Credit Mapping</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3 bg-white">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-3 col-12">Customer ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerID, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="CustomerId_error"></span>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                @if (strMsg == "" && Model.Data!=null)
                                {
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-3 col-12">CCMS Balance :</label>
                                            <div class="col-md-7 col-12 offset-md-1">
                                                <div class="custom_select">
                                                    <label class="font-weight-normal col-md-3 col-12">
                                                        @CCMSBalance
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center flex-wrap">

                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3 justify-content-center">
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="submit" id="btnSearch">@Label.Search</button>
                                        </div>
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" id="btnReset" onclick="location.href='@Url.Action("DealerCreditMapping", "Dealer" ,new { reset="Y" })'">@Label.Reset</button>
                                        </div>
                                    </div>
                                </div>
                                @if (Model.Data != null && ViewBag.Reset != "Y" && strMsg == "")
                                {
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <div class="px-2">
                                                <button class="btn btn_primary" type="button" id="btnPayment">DEALER CREDIT PAYMENT IN BULK</button>
                                            </div>
                                            <div class="px-2">
                                                <button class="btn btn_primary" type="button" id="btnUpdateLimits">UPDATE LIMITS</button>
                                            </div>
                                            <div class="px-2">
                                                <button class="btn btn_primary" type="button" id="btnAddMerchant">ADD MERCHANT</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="merchantDetails" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content" style="width:800px">
                        <div class="modal-header py-2">
                            <h3 class="modal-title" id="exampleModalLabel" style="font-size:12px;">Dealer Credit Sale Statement</h3>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="col-lg-12 col-md-12 col-12 py-3">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CustomerID, new { @class = "form-control",@readonly=true})
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Merchant ID<sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.MerchantID, new { @class = "form-control",@readonly=true})
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">From Date<sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control fromDate",@placeholder="dd-mm-yyyy", @autocomplete = "off", @onchange = "checkDates('fromDate_error');" })
                                                    <span class="error" id="fromDate_error"></span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">To Date<sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control toDate",@placeholder="dd-mm-yyyy", @autocomplete = "off", @onchange = "checkDates('fromDate_error');" })
                                                    <span class="error" id="toDate_error"></span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>

                                <div class="d-flex align-items-center flex-wrap mb-3 justify-content-center">
                                    <div class="px-2">
                                        <button class="btn btn_primary" type="button" id="btnSearchStatement">SEARCH</button>
                                    </div>
                                    <div class="px-2">
                                        <button class="btn btn_primary" type="button" id="btnExpExcel" onclick="tableToCSV()">EXPORT TO EXCEL</button>
                                    </div>
                                    <div class="px-2">
                                        <button class="btn btn_primary" type="button" onclick="generatePDF()" id="btnExpPDF">EXPORT TO PDF</button>
                                    </div>
                                </div>

                            </div>

                        </div>
                        <div class="col-12 col-sm-12" style="max-height:300px;overflow:scroll;">
                            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3 toBeHiddenOnSuccess" id="viewCreditSaleStatement">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="clearfix"></div>
        @if (strMsg == "")
        {
            <div id="show_Table" class="col-lg-12 col-md-12 col-12 pl-0 pr-0  toBeHiddenOnSuccess">
                @if (Model.Message == "Success" && ViewBag.Reset != "Y")
                {
                    @if (Model.Data != null)
                    {
                        @if (Model.Data.CustomerDetails != null)
                        {
                            @if (Model.Data.CustomerDetails.Count() > 0)
                            {
                                <div class="border-1 rounded border-grey">
                                    <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Customer Details</p>
                                    <div class="col-lg-12 col-md-12 col-12 py-3">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="col-lg-6 col-12">
                                                <div class=" d-flex align-items-center flex-wrap">
                                                    <label class="font-weight-bold col-md-4 col-12">Customer Name:</label>
                                                    <div class="col-md-7 col-12">
                                                        <label class="font-weight-normal  col-12">@Model.Data.CustomerDetails.First().IndividualOrgName</label>

                                                    </div>
                                                </div>
                                                <div class="d-flex align-items-center flex-wrap">
                                                    <label class="font-weight-bold col-md-4 col-12">Customer Address:</label>
                                                    <div class="col-md-7 col-12">
                                                        <label class="font-weight-normal  col-12">@Model.Data.CustomerDetails.First().CustomerAddress</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-12">

                                                <div class=" d-flex align-items-center flex-wrap">
                                                    <label class="font-weight-bold col-md-2 col-12">RO:</label>
                                                    <div class="col-md-7 col-12">
                                                        <label class="font-weight-normal  col-12">@Model.Data.CustomerDetails.First().RegionalOfficeName</label>

                                                    </div>
                                                </div>
                                                <div class="d-flex align-items-center flex-wrap">
                                                    <label class="font-weight-bold col-md-2 col-12">ZO:</label>
                                                    <div class="col-md-7 col-12">
                                                        <label class="font-weight-normal  col-12">@Model.Data.CustomerDetails.First().ZonalOfficeName</label>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <div class="clearfix"></div>

                            }
                        }
                        @if (Model.Data.CustomerMerchantMappedDetails != null)
                        {
                            @if (Model.Data.CustomerMerchantMappedDetails.Count() > 0)
                            {

                                <div class="border-1 rounded border-grey">
                                    <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Dealer Credit Limits</p>
                                    <div class="col-lg-12 col-md-12 col-12 py-3">
                                        <table class="datatable table table-striped table-bordered table-responsive" style="width:100%;" id="CustomerMerchantMappedDetails">
                                            <thead>
                                                <tr>
                                                    <th style="width:5%;">S.No.</th>
                                                    <th style="width:10%;">Merchant ID</th>
                                                    <th style="width:10%;">Outlet Name & Location</th>
                                                    <th style="width:10%;">Outstanding</th>
                                                    <th style="width:10%;">Credit Close Limit Type</th>
                                                    <th style="width:10%;">Credit Close Limit Amount</th>
                                                    <th style="width:10%;">Credit Close Limit Balance</th>
                                                    <th style="width:10%;">Acion</th>
                                                    <th style="display:none"></th>
                                                </tr>
                                            </thead>
                                            <tbody id="searchTableBody">
                                                @{
                                                    int i = 0;
                                                    string status = "", classToggle = "";
                                                }
                                                @foreach (var item in Model.Data.CustomerMerchantMappedDetails)
                                                {
                                                    i = i + 1;

                                                    if (item.Action == "0")
                                                    {
                                                        classToggle = "fa-toggle-off";
                                                        status = "Enable";
                                                    }

                                                    else
                                                    {
                                                        classToggle = "fa-toggle-on";
                                                        status = "Disable";
                                                    }
                                                    <tr>
                                                        <td>@i</td>
                                                        <td>@item.MerchantId</td>
                                                        <td>@item.OutletNameAndLocation</td>
                                                        <td><a class='outStanding' href='#' onclick='ViewStatement(this)' role='tab'><span class='rowCCMSBalance'>@item.Outstanding</span></a></td>
                                                        <td class="editCelldropdown" id="tdLimitType">@item.CreditCloseLimitType</td>
                                                        <td class="editCell" id="tdLimitAmount">@item.CreditCloseLimit</td>
                                                        <td>@item.CreditCloseLimitBalance</td>
                                                        <td style="width:8px">
                                                            <div class="d-flex align-items-center justify-content-start">
                                                                @if (item.Action != "0")
                                                                {
                                                                    <a class="d-block " data-toggle="tooltip" title="" tooltip="Edit"><i class="fa fa-pencil-square-o edit  " aria-hidden="true"></i></a>
                                                                    <a class="d-block" data-toggle="tooltip" title="" tooltip="Update"><i class="fa fa-floppy-o save" aria-hidden="true" style="display:none"></i></a>
                                                                    <a class="d-block" data-toggle="tooltip" title="" tooltip="Cancel"><i class="fa fa-remove cancel" aria-hidden="true" style="display:none"></i></a>
                                                                }
                                                                <a asp-action="MerchantMapEnableorDisable" class="d-block" asp-route-customerID="@Model.CustomerID" asp-route-merchantID="@item.MerchantId" asp-route-actionID="@status" data-toggle="tooltip" title="" tooltip="@status"><i class="fa @classToggle enable" aria-hidden="true"></i></a>
                                                            </div>
                                                        </td>
                                                        <td style="display:none">@item.CreditCloseLimitType</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="clearfix"></div>

                            }
                        }
                    }
                }
                else
                {
                    @if (!String.IsNullOrEmpty(Model.Message))
                    {
                        <div class="mb-0 mt-3 text-center alert alert-danger">
                            @Model.Message
                        </div>
                    }
                }
            </div>
            <div class="clearfix"></div>
        }
        else
        {
            <div class="mb-0 mt-3 text-center alert alert-danger">
                @strMsg
            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>
<script type="text/javascript">
    var activeRow="";
    var custID=@ViewBag.CustomerID;
    var fromD = $("#FromDate").val();
    var toD = $("#ToDate").val();
    var pCreditCloseLimit = "", pCreditCloseLimitType = "";
        $(document).ready(function () {
            if(custID!="0"){
                 $("#CustomerID").attr("disabled",true);

              

            }
        });

     $("#btnSearch").on("click",(function(e){
         var customerId=$("#CustomerID").val();
         var flag="Y";
         if(customerId.trim()!=""){
             if (!customerId.match(mappedCustomerId))
                {
                    $("#CustomerId_error").attr("style", "display:block");
                    $("#CustomerId_error").html("Invalid Customer ID");
                    flag="N";
                }
         }
         else{
             $("#CustomerId_error").attr("style", "display:block");
             $("#CustomerId_error").html("Customer Id is required");
             flag="N";
         }
         if(flag=="N")
            e.preventDefault();

     }));

      $('select').SumoSelect({
                placeholder: '--Select--',
                search: true,
                searchText: 'Enter Text here.'
            });
    $("#CustomerID").on("blur", function ()
    {
        if (document.getElementById("CustomerID").value.trim() == "")
        {
            $("#CustomerId_error").attr("style", "display:block");
            $("#CustomerId_error").html("Customer Id is required");
            return false;
        }
        else if (!$("#CustomerID").val().match(mappedCustomerId))
        {
            $("#CustomerId_error").attr("style", "display:block");
            $("#CustomerId_error").html("Invalid Customer ID");
            return false;
        }
        else
        {
            $("#CustomerId_error").attr("style", "display:none");
            $("#CustomerId_error").html("");
        }

    });
       $("#CustomerMerchantMappedDetails").on('click', '.edit', function () {
        if(activeRow==""){
            currentRow = $(this).closest("tr");
            activeRow=currentRow;
            pCreditCloseLimit = currentRow[0].cells[5].textContent;
          pCreditCloseLimitType= currentRow[0].cells[4].textContent;
            var i = currentRow[0].cells[0].textContent;

            currentRow.find('td.editCell').each(function(){
                if(pCreditCloseLimitType!="Unlimited")
                          $(this)[0].innerHTML=('<input type="text" , autocomplete = "off"   class="form-control lAmt" value="'+ $(this)[0].textContent + '" id="'+$(this)[0].id+'_'+i+'"><span class="field-validation-error text-danger" id="'+$(this)[0].id+'_error'+i+'"></span>');
                      });
          var LimitTypeId=currentRow.find('td.editCelldropdown')[0].id;
          currentRow.find('td.editCelldropdown')[0].innerHTML=('<select name="CreditCloseLimitType" id="tdLimitType_'+i+'" onchange="enableLimitAmt(this);" class="form-control"></select>');
           $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("GetCreditCloseLimitType", "Common")',
                    dataType: "json",
                    success: function (data, status, xhr) {
                        var v = data;

                        if (status == 'success') {
                            $("#tdLimitType_"+i).html("");
                            $.each(data, function (j, data) { // bind the dropdown list using json result

                                    if (data.description == pCreditCloseLimitType) {
                                         $('<option selected = "selected">',
                                         {
                                             value: data.limitId,
                                             text: data.description
                                         }).html(data.description).appendTo("#tdLimitType_"+i);
                                    }
                                    else{
                                        $('<option>',
                                        {
                                            value: data.limitId,
                                            text: data.description
                                        }).html(data.description).appendTo("#tdLimitType_"+i);
                                    }
                            });
                            //$("#CreditCloseLimitType")[0].sumo.reload();

                        }
                        else {
                            console.log(v);
                        }
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        alert("Error Populating Limit Type");
                    }

               });
          currentRow.find('.enable').attr("style","display:none");
           currentRow.find('.edit').attr("style","display:none");
           currentRow.find('.save').attr("style","display:block");
           currentRow.find('.cancel').attr("style","display:block");
       }
    });
    function enableLimitAmt(o){
        debugger;
        var selectedVal=o.value;
        var currentRow = o.closest("tr");
         var i = currentRow.cells[0].textContent;
         var limitAmtCell=currentRow.cells[5];
        if(selectedVal=="1"){
             currentRow.cells.tdLimitAmount.innerHTML=('<input type="text" , autocomplete = "off"  class="form-control lAmt " value="'+ limitAmtCell.textContent + '" id="'+limitAmtCell.id+'_'+i+'"><span class="field-validation-error text-danger" id="'+limitAmtCell.id+'_error'+i+'"></span>');

        }
        else{
            currentRow.cells.tdLimitAmount.innerHTML=limitAmtCell.textContent;
        }
    }
     $("#CustomerMerchantMappedDetails").on('click', '.cancel', function () {
          currentRow = $(this).closest("tr");

          currentRow[0].cells[4].textContent=pCreditCloseLimitType;
          currentRow[0].cells[5].textContent=pCreditCloseLimit;


          currentRow.find('.enable').attr("style","display:block");
       currentRow.find('.edit').attr("style","display:block");
       currentRow.find('.save').attr("style","display:none");
       currentRow.find('.cancel').attr("style","display:none");
       activeRow="";
     });
     $("#CustomerMerchantMappedDetails").on('click', '.save', function () {
         merchantDetail=[];
         var flag="Y";
            var customerId=$("#CustomerID").val();
          row = $(this).closest("tr");
          var i = row[0].cells[0].textContent;
          var CreditCloseLimitAmount = $('#tdLimitAmount_'+i).val();
          var CreditCloseLimitType= $('#tdLimitType_'+i).val();
          var merchantID = row[0].cells[1].textContent;
          debugger;
          if(CreditCloseLimitType=="1" || CreditCloseLimitType=="One Time Limit" || CreditCloseLimitType=="OneTime"){//One time limit-Limit amount is required
              if(CreditCloseLimitAmount.trim()=="" ){
                  //$("#tdLimitAmount_error"+i).html("Enter Limit Amount");
                  //$("#tdLimitAmount_error"+i).attr("style","display:block");
                  alert("Credit closer limit amount should be greater than or equal to 1.")
                  flag="N";
              }
              else if(isNaN(CreditCloseLimitAmount)){
                   alert("Credit closer limit amount should be greater than or equal to 1.")
                   flag="N";
              }
              else if(Number(CreditCloseLimitAmount)<=0){
                   alert("Credit closer limit amount should be greater than or equal to 1.")
                   flag="N";
              }
              CreditCloseLimitTypeText="OneTime";
          }
          else{
              CreditCloseLimitAmount="0";
              CreditCloseLimitTypeText="Unlimited";
          }

          if(flag=="Y"){
               merchantDetail.push({ MerchantID: merchantID, CreditCloseLimitType: CreditCloseLimitTypeText,LimitAmount:CreditCloseLimitAmount });
             var reqmodel={ CustomerID: customerId, TypeUpdateDealerCreditMapping:merchantDetail};
             $.ajax({
                    type: 'POST',
                    url: '@Url.Action("UpdateDealerCreditmapping", "Dealer")',
                    contentType: "application/json; charset=utf-8",
                    data:JSON.stringify(reqmodel),
                    dataType: 'json',
                    success: function (data) {

                         var successMsg="",errorMsg="";
                        if(data[0].status==1)
                            successMsg=data[0].reason;
                        else if(data[0].status==0)
                            errorMsg=data[0].reason;
                        var url = '@Html.Raw(@Url.Action("DealerCreditMapping", "Dealer",new { CustomerID="ttt", success = "mm", error = "ee" }))';
                        url = url.replace("mm", encodeURIComponent(successMsg)).replace("ee", encodeURIComponent(errorMsg)).replace("ttt",encodeURIComponent(customerId));
                        window.location.href=url;
                    },
                    error: function (ex) {
                        alert('Error.' + ex);
                    }
             });
           }
     });
     $("#btnAddMerchant").on("click",(function(e){
            var customerId=$("#CustomerID").val();
         var flag="Y";
         if(customerId.trim()!=""){
             if (!customerId.match(mappedCustomerId))
                {
                    $("#CustomerId_error").attr("style", "display:block");
                    $("#CustomerId_error").html("Invalid Customer ID");
                    flag="N";
                }
         }
         else{
             $("#CustomerId_error").attr("style", "display:block");
             $("#CustomerId_error").html("Customer Id is required");
             flag="N";
         }
         if(flag=="N")
            e.preventDefault();
        else{
            var url = '@Html.Raw(@Url.Action("MapDealerForCreditSale", "Dealer",new { CustomerID = "aa"}))';
            url = url.replace("aa", encodeURIComponent(customerId));
            window.location.href=url;
        }
     }));

    //function isDecimal(event,o){
    //    var txboxVal=o.value;
    //    console.log(txboxVal);
    //    if ((event.which != 46 || txboxVal.indexOf('.') != -1)&&(event.which < 48 || event.which > 57)) {
    //        if((event.which != 46 || txboxVal.indexOf('.') != -1)){
    //         return false;
    //      }
    //      event.preventDefault();
    //   }
    //   if(txboxVal.indexOf(".")>-1 && (txboxVal.split('.')[1].length > 1))		{
    //        return false;
    //        event.preventDefault();
    //   }
    //   return true;
    //}
    $("#CustomerMerchantMappedDetails").on('keydown', '.lAmt', function (event) {

        if (event.shiftKey == true) {
            event.preventDefault();
        }
        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190|| event.keyCode==110) {

        } else {
            event.preventDefault();
        }
        if($(this).val().indexOf('.') !== -1 && (event.keyCode == 190|| event.keyCode == 110))
            event.preventDefault();
    });
    $("#btnPayment").on("click",(function(e){
            var customerId=$("#CustomerID").val();
         var flag="Y";
         if(customerId.trim()!=""){
             if (!customerId.match(mappedCustomerId))
                {
                    $("#CustomerId_error").attr("style", "display:block");
                    $("#CustomerId_error").html("Invalid Customer ID");
                    flag="N";
                }
         }
         else{
             $("#CustomerId_error").attr("style", "display:block");
             $("#CustomerId_error").html("Customer Id is required");
             flag="N";
         }
         if(flag=="N")
            e.preventDefault();
        else{
            var url = '@Html.Raw(@Url.Action("DealerCreditPaymentInBulk", "Dealer",new { CustomerID = "aa"}))';
            url = url.replace("aa", encodeURIComponent(customerId));
            window.location.href=url;
        }
     }));
     $("#btnUpdateLimits").on("click",(function(e){
            var customerId=$("#CustomerID").val();
         var flag="Y";
         if(customerId.trim()!=""){
             if (!customerId.match(mappedCustomerId))
                {
                    $("#CustomerId_error").attr("style", "display:block");
                    $("#CustomerId_error").html("Invalid Customer ID");
                    flag="N";
                }
         }
         else{
             $("#CustomerId_error").attr("style", "display:block");
             $("#CustomerId_error").html("Customer Id is required");
             flag="N";
         }
         if(flag=="N")
            e.preventDefault();
        else{
            var url = '@Html.Raw(@Url.Action("UpdateDealerCreditLimit", "Dealer",new { CustomerID = "aa"}))';
            url = url.replace("aa", encodeURIComponent(customerId));
            window.location.href=url;
        }
     }));
     function ViewStatement(o){
         var customerId = $("#CustomerID").val();
        if (customerId == "") {
            return (false);
        }
         var currentRow = o.closest("tr");
         var merchantId=currentRow.cells[1].textContent;
         $("#MerchantID").val(merchantId);

         $("#viewCreditSaleStatement").html("");
         $("#FromDate").val(fromD);
         $("#ToDate").val(toD);
         $('#merchantDetails').modal('show');

     }
     $("#btnSearchStatement").on("click",(function(e){
         var customerId = $("#CustomerID").val();
         var merchantId=$("#MerchantID").val();
          var fromdate = $("#FromDate").val();
          var todate = $("#ToDate").val();
         var flag = "Y";
          if (fromdate == "") {
              $("#fromDate_error").attr("style", "display:block");
              $("#fromDate_error").html("Select From Date");
              flag = "N";
          }

          if (todate == "") {
              $("#toDate_error").attr("style", "display:block");
              $("#toDate_error").html("Select To Date");
              flag = "N";
          }
          if (fromdate != "" && todate != "") {
              flag = checkDates("fromDate_error");
          }
          if(flag=="Y"){
              $.ajax({
                type: 'GET',  // http method
                url: '@Url.Action("GetCreditSaleStatement", "Dealer")',
                data: { CustomerID: customerId, MerchantID: merchantId, FromDate: fromdate, ToDate: todate},
                contentType: "application/json; charset=utf-8",
                dataType: "text",
                success: function (data,status,xhr) {
                    var v = data;
                        $("#viewCreditSaleStatement").html(data);
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error" + errorMessage);
                }
            });
        }
     }));

</script>