@model HPCL.Common.Models.ViewModel.Dealer.DealerCreditSaleStatement
@using HPCL.Common.Resources
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js"></script>

@if (Model.Data.Count() > 0)
{

    <table class="datatable table table-striped table-bordered table-responsive d-md-table" style="width:100%;" id="creditSaleDetailsTbl">
        <thead style="background-color:lightgray;">
            <tr>

                <th>Transaction Type</th>
                <th>Transaction Date</th>
                <th>Account Number</th>
                <th>Token Number</th>
                <th>Transaction Amount</th>
                <th>Balance</th>
            </tr>
        </thead>
        <tbody id="searchTableBody">
            @{
                int i = 0;
            }
            @foreach (var item in Model.Data)
            {
                i = i + 1;

                <tr>
                    <td>@item.TransactionType</td>
                    <td>@item.TransactionDate</td>
                    <td>@item.AccountNumber</td>
                    <td>@item.TokenNumber</td>
                    <td>@item.TransactionAmount</td>
                    <td>@item.Balance</td>

                </tr>
            }
        </tbody>
    </table>
     <table class="table table-striped table-bordered table-responsive d-md-table" style="width:100%;display:none" id="creditSaleDetailsTblforPDF">
        <thead style="background-color:lightgray;">
            <tr>

                <th>Transaction Type</th>
                <th>Transaction Date</th>
                <th>Account Number</th>
                <th>Token Number</th>
                <th>Transaction Amount</th>
                <th>Balance</th>
            </tr>
        </thead>
        <tbody id="searchTableBody">
            @{
                int j = 0;
            }
            @foreach (var item in Model.Data)
            {
                j = j + 1;

                <tr>
                    <td>@item.TransactionType</td>
                    <td>@item.TransactionDate</td>
                    <td>@item.AccountNumber</td>
                    <td>@item.TokenNumber</td>
                    <td>@item.TransactionAmount</td>
                    <td>@item.Balance</td>

                </tr>
            }
        </tbody>
    </table>

}
else
{
    <div class="alert alert-danger mt-3 text-center">
        @Model.Message
    </div>
}

<script type="text/javascript">
        $(document).ready(function () {
           $('#creditSaleDetailsTbl').DataTable({
                "lengthMenu": [10, 20, 50, 100, 200, 500],
                "oLanguage": {
                    "sLengthMenu": "Display _MENU_ Records",
                    "info": "Showing _START_ to _END_ of _TOTAL_ Records",
                }
            });
        });
         function tableToCSV() {

            // Variable to store the final csv data
            var csv_data = [];
            var csvrow = [];
                csvrow.push("Transaction Type","Transaction Date", "Account Number", "Token Number","Transaction Amount","Balance");
                csv_data.push(csvrow.join(","));
            // Get each row data
            //var rows = document.getElementsByTagName('tr');
            var tableName = $('#creditSaleDetailsTbl').DataTable();
           tableName.rows().every(function(){
                            var csvrow = [];

                            csvrow.push(this.data()[0]);
                            csvrow.push(this.data()[1]);
                            csvrow.push(this.data()[2]);
                            csvrow.push(this.data()[3]);
                            csvrow.push(this.data()[4]);
                            csvrow.push(this.data()[5]);

                            csv_data.push(csvrow.join(","));
                        });
                        // Combine each row data with new line character
                        csv_data = csv_data.join('\n');

            // Call this function to download csv file
            downloadCSVFile(csv_data);

        }

        function downloadCSVFile(csv_data) {

            // Create CSV file object and feed
            // our csv_data into it
            CSVFile = new Blob([csv_data], {
                type: "text/csv"
            });

            // Create to temporary link to initiate
            // download process
            var temp_link = document.createElement('a');

            // Download csv file
            temp_link.download = "DealerCreditSaleDetails.csv";
            var url = window.URL.createObjectURL(CSVFile);
            temp_link.href = url;

            // This link should not be displayed
            temp_link.style.display = "none";
            document.body.appendChild(temp_link);

            // Automatically click the link to
            // trigger download
            temp_link.click();
            document.body.removeChild(temp_link);
        }
    function generatePDF() {
         var doc = new jsPDF();  //create jsPDF object
         var htmlstring = '';
         var tempVarToCheckPageHeight = 0;
         var pageHeight = 0;
         pageHeight = doc.internal.pageSize.height;
         margins = {
            top: 120,
            bottom: 60,
            left: 40,
            right: 40,
            width: 800
         };
         var y = 20;
         doc.setLineWidth(2);

         doc.text(40, y = y + 30, "Dealer Credit Sale Details");

         doc.autoTable({
            html: '#creditSaleDetailsTblforPDF',
            startY: 70,
            tableWidth: 'auto',
            margin: {right:10,left:10},
            useCss: true,
            columnStyles: { text: { cellWidth: 'auto' } },
            styles: {
                    minCellHeight: 10
                }
         })
         doc.save('DealerCreditSaleDetails.pdf');

    }
</script>

