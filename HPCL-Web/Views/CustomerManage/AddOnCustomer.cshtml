@model HPCL.Common.Models.ViewModel.CustomerManage.AddOnCustomerModel
@{
    ViewData["Title"] = "Create Customer Add On User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-lg-12">
   <div class="bg-white p-2 p-md-4">
      <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
         <li class="breadcrumb-item"><a href="@Url.Action("Index", "CustomerManage")" class="text_primary">Profile</a> </li>
         <li class="breadcrumb-item font-weight-light"> Create Customer Add On User</li>
      </ul>
      @using (Html.BeginForm("AddOnCustomer", "CustomerManage", FormMethod.Post, new { @enctype = "multipart/form-data" }))
      {
         <div class="w-100">
            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
               <div class="border-1 rounded border-grey pb-3">
                  <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Create Customer Add On User</p>
                  @if (Model.Success != "")
                  {
                     <div class="mb-3 text-center" style="background-color: #a0f1d6;">@Model.Success</div>
                  }
                  <div class="col-lg-12 col-md-12 col-12 py-3">
                     <div class="d-flex align-items-center flex-wrap">
                        <div class="col-lg-6 col-12">
                           <div class="d-flex align-items-center flex-wrap mb-3">
                              <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                              <div class="col-md-7 col-12"> 
                                 <div class="custom_select">
                                    @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", @id = "CustomerId", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                    @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "error", @id = "CustomerIdValErrMsg" })
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="col-lg-6 col-12">
                           <div class="d-flex align-items-center flex-wrap mb-3">
                              <label class="font-weight-normal offset-md-1 col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                              <div class="col-md-7 col-12">
                                 <div class="custom_select">
                                    @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                    <div class="error" id="comm_email_error"></div>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="clearfix"></div>
                  </div>
                  <div class="clearfix"></div>
                  <div class="d-flex align-items-center justify-content-center mt-0">
                     <div class="px-0">
                        <button class="btn btn_primary" id="btnsubmit" type="submit" onclick="return SubmitValidations()">Create User</button>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      }
    <div class="clearfix"></div>
    @if (Model.Message != "")
    {
        <div style="background-color: #fee4e4;text-align:center;font-weight:bold" class="alert alert-danger mt-3">
            @Model.Message
        </div>
    }    
      <div class="clearfix"></div>
   </div>
</div>

<script>

$("#CustomerId").on("blur", function () 
{
    //debugger;
    if (document.getElementById("CustomerId").value.trim() == "") 
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $("#CustomerIdValErrMsg").html("Customer ID should not be Empty");
        return false;
    }
    else if (!$("#CustomerId").val().match(mappedCustomerId)) 
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $("#CustomerIdValErrMsg").html("Invalid Customer ID");
        return false;
    }
    else
    {
        $("#CustomerIdValErrMsg").html("");
    }

});

$("#EmailId").on("blur", function () 
{
    //debugger;
    if (document.getElementById("EmailId").value.trim() == "") 
    {
        $("#comm_email_error").attr("style", "display:block");
        $("#comm_email_error").html("Email field cannot be left blank");
        return false;
    }
    else if (!$("#EmailId").val().match(email)) 
    {
        $("#comm_email_error").attr("style", "display:block");
        $("#comm_email_error").html("Invalid email id (e.g.: abc@gmail.com)");
        return false;
    }
    else
    {
        $("#comm_email_error").html("");
    }

});

function SubmitValidations()
{
    debugger;

    var ret=true;

    if (document.getElementById("CustomerId").value.trim() == "") 
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $("#CustomerIdValErrMsg").html("Customer ID should not be Empty");
        ret=false;
    }
    else if (!$("#CustomerId").val().match(mappedCustomerId)) 
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $("#CustomerIdValErrMsg").html("Invalid Customer ID");
        ret=false;
    }
    else
    {
        $("#CustomerIdValErrMsg").html("");
    }

    if (document.getElementById("EmailId").value.trim() == "") 
    {
        $("#comm_email_error").attr("style", "display:block");
        $("#comm_email_error").html("Email field cannot be left blank");
        ret=false;
    }
    else if (!$("#EmailId").val().match(email)) 
    {
        $("#comm_email_error").attr("style", "display:block");
        $("#comm_email_error").html("Invalid email id (e.g.: abc@gmail.com)");
        ret=false;
    }
    else
    {
        $("#comm_email_error").html("");
    }
   
    console.log(ret);
               
	return ret;

   }

</script>