@model HPCL.Common.Models.ViewModel.DICV.DICVManageProfile
@using HPCL.Common.Resources

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>

<div class="bg-white p-2 p-md-4 w-100">

    <form id="formSub">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","DICV")" class="text_primary">DICV Dashboard</a> </li>
            <li class="breadcrumb-item font-weight-light">Manage Customer Profile</li>
        </ul>
        <div class="col-12 col-md-12 px-0">
            <div class="alert alert-success text-center mt-3 mb-0" role="alert" style="display:none;" id="responseMsg">
            </div>
        </div>
        <div class="w-100" id="dvMain">
            <div>
                <ul class="nav nav-tabs mt-2 form_tabs">
                    <li id="ViewCustomerProfile" class="nav-item" style="display:none">
                        <a class="nav-link active" id="CustomerProfile-tab" data-toggle="tab" href="#CustomerProfile" role="tab">Manage Customer Profile</a>
                    </li>
                    <li id="BasicInformation" class="nav-item" style="display:none">
                        <a class="nav-link disabled" id="BasicInfo-tab" data-toggle="tab" href="#BasicInfo" role="tab">Basic Information</a>
                    </li>
                    <li id="Address" class="nav-item" style="display:none">
                        <a class="nav-link disabled" id="Address-tab" data-toggle="tab" href="#AddressSection" role="tab">Update Customer Profile</a>
                    </li>
                    <li id="KeyOfficialDetails" class="nav-item" style="display:none">
                        <a class="nav-link disabled" id="OfficialDetails-tab" data-toggle="tab" href="#OfficialDetails" role="tab">Key Official Details</a>
                    </li>
                </ul>
            </div>

            <div class="tab-content mt-3">
                <div id="CustomerProfile" class="tab-pane active" role="tabpanel">
                    <div class="border-1 rounded border-grey mb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Manage Customer Profile</p>
                        <div class="w-100 mt-3">
                            <p class="text-dark px-0 pb-2 mb-3 font-weight-bold">Search Profile</p>
                            <div class="d-flex align-items-center justify-content-between flex-wrap">
                                <div class="col-md-6 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12 mb-0">Card Number:</label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control",maxlength = "16", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="cardNo_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12 offset-md-1 mb-0">Email:</label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = "50" })
                                            @Html.ValidationMessageFor(m => m.Email, "", new {@id="EmailErrMsg", @class = "error" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center justify-content-between flex-wrap">
                                <div class="col-md-6 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12 mb-0">Customer ID:</label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", maxlength = "10" })
                                            @Html.ValidationMessageFor(m => m.CustomerId, "", new {@id="custErrMsg", @class = "error" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12 offset-md-1 mb-0">Mobile Number:</label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control",maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="mobileNo_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center justify-content-center mt-0 mb-3">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="searchCards()" id="btnSearch">SEARCH</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnReset">@Label.Reset</button>
                                </div>
                            </div>
                        </div>
                    </div>

                      <div>
                            <div style="display:none;" class="alert alert-danger mt-3 text-center ml-3 mr-3" id="noRecord">
                            </div>
                      </div>


                    <div id="CustomerSearch" style="display:none;">
                        <table class="table table-striped table-bordered d-md-table d-block text-nowrap display table-responsive" style="width:100%;">
                            <thead>
                                <tr>
                                    <th>S.No.</th>
                                    <th>
                                        @Html.DisplayName("Customer ID")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Name On Card")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Customer Name")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Form Number")
                                    </th>
                                    @*<th>
                                        @Html.DisplayName("Form Receipt Date")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Status")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Card Details")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Dispatch Details")
                                    </th>*@
                                    <th>
                                        @Html.DisplayName("Mobile Number")
                                    </th>
                                    <th>
                                        @Html.DisplayName("E-Mail")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Actions")
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="py-3">
                        <label class="font-weight-normal col-md-5 col-12" id="lblCardDetails" style="display:none;"><b>Card Details</b> </label>
                    </div>

                    <table id="CardSearch" class="table table-striped table-bordered table-responsive" style="display:none;">

                        <tr>
                            <th>S.No.</th>
                            <th>
                                @Html.DisplayName("Card Number")
                            </th>
                            <th>
                                @Html.DisplayName("Vehicle No/User Name")
                            </th>
                            <th>
                                @Html.DisplayName("Issue Date")
                            </th>
                           @* <th>
                                @Html.DisplayName("Expiry Date")
                            </th>*@
                            <th>
                                @Html.DisplayName("Status")
                            </th>
                        </tr>
                    </table>

                </div>


                <div class="tab-pane" id="BasicInfo" role="tabpanel" aria-labelledby="BasicInfo-tab">
                    @*<div class="col-12 col-md-12 px-0">
                        <div style="display:none;" class="alert alert-danger mt-3 mb-0 text-center" id="failureMsg">
                        </div>
                    </div>*@
                    <div class="col-lg-6 col-md-12 col-12 pl-0 pl-0 pb-2">
                        <div class="border-1 rounded border-grey h-100">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Application Details</p>
                            <div class="py-3 px-2 px-md-4">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">SBU Type: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        @Html.DropDownListFor(m => m.SBUTypeID, new SelectList(Model.SBUTypes, "SBUId", "SBUName"), new { @class = "form-control SBUIdVal" })
                                    </div>
                                </div>
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Zonal Office: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                          @Html.DropDownListFor(m => m.CustomerZonalOfficeID, Enumerable.Empty<SelectListItem>(), new { @class = "form-control zonalVal" })
                                          <span class="error" id="zonalOffice_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Regional Office: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                          @Html.DropDownListFor(m => m.CustomerRegionalOfficeID, Enumerable.Empty<SelectListItem>(), new { @class = "form-control regionalVal" })
                                          <span class="error" id="regionalOffice_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Customer Type: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.DropDownListFor(m => m.CustomerTypeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
                                            @Html.HiddenFor(m => m.CustomerTypeId)
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Customer Sub Type: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.DropDownListFor(m => m.CustomerSubtypeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
                                            @Html.HiddenFor(m => m.CustomerSubtypeId)
                                        </div>
                                    </div>
                                </div>
                                <div id="divSalesArea">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Sales Area: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                          @Html.DropDownListFor(m => m.CustomerSalesAreaID, Enumerable.Empty<SelectListItem>(), new { @class = "form-control salesAreaVal" })
                                          <span class="error" id="salesArea_error"></span>
                                        </div>
                                    </div>
                                </div>
                                </div>
                                <div id="divFormNumber">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Form Number: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        @Html.TextBoxFor(m => m.CustomerFormNumber, new { id = "form-number", @class = "form-control", @readonly = true })
                                        <span class="error" id="CustomerFormNumber_error"></span>
                                    </div>
                                </div>
                                </div>

                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Application Date:  </label>
                                    <div class="col-md-7 col-12">
                                        @Html.TextBoxFor(m => m.CustomerApplicationDate, new { @class = "form-control", @readonly = true })
                                        <span class="error" id="CustomerApplicationDate_error"></span>
                                    </div>
                                </div>
                                <div id="divSignedOn">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Signed On: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        @Html.TextBoxFor(m => m.CustomerSignedOn, new { @class = "form-control fromDate", @readonly = true })
                                        <span class="error" id="CustomerSignedOn_error"></span>
                                    </div>
                                </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-12 col-12 pr-0 pr-0 pb-2">
                        <div class="border-1 rounded border-grey h-100">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Personal Details</p>
                            <div class="py-3 px-2 px-md-4">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Individual/Org. Name: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="row">
                                            <div class="col-5">
                                                <div class="custom_select">
                                                    @*@Html.DropDownListFor(m => m.IndividualOrgNameTitle, new List<SelectListItem>
                                                    {
                                                    new SelectListItem(){ Text = "Title", Value = "-1" },
                                                    new SelectListItem(){ Text = "Mr", Value = "Mr"},
                                                    new SelectListItem(){ Text = "Ms", Value = "Ms"},
                                                    new SelectListItem(){ Text = "M/s", Value = "M/s"},
                                                    }, null, new { @class = "form-control px-0" })*@
                                                </div>
                                                @*<span class="error" id="salutaion_error"></span>*@
                                            </div>
                                            <div class="col-7 pl-0">
                                                @*@Html.TextBoxFor(m => m.IndividualOrgName, new { @class = "form-control", maxlength = "80" })
                                                <span class="error" id="individualName_error"></span>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="divNameOnCard">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Name on Card: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        @*@Html.TextBoxFor(m => m.CustomerNameOnCard, new { @class = "form-control", maxlength = "22" })
                                        <span class="error" id="nameOnCard_error"></span>*@
                                    </div>
                                </div>
                                </div>
                                <div id="divTypeOfBusinessEntity">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Type of Business Entity: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.DropDownListFor(m => m.CustomerTbentityID, new SelectList(Model.CustomerTbentityMdl, "TBEntityID", "TBEntityName"), new { @class = "form-control" })
                                        </div>
                                        <span class="error" id="typeOfbusiness_error"></span>
                                    </div>
                                </div>
                                </div>
                                <div id="divResidenceStatus">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Residence Status:</label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.DropDownListFor(x => x.CustomerResidenceStatus, new[]{
                                                new SelectListItem(){ Text = "Select Residence Status", Value = "-1"},
                                                new SelectListItem(){ Text = "Indian", Value = "Indian", Selected = true},
                                                new SelectListItem(){ Text = "NRI", Value = "NRI"},
                                                }, null, new { @class = "form-control" })
                                        </div>
                                        <span class="error" id="residenceStatus_error"></span>
                                    </div>
                                </div>
                                </div>

                                <div id="divIncomeTaxPAN">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Income Tax PAN:<sup class="text-danger">*</sup></label>
                                    <div class="col-md-5 col-12" id="dvPan">
                                        @Html.TextBoxFor(m => m.CustomerIncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off" })
                                        <span class="error" id="incomeTaxPan_error"></span>
                                    </div>
                                    <div class="col-md-2 col-12 pl-md-0">
                                        <button class="btn btn_primary" type="button" id="btnVerify" onclick="ValidatePAN()" style="min-width:auto;">Verify</button>
                                    </div>
                                </div>
                                </div>

                                <div id="divTypeOfCustomer">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Type Of Customer: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @*@Html.DropDownListFor(x => x.TypeOfCustomerID, new[]{
                                                    new SelectListItem(){ Text = "Select Customer Type", Value = "0"},
                                                    new SelectListItem(){ Text = "Competitor Customer", Value = "1"},
                                                    new SelectListItem(){ Text = "Existing HPCL Customer", Value = "2"},
                                                    new SelectListItem(){ Text = "New Customer", Value = "3"},
                                                    }, null, new { @class = "form-control", disabled = "true" })*@
                                        </div>
                                    </div>
                                </div>
                                 <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Tier Of Customer: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @*@Html.DropDownListFor(x => x.TierOfCustomerID, new[]{
                                                        new SelectListItem(){ Text = "Select Tier Of Customer", Value = "0"},
                                                        new SelectListItem(){ Text = "1", Value = "1"},
                                                        new SelectListItem(){ Text = "2", Value = "2"},
                                                        new SelectListItem(){ Text = "3", Value = "3"},
                                                        }, null, new { @class = "form-control", disabled = "true" })*@
                                        </div>
                                    </div>
                                </div>
                                </div>
                                <div class="form-group align-items-center flex-wrap" id="lblCustPOI">
                                        <p class="alert alert-info" style="padding: 5px 10px;">** Please provide the document details that you are going to upload as POI.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="clearfix">
                    </div>
                     <div class="d-flex align-items-center justify-content-center flex-wrap mt-3">
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" onclick="submitProfile()">UPDATE</button>
                        </div>
                   </div>*@
                </div>
                
                <div class="tab-pane" id="AddressSection" role="tabpanel" aria-labelledby="Address-tab">
                    <div class="col-12 col-md-12 px-0">
                        <div style="display:none;" class="alert alert-danger mt-3 mb-0 text-center" id="failureMsg">
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Update Customer Profile</p>
                        <div class="alert alert-danger mt-3 text-center" id="dvRemarks" style="@(Model.Remarks=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Remarks)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <p class="text-dark px-0 pb-2 mb-3 font-weight-bold">Application Details</p>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Customer/Org. Name <sup class="text-danger">*</sup></label>
                                        <div class="col-md-2 col-12 pr-0">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(x => x.IndividualOrgNameTitle, new[]{
                                                new SelectListItem(){ Text = "Title", Value = "-1" },
                                                new SelectListItem(){ Text = "Mr", Value = "Mr"},
                                                new SelectListItem(){ Text = "Ms", Value = "Ms"},
                                                new SelectListItem(){ Text = "M/s", Value = "M/s"},
                                                }, null, new { @class = "form-control px-0" })
                                            </div>
                                            <span class="error" id="salutaion_error"></span>
                                        </div>
                                        <div class="col-md-5 col-12 ">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.IndividualOrgName, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                            </div>
                                            <span class="error" id="individualName_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Name on Card <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerNameOnCard, new { @class = "form-control", autocomplete = "off", maxlength = "22" })
                                                <span class="error" id="nameOnCard_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="clearfix"></div>

                <div class="mb-3">
                        <div class="border-1 rounded border-grey w-100">
                            <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Communication Address</p>
                            <div class="py-3 px-2 px-md-4">
                                <div class="row w-100" id="permanent_add">
                                    <div class="d-flex align-items-center justify-content-between flex-wrap">
                                        <div class="col-md-6 col-12" id="divCCity">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">City:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextBoxFor(m => m.CommunicationCity, new { @class = "form-control", maxlength = "20" })
                                                    <span class="error" id="comm_city_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12" id="divCPinCode">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12" id="lblCPinCode">PIN Code:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextBoxFor(m => m.CommunicationPinCode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)" })
                                                    <span class="error" id="comm_pincode_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">State:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @Html.DropDownListFor(m => m.CommunicationStateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @id = "CommunicationStateID", @class = "form-control" })
                                                    </div>
                                                    <span class="error" id="comm_states_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12" id="divDistrict">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">District:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @Html.DropDownListFor(m => m.CommunicationDistrictId, new SelectList(Model.CustomerDistrictMdl, "DistrictID", "DistrictName"), new { @id = "CommunicationDistrictId", @class = "form-control" })
                                                    </div>
                                                    <span class="error" id="comm_district_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        @*<div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12" id="lblCPhone">Phone (Office): </label>
                                                <div class="col-md-7 col-12">
                                                    <div class="row">
                                                        <div class="col-4">
                                                            @Html.TextBoxFor(m => m.CommunicationDialCode, new { @id = "CommunicationDialCode", @class = "form-control", @readonly = true })
                                                        </div>
                                                        <div class="col-8 pl-0">
                                                            @Html.TextBoxFor(m => m.CommunicationPhoneNo, new { @id = "CommunicationPhoneNo", @class = "form-control", @readonly = true })
                                                        </div>
                                                    </div>
                                                    <span class="error" id="perma_officePhone_error"></span>
                                                </div>
                                            </div>
                                        </div>*@
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12" id="lblCMobile">Mobile: <sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @Html.TextBoxFor(m => m.CommunicationMobileNumber, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                        <div class="error" id="comm_mobileNumber_error"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12" id="lblCEmail">Email:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextBoxFor(m => m.CommunicationEmail, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                       @* <div class="col-md-6 col-12" id="divCFax">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">Fax:</label>
                                                <div class="col-md-7 col-12">
                                                    <div class="row">
                                                        <div class="col-4">
                                                            @Html.TextBoxFor(m => m.CommunicationFaxCode, new { @id = "CommunicationFaxCode", @class = "form-control", @readonly = true })
                                                        </div>
                                                        <div class="col-8 pl-0">
                                                            @Html.TextBoxFor(m => m.CommunicationFax, new { @id = "CommunicationFax", @class = "form-control", @readonly = true })
                                                        </div>
                                                    </div>
                                                    <span class="error" id="perma_faxNumber_error"></span>
                                                </div>
                                            </div>
                                        </div>*@
                                        @*<div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12" id="lblCEmail">Email:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextBoxFor(m => m.CommunicationEmail, new { @id = "CommunicationEmail", @class = "form-control", @readonly = true })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>*@
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12" id="lblCAddress1">Address 1:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextAreaFor(m => m.CommunicationAddress1, new {@rows = 2, @class = "form-control", maxlength = "50", @style = "resize: none;" })
                                                    <span class="error" id="comm_address1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12" id="divAddress2">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">Address 2:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextAreaFor(m => m.CommunicationAddress2, new {@rows = 2, @class = "form-control", maxlength = "50", @style = "resize: none;" })
                                                    <span class="error" id="comm_address2_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12" id="divAddress3">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">Address 3:</label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress3, new { @class = "form-control", maxlength = "50" })
                                                    <span class="error" id="comm_address3_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12" id="divLocation">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">Location:</label>
                                                <div class="col-md-7 col-12">
                                                    @Html.TextBoxFor(m => m.CommunicationLocation, new { @class = "form-control", maxlength = "20" })
                                                    <span class="error" id="comm_location_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Dealer Details</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Dealer Code </label>
                                        <div class="col-md-7 col-12 ">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.DealerCode, new { @class = "form-control", maxlength = "25", autocomplete = "off", onkeypress = "return AllowAlphaNumeric(event)", @readonly = "readonly" })
                                                <span class="error" id="DealerCode_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">Sales Executive Employee ID </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.SalesExecutiveEmployeeID, new { @class = "form-control", maxlength = "25", autocomplete = "off", @readonly = "readonly" })
                                                <span class="error" id="SalesExecutiveEmployeeID_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="clearfix">
                    </div>
                     <div class="d-flex align-items-center justify-content-center flex-wrap mt-3">
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" id="btnBack">BACK</button>
                        </div>
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" onclick="submitProfile()">UPDATE</button>
                        </div>
                   </div>
                </div>

                    <div class="py-2" id="divPermanentOfcAddress">
                        <div class="border-1 rounded border-grey w-100" id="PermanentOfcAddress">
                            <p class="text_primary px-3 py-2  m-0 font-weight-bold">Permanent/Registered Office Address</p>
                            <div class="py-3 px-2 px-md-4">
                               @* <label class="d-flex align-items-center justify-content-start px-3 mb-3">
                                    <input type="checkbox" name="sameAddressCheck" id="sameAddressCheck" disabled class="mr-2">
                                    <p class="m-0">Same as Communication Address</p>
                                </label>*@
                                <div class="row w-100" id="permanent_add">
                                    <div class="d-flex align-items-center justify-content-between flex-wrap">
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">Address 1:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @*@Html.TextBoxFor(m => m.PerOrRegAddress1, new { @id = "PerOrRegAddress1", @class = "form-control", @readonly = true })*@
                                                    <div class="error" id="perma_address1_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">Address 2:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @*@Html.TextBoxFor(m => m.PerOrRegAddress2, new { @id = "PerOrRegAddress2", @class = "form-control", @readonly = true })*@
                                                    <div class="error" id="perma_address2_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">Address 3:</label>
                                                <div class="col-md-7 col-12">
                                                    @*@Html.TextBoxFor(m => m.PerOrRegAddress3, new { @id = "PerOrRegAddress3", @class = "form-control", @readonly = true })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">Location:</label>
                                                <div class="col-md-7 col-12">
                                                    @*@Html.TextBoxFor(m => m.PerOrRegAddressLocation, new { @id = "PerOrRegAddressLocation", @class = "form-control", @readonly = true })
                                                    <span class="error" id="perma_location_error"></span>*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">City:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @*@Html.TextBoxFor(m => m.PerOrRegAddressCity, new { @id = "PerOrRegAddressCity", @class = "form-control", @readonly = true })
                                                    <span class="error" id="perma_city_error"></span>*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">Pin code:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    @*@Html.TextBoxFor(m => m.PerOrRegAddressPinCode, new { @id = "PerOrRegAddressPinCode", @class = "form-control", @readonly = true })
                                                    <span class="error" id="perma_pincode_error"></span>*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal offset-md-1 col-md-4 col-12">State:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @*@Html.DropDownListFor(m => m.PerOrRegAddressStateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @id = "PerOrRegAddressStateID", @class = "form-control", disabled = "true" })
                                                        <span class="error" id="perma_state_error"></span>*@
                                                    </div>                                                    
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="form-group d-flex align-items-center flex-wrap">
                                                <label class="font-weight-normal col-md-5 col-12">District:<sup class="text-danger">*</sup></label>
                                                <div class="col-md-7 col-12">
                                                    <div class="custom_select">
                                                        @*@Html.DropDownListFor(m => m.PermanentDistrictId, new SelectList(Model.CustomerDistrictMdl, "DistrictID", "DistrictName"), new { @id = "PermanentDistrictId", @class = "form-control", disabled = "true" })
                                                        <span class="error" id="perma_district_error"></span>*@
                                                    </div>                                                    
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="tab-pane" id="OfficialDetails" role="tabpanel" aria-labelledby="OfficialDetails-tab">
                    <div class="border-1 rounded border-grey w-100">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Key Official</p>
                        <div class="py-2 p-md-4">
                            <div class="d-flex align-items-start justify-content-between flex-wrap row">
                                <div class="col-lg-6 col-md-12 col-12">

                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Individual Initials <sup class="text-danger">*</sup> </label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOffIndividualInitials, new { @id = "KeyOfficialIndividualInitials", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>

                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Middle Name </label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOffMiddleName, new { @id = "KeyOffMiddleName", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Designation </label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOffDesignation, new { @id = "KeyOffDesignation", @class = "form-control", @readonly = true })
                                            <span class="error" id="official_designation_error"></span>*@
                                        </div>
                                    </div>
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Mobile<sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOffMobileNumber, new { @id = "KeyOffMobileNumber", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>
                                    
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Date of Anniversary</label>
                                        <div class="col-md-7 col-12">
                                           @* @Html.TextBoxFor(m => m.KeyOffDateOfAnniversary, new { id = "KeyOffDateOfAnniversary", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-12 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12">First Name <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="row">
                                                <div class="col-md-4 col-12">
                                                    @*@Html.DropDownListFor(m => m.KeyOffTitle, new List<SelectListItem>
                                                    {
                                                    new SelectListItem() {Text = "Mr", Value="1"},
                                                    new SelectListItem() {Text = "Mrs", Value="2"},
                                                    new SelectListItem() {Text = "Ms", Value="3"}
                                                    }, new { @class = "form-control", @id = "KeyOffTitle", disabled = "true" })

                                                    <span class="error" id="officialTitle_error"></span>*@
                                                </div>
                                                <div class="col-md-8 col-12">
                                                   @* @Html.TextBoxFor(m => m.KeyOffFirstName, new { @id = "KeyOffFirstName", @class = "form-control px-0", @readonly = true })
                                                    <span class="error" id="official_fName_error"></span>*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12">Last Name</label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOffLastName, new { @id = "KeyOffLastName", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12">Date of Birth</label>
                                        <div class="col-md-7 col-12">
                                            @*<input type="text" id="officialDOB" class="form-control" readonly="readonly">*@
                                        </div>
                                    </div>
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12">Email</label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOffEmail, new { @id = "KeyOffEmail", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>

                    <div class="border-1 rounded border-grey w-100 mt-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Other Details</p>
                        <div class="py-2 p-md-4">
                            <div class="d-flex align-items-center justify-content-between flex-wrap row">

                                <div class="col-lg-6 col-md-12 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-5 col-12">Area of Operation</label>
                                        <div class="col-md-7 col-12">
                                            <div class="d-flex align-items-center justify-content-between flex-wrap">
                                                <label class="d-flex align-items-center justify-content-between py-3">
                                                    <input type="checkbox" name="areaofoperation" id="interstate" class="mr-2 " disabled>
                                                    <p class="m-0">Inter State</p>
                                                </label>
                                                <label class="d-flex align-items-center justify-content-between py-3">
                                                    <input type="checkbox" name="areaofoperation" id="intercity" class="mr-2 " disabled>
                                                    <p class="m-0">Inter City</p>
                                                </label>
                                                <label class="d-flex align-items-center justify-content-between py-3">
                                                    <input type="checkbox" name="areaofoperation" id="intracity" class="mr-2" disabled>
                                                    <p class="m-0">Intra City</p>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-12 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-5 col-12">Fleet Size (No. of Vehicles Owned)</label>
                                        <div class="col-md-7 col-12">
                                            <div class="d-flex align-items-center justify-content-between flex-wrap">
                                                <div class="py-md-3 px-2 col-sm-6 col-md-3">
                                                    <span class="d-flex font-12">HCV</span>
                                                    @*@Html.TextBoxFor(m => m.FleetSizeNoOfVechileOwnedHCV, new { @id = "FleetSizeNoOfVechileOwnedHCV", @class = "w-100 form-control", @readonly = true })*@
                                                </div>
                                                <div class="py-md-3 px-2 col-sm-6 col-md-3">
                                                    <span class="d-flex font-12">LCV</span>
                                                    @*@Html.TextBoxFor(m => m.FleetSizeNoOfVechileOwnedLCV, new { @id = "FleetSizeNoOfVechileOwnedLCV", @class = "w-100 form-control", @readonly = true })*@
                                                </div>
                                                <div class="py-md-3 px-2 col-sm-6 col-md-3">
                                                    <span class="d-flex font-12">MUV/SUV</span>
                                                    @*@Html.TextBoxFor(m => m.FleetSizeNoOfVechileOwnedMUVSUV, new { @id = "FleetSizeNoOfVechileOwnedMUVSUV", @class = "w-100 form-control", @readonly = true })*@
                                                </div>
                                                <div class="py-md-3 px-2 col-sm-6 col-md-3">
                                                    <span class="d-flex font-12">Car/Jeep</span>
                                                    @*@Html.TextBoxFor(m => m.FleetSizeNoOfVechileOwnedCarJeep, new { @id = "FleetSizeNoOfVechileOwnedCarJeep", @class = "w-100 form-control", @readonly = true })*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-12 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-5 col-12">Type of Fleet</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @*@Html.DropDownListFor(m => m.CustomerTypeOfFleetID, new SelectList(Model.CustomerTypeOfFleetMdl, "TypeOfFleetId", "TypeOfFleetName"), new { @id = "CustomerTypeOfFleetID", @class = "form-control", disabled = "true" })*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-12 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-5 col-12">Card applied for</label>
                                        <div class="col-md-7 col-12">
                                            @*@Html.TextBoxFor(m => m.KeyOfficialCardAppliedFor, new { @id = "KeyOfficialCardAppliedFor", @class = "form-control", @readonly = true })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-12 col-12">
                                    <div class="form-group d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-5 col-12">Approx Monthly Spends on Vehicles</label>
                                        <div class="col-md-7 col-12">
                                            <div class="row">
                                                <div class="col-12 col-sm-8">
                                                    <div class="py-2">
                                                        <div class=" position-relative pr-4">
                                                            @*@Html.TextBoxFor(m => m.KeyOfficialApproxMonthlySpendsonVechile1, new { @id = "KeyOfficialApproxMonthlySpendsonVechile1", @class = "form-control", @readonly = true })
                                                            <a href="#" class="form_info" title="Fuel in Rs.">?</a>*@
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-12 col-sm-4">
                                                    <div class=" py-2">
                                                        <div class=" position-relative pr-4">
                                                            @*@Html.TextBoxFor(m => m.KeyOfficialApproxMonthlySpendsonVechile2, new { @id = "KeyOfficialApproxMonthlySpendsonVechile2", @class = "form-control", @readonly = true })
                                                            <a href="#" class="form_info" title="Lube in Rs.">?</a>*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
        @Html.HiddenFor(model => Model.ExternalPANAPIStatus)
        @Html.HiddenFor(model => Model.CustomerIdSelected)
            <!-- Modal : Dialog -->
            <!-- PAN ErrorMsg Modal -->
            <div class="modal fade" id="PANErrorMsg" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header py-2">
                            <h5 class="modal-title" id="exampleModalLabel" style="font-size:18px;">PAN Validation</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="col-lg-12 col-12">
                                <div class="d-flex align-items-center justify-content-center flex-wrap mb-0">
                                    <p class="mb-0">Entered PAN No. does not match with selected Type of Business Entity</p>
                                </div>
                            </div>
                            <div class="d-flex align-items-center justify-content-center mt-3">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="HidePANErrorMsgPopup(this)">OK</button>
                                </div>
                                <div class="px-2">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal : Dialog -->
    </form>
</div>

@using Microsoft.AspNetCore.Http;

<script type="text/javascript">
    $("#btnReset").click(function ()
    {
        window.location.href = '@Url.Action("DICVManageProfile", "DICV")';
    });

    $("#btnBack").click(function () 
    {
        $("#CustomerProfile-tab").removeClass("disabled");
        //$("#Address-tab").removeClass("disabled");
        $("#BasicInfo-tab").removeClass("disabled");
        $("#OfficialDetails-tab").removeClass("disabled");
        //$('#BasicInfo-tab').tab('show');
        $('#CustomerProfile-tab').tab('show');
        $("#Address-tab").addClass("disabled");
        //document.getElementById("OfficialDetails").style.display = "block";
        //document.getElementById("PermanentOfcAddress").style.display = "block";
    });
    
    //$(document).ready(function () {

    //     var loginType = '@Context.Session.GetString("LoginType")';

    //    if (loginType == "Customer") {

    //        $.ajax({
    //            url: "@Url.Action("BindCustomerDetails", "CustomerManage")",
    //            type: "POST",
    //            dataType: "JSON",
    //            success: function (res) {

    //                 console.log("res", res);

    //                  if(res.length > 0){
    //                      document.getElementById("noRecord").style.display = "none";

    //                      $("#CustomerSearch td").parent().remove();
    //                      $('#CustomerSearch table').DataTable().clear().destroy();
                                                    

    //                      var rows = "<tbody>"
    //                      for (var i = 0; i < res.length; i++) {
    //                          var ApplicationDate = res[i].dateOfApplication;
    //                          if(res[i].customerTypeName=="Driver")
    //                          {
    //                              ApplicationDate="";
    //                          }
    //                          rows += "<tr>"
    //                              + "<td>"+ (i+1) +"</td>"
    //                              + "<td width='400px' class='nav-item'><a class='customerId' data-toggle='tab' href='#BasicInfo' onclick='ViewBasicInfo(this)' role='tab'><span class='rowCardNo'>" + res[i].customerID + "</span></a></td>"
    //                              + "<td width='400px'>" + res[i].nameOnCard + "</td>"
    //                              + "<td width='400px' class='getCustType'>" + res[i].customerTypeName + "</td>"
    //                              + "<td width='400px'>" + res[i].formNumber + "</td>"
    //                              + "<td width='400px'>" + ApplicationDate + "</td>"
    //                              + "<td width='400px'>" + res[i].customerStatusName + "</td>"
    //                              + "<td width='400px''><a href='#CardSearch' class='viewCardDetails' onclick='GetCardSearch(this," + res[i].customerTypeId + ")'><i class='fa fa-eye'></i></a></td>"
    //                              + "<td width='400px'><a href='#aaa' class='editNumber'><i class='fa fa-eye'></i></a></td>"
    //                              + "<td width='400px'><a href='#BasicInfo' class='action' onclick='ViewBasicInfo(this)'><i class='fa fa-search'></a></td>"
    //                          "</tr >";

    //                      }
    //                      rows += "</tbody>"
    //                      $('#CustomerSearch table').append(rows);

    //                      //$('#CustomerSearch table').DataTable({
    //                      //      paging: true,
    //                      //      searching: false,
    //                      //      stateSave: true,
    //                      //      "bDestroy": true,
    //                      //      "lengthMenu": [5, 10, 20, 50, 100, 200, 500, 1000, 2000],
    //                      //      "autoWidth": false,
    //                      //      "oLanguage": {
    //                      //          "sLengthMenu": "Display _MENU_ Records",
    //                      //          "info": "Showing _START_ to _END_ of _TOTAL_ Records",
    //                      //      }
    //                      //});

    //                      document.getElementById("CustomerSearch").style.display = "block";
    //                  }else{
    //                        document.getElementById("CustomerSearch").style.display = "none";
    //                        $("#noRecord").html("");
    //                        $("#noRecord").append("<span>No Record Found</span>");
    //                        document.getElementById("noRecord").style.display = "block";
    //                  }

    //                $("#CustomerId").val('@Context.Session.GetString("UserId")');
    //                $("#CustomerId").attr("readonly", true);

    //            },
    //            error: function (ex) {
    //                alert('Failed' + ex);
    //            }
    //        });
    //    }
      
    //});

    $('select').SumoSelect({
            placeholder: '--Select--',
            search: true,
            searchText: 'Enter Text here.'
        });

    function searchCards()
    {
        debugger;
        var custtId = $("#CustomerId").val().trim();
        var cardNo= $("#CardNo").val().trim();
        var mobileNo= $("#MobileNo").val().trim();
        var EmailId = document.getElementById("Email").value.trim();
        document.getElementById("CardSearch").style.display = "none";
        document.getElementById("lblCardDetails").style.display = "none";
        var flag = "Y";
        if(custtId == "" && cardNo == "" && mobileNo == "" && mobileNo == "" && EmailId == "")
        {
            document.getElementById("CustomerSearch").style.display = "none";
            $("#noRecord").html("");
            $("#noRecord").append("<span>Please enter either Card Number or Email Or Customer ID or Mobile Number</span>");
            document.getElementById("noRecord").style.display = "block";
            flag = "N";
        }
        else
        {
            document.getElementById("noRecord").style.display = "none";
        }

        if(custtId != "")
        {
            if (!custtId.match(mappedCustomerId)) 
            {
                $("#custErrMsg").attr("style", "display:block");
                $("#custErrMsg").html("Invalid Customer ID");
                flag = "N";
            }
            else
            {
                $("#custErrMsg").html("");
            }
        }
        else
        {
            $("#custErrMsg").html("");
        }

        if (cardNo != "") 
        {
            if (!(cardNo.match(number)) || cardNo.length<16) 
            {
                $("#cardNo_error").attr("style", "display:block");
                $("#cardNo_error").html("Invalid Card Number");
                flag = "N";
            }
            else
            {
                $("#cardNo_error").attr("style", "display:none");
                $("#cardNo_error").html("");
            }
        }
        else
        {
            $("#cardNo_error").html("");
        }

        if (mobileNo != "") 
        {
            if (!mobileNo.match(phoneno) ) 
            {
                $("#mobileNo_error").attr("style", "display:block");
                $("#mobileNo_error").html("Invalid Mobile Number");
                flag = "N";
            }
            else
            {
                $("#mobileNo_error").attr("style", "display:none");
                $("#mobileNo_error").html("");
            }
        }
        else
        {
            $("#mobileNo_error").html("");
        }

        if (EmailId != "") 
        {
            if (EmailId.match(email)) 
            {
                document.getElementById("EmailErrMsg").innerHTML = "";
            }
            else 
            {
                $("#EmailErrMsg").attr("style", "display:block");
                $("#EmailErrMsg").html("Invalid email id (e.g.: abc@gmail.com)");
                flag = "N";
            }
        }
        else
        {
            document.getElementById("EmailErrMsg").innerHTML = "";
        }

        if (flag == "N")
        {
            return false;
        }


           if (flag == "Y") 
           {

             $.ajax({
                  url: "@Url.Action("BindCustomerDetailsForSearch", "DICV")",
                  type: "POST",
                  dataType: "JSON",
                  data: {CardNo:cardNo, Email:EmailId, CustomerId: custtId, MobileNo: mobileNo },
                  success: function (res){
debugger;
                      console.log("res", res);

                      if(res.length > 0)
                      {
                          document.getElementById("noRecord").style.display = "none";
                          document.getElementById("failureMsg").style.display = "none";
                          document.getElementById("failureMsg").innerHTML="";

                          $("#CustomerSearch td").parent().remove();
                          $('#CustomerSearch table').DataTable().clear().destroy();
                                                    

                          var rows = "<tbody>"
                          for (var i = 0; i < res.length; i++) {
                              var ApplicationDate = res[i].dateOfApplication;
                              if(res[i].customerTypeName=="Driver")
                              {
                                  ApplicationDate="";
                              }
                              rows += "<tr>"
                                  + "<td>"+(i+1)+"</td>"
                                  //+ "<td width='400px' class='nav-item'><a class='customerId' data-toggle='tab' href='#BasicInfo' onclick='ViewBasicInfo(this)' role='tab'><span class='rowCardNo'>" + res[i].customerID + "</span></a></td>"
                                  + "<td width='400px'>" + res[i].customerID + "</td>"
                                  + "<td width='400px'>" + res[i].nameOnCard + "</td>"
                                  + "<td width='400px' class='getCustType'>" + res[i].individualOrgName + "</td>"
                                  + "<td width='400px'>" + res[i].formNumber + "</td>"
                                  //+ "<td width='400px'>" + ApplicationDate + "</td>"
                                  //+ "<td width='400px'>" + res[i].customerStatusName + "</td>"
                                  //+ "<td width='400px''><a href='#CardSearch' class='viewCardDetails' onclick='GetCardSearch(this," + res[i].customerTypeId + ")'><i class='fa fa-eye'></i></a></td>"
                                  //+ "<td width='400px'><a href='#aaa' class='editNumber'><i class='fa fa-eye'></i></a></td>"
                                  + "<td width='400px'>" + res[i].communicationMobileNo + "</td>"
                                  + "<td width='400px'>" + res[i].communicationEmailid + "</td>"
                                  + "<td width='400px'><a href='#BasicInfo' class='action' onclick='ViewBasicInfo(this)'><i class='fa fa-search'></i></a></td>"
                              "</tr >";

                          }
                          rows += "</tbody>"
                          $('#CustomerSearch table').append(rows);

                          document.getElementById("CustomerSearch").style.display = "block";
                      }
                      else
                      {
                            document.getElementById("CustomerSearch").style.display = "none";
                            $("#noRecord").html("");
                            $("#noRecord").append("<span>No Record Found</span>");
                            document.getElementById("noRecord").style.display = "block";
                      }

                  },
                  error: function (ex) {
                      alert('Failed' + ex);
                  }
              });
          }
    }
      

    $('#CustomerId').on("input", function (evt) {
        var self = $(this);
        self.val(self.val().replace(/\D/g, ""));
        if ((evt.which < 48 || evt.which > 57)) {
            evt.preventDefault();
        }
    });

    //$("#nameOnCard").on("blur", function () 
    //{
    //    //debugger;
    //    if (document.getElementById("nameOnCard").value.trim() != "")
    //    {
    //        if (!document.getElementById("nameOnCard").value.match(nameWithSpaceCheck))
    //        {
    //            document.getElementById("NameOnCardErrMsg").innerHTML = "Invalid Name on Card";
    //            return false;
    //        }
    //        else
    //        {
    //            document.getElementById("NameOnCardErrMsg").innerHTML = "";
    //        }
    //    }
    //    else
    //    {
    //        document.getElementById("NameOnCardErrMsg").innerHTML = "";
    //    }
    //});

    $("#CustomerId").on("blur", function () 
    {
        var ret=true;
        //debugger;
        if (document.getElementById("CustomerId").value.trim() != "") 
        {
            if (!document.getElementById("CustomerId").value.match(mappedCustomerId)) 
            {
                $("#custErrMsg").attr("style", "display:block");
                $("#custErrMsg").html("Invalid Customer ID");
                ret=false;
            }
            else
            {
                $("#custErrMsg").html("");
            }
            //document.getElementById("NameOnCardErrMsg").innerHTML = "";
        }

        //var custtId = $("#CustomerId").val();
        //var nameOnCard = $("#nameOnCard").val();

        //if(custtId == "" && nameOnCard == "")
        //{
        //    $("#NameOnCardErrMsg").attr("style", "display:block");
        //    $("#NameOnCardErrMsg").html("Please enter either Customer ID or Name on card");
        //}
        //else if(custtId != "")
        //{
        //    if (!custtId.match(mappedCustomerId)) 
        //    {
        //        $("#custErrMsg").attr("style", "display:block");
        //        $("#custErrMsg").html("Invalid Customer ID");
        //    }
        //    else
        //    {
        //        $("#custErrMsg").html("");
        //        $("#NameOnCardErrMsg").html("");
        //    }
        //}
        //else
        //{
        //    $("#custErrMsg").html("");
        //    $("#NameOnCardErrMsg").html("");
        //}

        //if(nameOnCard!="")
        //{
        //    if (!nameOnCard.match(nameWithSpaceCheck))
        //    {
        //        $("#NameOnCardErrMsg").html("Invalid Name on Card");
        //    }
        //    else
        //    {
        //        $("#NameOnCardErrMsg").html("");
        //    }
        //}

    });


      function GetCardSearch(o,customerTypeId){
          var Id = o.closest('tr').childNodes[1].innerText;
          //alert(customerTypeId);
          $.ajax({
              url: "@Url.Action("CardDetailsForSearch", "DICV")",
              type: "POST",
              dataType: "JSON",
              data: { CustomerId: Id, CustomerTypeId: customerTypeId },
              success: function (data)
              {
                  console.log("data", data);
                  if (data.length > 0) {

                      $("#CardSearch td").parent().remove();
                      for (var i = 0; i < data.length; i++) {
                          //var issueDate = new Date(data[i].issueDate).toLocaleDateString("pt-PT");
                          //var expiryDate = new Date(data[i].expiryDate).toLocaleDateString("pt-PT");
                          var rows = "<tbody><tr>"
                              +"<td>"+(i+1)+"</td>"
                              + "<td width='400px'><span class='rowData'>" + data[i].cardNumber + "</span></td>"
                              + "<td width='400px'><span class='rowData'>" + data[i].vechileNo + "</span></td>"
                              + "<td width='400px'><span class='rowData'>" + data[i].issueDate + "</span></td>"
                              //+ "<td width='400px'><span class='rowData'>" + data[i].expiryDate + "</span></td>"
                              + "<td width='400px'><span class='rowData'>" + data[i].status + "</span></td>"
                          "</tr></tbody>";


                          $('#CardSearch').append(rows);

                      }
                      $("#lblCardDetails").show();
                      $("#CardSearch").show();
                  }
                  else 
                  {
                      $("#lblCardDetails").attr("style","display:none");
                      $("#CardSearch").attr("style", "display:none");
                  }
              },
          });
      };


      function GetComDistrict(stateId, districtId) {
          var id = stateId;
              if (id != 0) {
                  $("#state_error").html("");
              }

              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetDistrictDetails", "Customer")',
                  data: { Stateid: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      if (status == 'success') {
                          $("#CommunicationDistrictId").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              $('<option>',
                                  {

                                      value: data.districtID,
                                      text: data.districtName
                                  }).html(data.districtName).appendTo("#CommunicationDistrictId");
                          });
                          $("#CommunicationDistrictId")[0].sumo.reload();
                          //$("#CommunicationDistrictId").val(districtId);
                           setTimeout(function(){
                                $('#CommunicationDistrictId')[0].sumo.selectItem(districtId);
                            },500);
                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating District Data");
                  }
              });
      };

      function GetPerDistrict(stateId, districtId) {
          var id = stateId;
              if (id != 0) {
                  $("#state_error").html("");
              }

              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetDistrictDetails", "Customer")',
                  data: { Stateid: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      if (status == 'success') {
                          $("#PermanentDistrictId").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              $('<option>',
                                  {
                                      value: data.districtID,
                                      text: data.districtName
                                  }).html(data.districtName).appendTo("#PermanentDistrictId");
                          });
                          $("#PermanentDistrictId").val(districtId);
                          $("#PermanentDistrictId")[0].sumo.reload();
                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating District Data");
                  }
              });
      };

      //function GetRegionId(zonalId, regionId) {
      //    //debugger;
      //     var id = zonalId;
      //        if (id != 0) {
      //            $("#regionalOffice_error").html("");
      //        }
      //        $.ajax({
      //            type: 'POST',  // http method
      //            url: '@Url.Action("GetRegionalDetails", "Customer")',
      //            data: { ZonalOfficeID: zonalId },  // data to submit
      //            dataType: "json",
      //            success: function (data, status, xhr) {
      //                var v = data;
      //                if (status == 'success') {
      //                    $("#CustomerRegionalOfficeID").html("");
      //                    $.each(data, function (i, data) { // bind the dropdown list using json result
      //                        $('<option>',
      //                            {
      //                                value: data.regionalOfficeID,
      //                                text: data.regionalOfficeName
      //                            }).html(data.regionalOfficeName).appendTo("#CustomerRegionalOfficeID");
      //                    });
      //                    $("#CustomerRegionalOfficeID").val(regionId);
      //                    $("#CustomerRegionalOfficeID")[0].sumo.reload();
      //                }
      //                else {
      //                    console.log(v);
      //                }
      //            },
      //            error: function (jqXhr, textStatus, errorMessage) {
      //                alert("Error Populating Customer Region");
      //            }
      //        });
      //};

      function GetSubType(typeId, subTypeId) {
          var id = typeId;
          console.log(typeId);
          console.log(subTypeId);
              if (id != 0) {
                  $("#customerSubType_error").html("");
              }

              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetCustomerSubType", "Customer")',
                  data: { CustomerTypeID: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      console.log(data);
                      if (status == 'success') {
                          $("#customerSubType").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              $('<option>',
                                  {
                                      value: data.customerSubTypeID,
                                      text: data.customerSubTypeName
                                  }).html(data.customerSubTypeName).appendTo("#customerSubType");
                          });
                          $("#customerSubType").val(subTypeId);
                          $("#customerSubType")[0].sumo.reload();
                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating Customer Sub Type");
                  }
              });
      };

      function ViewBasicInfo(o) 
      {
    
          var CustomerId = o.closest('tr').childNodes[1].innerText;

          var customerType = o.closest('tr').childNodes[2].innerText;

          console.log(CustomerId+"     "+customerType);
          var zonalID="";
          var regionalOfficeID="";
          var customerSalesAreaID="";
          //var CustomerId = o.innerText;
          $.ajax({
              url: "@Url.Action("BindCustomerDetailsForSearch", "DICV")",
              type: "POST",
              dataType: "JSON",
              data: { CustomerId: CustomerId },
              success: function (res)
              {
                  console.log(res,"res");
                  if (res.length > 0) {
                      for (var i = 0; i < res.length; i++) {
                          if (res[i].customerID == CustomerId) 
                          {
                              //GetComDistrict(res[i].communicationStateId, res[i].communicationDistrictId);
                              //GetPerDistrict(res[i].permanentStateId, res[i].permanentDistrictId);
                              //GetSubType(res[i].customerTypeId, res[i].customerSubtypeId);

                              
debugger;
                              customerType=res[i].customerTypeName;
                              //if($('#SBUTypeID').val()!=res[i].sbuId)
                              //{
                              //   $('#SBUTypeID')[0].sumo.selectItem(res[i].strSBU);
                              //}
                              //else
                              //{
                              //    $("#SBUTypeID").trigger("change");
                              //}
debugger;
                          if(res[i].customerTypeName=="Driver")
                          {
                              document.getElementById("KeyOfficialDetails").style.display = "none";
                              document.getElementById("OfficialDetails-tab").style.display = "none";
                              document.getElementById("divPermanentOfcAddress").style.display = "none";
                              document.getElementById("divTypeOfCustomer").style.display = "none";
                              document.getElementById("divSalesArea").style.display = "none";
                              document.getElementById("divNameOnCard").style.display = "none";
                              document.getElementById("divAddress2").style.display = "none";
                              document.getElementById("divAddress3").style.display = "none";
                              document.getElementById("divLocation").style.display = "none";
                              document.getElementById("divDistrict").style.display = "none";
                              //document.getElementById("divCFax").style.display = "none";
                              document.getElementById("divCCity").style.display = "block";
                              document.getElementById("divTypeOfBusinessEntity").style.display = "none";
                              document.getElementById("divResidenceStatus").style.display = "none";
                              document.getElementById("lblCPinCode").className = "offset-md-1 col-md-4 col-12";
                              //document.getElementById("lblCMobile").className = "offset-md-1 col-md-4 col-12";
                              document.getElementById("lblCEmail").className = "offset-md-1 col-md-4 col-12";
                              $('#lblCAddress1').text('');
                              $('#lblCAddress1').append('Address <sup class="text-danger">*</sup>');
                              document.getElementById("divSignedOn").style.display = "none";
                              document.getElementById("divCPinCode").style.display = "block";
                              document.getElementById("divFormNumber").style.display = "block";
                              document.getElementById("divIncomeTaxPAN").style.display = "block";                              
                          }
                          else if(res[i].customerTypeName=="OTC")
                          {
                              document.getElementById("KeyOfficialDetails").style.display = "none";
                              document.getElementById("OfficialDetails-tab").style.display = "none";
                              document.getElementById("divPermanentOfcAddress").style.display = "none";
                              document.getElementById("divTypeOfCustomer").style.display = "none";
                              document.getElementById("divSalesArea").style.display = "none";
                              document.getElementById("divNameOnCard").style.display = "block";
                              document.getElementById("divAddress2").style.display = "block";
                              document.getElementById("divAddress3").style.display = "none";
                              document.getElementById("divLocation").style.display = "none";
                              document.getElementById("divDistrict").style.display = "block";
                              //document.getElementById("divCFax").style.display = "block";
                              document.getElementById("divCCity").style.display = "block";
                              document.getElementById("divTypeOfBusinessEntity").style.display = "none";
                              document.getElementById("divResidenceStatus").style.display = "none";
                              //document.getElementById("lblCPinCode").className = "offset-md-1 col-md-4 col-12";
                              //document.getElementById("lblCMobile").className = "offset-md-1 col-md-4 col-12";
                              //document.getElementById("lblCEmail").className = "offset-md-1 col-md-4 col-12";
                              //$('#lblCAddress1').text('');
                              //$('#lblCAddress1').append('Address <sup class="text-danger">*</sup>');
                              document.getElementById("divSignedOn").style.display = "none";
                              document.getElementById("divCPinCode").style.display = "block";
                              document.getElementById("divFormNumber").style.display = "block";
                              document.getElementById("divIncomeTaxPAN").style.display = "block";                              
                          }
                          else if(res[i].customerTypeName=="Tatkal")
                          {
                              document.getElementById("KeyOfficialDetails").style.display = "none";
                              document.getElementById("OfficialDetails-tab").style.display = "none";
                              document.getElementById("divPermanentOfcAddress").style.display = "none";
                              document.getElementById("divTypeOfCustomer").style.display = "none";
                              document.getElementById("divSalesArea").style.display = "none";
                              document.getElementById("divAddress2").style.display = "none";
                              document.getElementById("divAddress3").style.display = "none";
                              document.getElementById("divLocation").style.display = "none";
                              document.getElementById("divDistrict").style.display = "none";
                              //document.getElementById("divCFax").style.display = "none";
                              document.getElementById("divCCity").style.display = "none";
                              document.getElementById("divTypeOfBusinessEntity").style.display = "none";
                              document.getElementById("divResidenceStatus").style.display = "none";
                              //document.getElementById("lblCPinCode").className = "offset-md-1 col-md-4 col-12";
                              //document.getElementById("lblCMobile").className = "offset-md-1 col-md-4 col-12";
                              document.getElementById("lblCEmail").className = "offset-md-1 col-md-4 col-12";
                              $('#lblCAddress1').text('');
                              $('#lblCAddress1').append('Address <sup class="text-danger">*</sup>');
                              document.getElementById("divSignedOn").style.display = "block";
                              document.getElementById("divCPinCode").style.display = "none";
                              document.getElementById("divFormNumber").style.display = "block";
                              document.getElementById("divIncomeTaxPAN").style.display = "block";
                          }
                          else
                          {
                              document.getElementById("KeyOfficialDetails").style.display = "block";
                              document.getElementById("OfficialDetails-tab").style.display = "block";
                              document.getElementById("divPermanentOfcAddress").style.display = "block";
                              document.getElementById("divTypeOfCustomer").style.display = "block";
                              document.getElementById("divSalesArea").style.display = "block";
                              document.getElementById("divNameOnCard").style.display = "block";
                              document.getElementById("divAddress2").style.display = "block";
                              document.getElementById("divAddress3").style.display = "block";
                              document.getElementById("divLocation").style.display = "block";
                              document.getElementById("divDistrict").style.display = "block";
                              //document.getElementById("divCFax").style.display = "block";
                              document.getElementById("divCCity").style.display = "block";
                              document.getElementById("divTypeOfBusinessEntity").style.display = "block";
                              document.getElementById("divResidenceStatus").style.display = "block";
                              document.getElementById("lblCPinCode").className = "col-md-5 col-12";
                              //document.getElementById("lblCMobile").className = "col-md-5 col-12";
                              document.getElementById("lblCEmail").className = "col-md-5 col-12";
                              $('#lblCAddress1').text('');
                              $('#lblCAddress1').append('Address1 <sup class="text-danger">*</sup>');
                              document.getElementById("divSignedOn").style.display = "block";
                              document.getElementById("divCPinCode").style.display = "block";
                              document.getElementById("divFormNumber").style.display = "block";
                              document.getElementById("divIncomeTaxPAN").style.display = "block";
                          }

                          if(res[i].customerTypeName != "Tatkal")
                          {
                             document.getElementById("divSignedOn").style.display = "none";
                          }

                          if(res[i].customerTypeName == "Ashok Leyland" || res[i].customerTypeName == "Volvo Eicher" || res[i].customerTypeName == "DICV")
                          {
                              document.getElementById("KeyOfficialDetails").style.display = "none";
                              document.getElementById("OfficialDetails-tab").style.display = "none";
                              document.getElementById("divPermanentOfcAddress").style.display = "none";
                              document.getElementById("divSalesArea").style.display = "block";
                              document.getElementById("divTypeOfBusinessEntity").style.display = "block";
                              document.getElementById("divResidenceStatus").style.display = "block";
                              document.getElementById("divTypeOfCustomer").style.display = "none";
                              document.getElementById("divFormNumber").style.display = "none";
                              document.getElementById("divAddress3").style.display = "none";
                              document.getElementById("divLocation").style.display = "none";
                              document.getElementById("divIncomeTaxPAN").style.display = "block";
                              document.getElementById("divSignedOn").style.display = "block";
                          }

                              $('#CustomerIdSelected').val(res[i].customerID);
                              console.log('Select CustomerId: ' + $('#CustomerIdSelected').val())
                              $('#customertype-name').val(res[i].customerTypeName);
                              //$('#sales-area').val(res[i].salesArea);
                              $('#form-number').val(res[i].formNumber);
                             // $('#CustomerApplicationDate').val(res[i].dateOfApplication);
                              //var dApplication = new Date(res[i].dateOfApplication);
                              //document.getElementById('CustomerApplicationDate').valueAsDate = new Date(dApplication.getFullYear(), dApplication.getMonth(), dApplication.getDate(), 12);
                              document.getElementById('CustomerApplicationDate').value=res[i].customerApplicationDate;
                              //var son = new Date(res[i].approvedon);
                              document.getElementById('CustomerSignedOn').value=res[i].signedOn;
                              $('#IndividualOrgName').val(res[i].individualOrgName);
                              $('#CustomerNameOnCard').val(res[i].nameOnCard);
                              document.getElementById("individualName_error").innerHTML = "";
                              document.getElementById("nameOnCard_error").innerHTML = "";
                              document.getElementById("salutaion_error").innerHTML = "";

                              document.getElementById("comm_email_error").innerHTML = "";
                              document.getElementById("comm_mobileNumber_error").innerHTML = "";
                              document.getElementById("comm_district_error").innerHTML = "";
                              document.getElementById("comm_states_error").innerHTML = "";
                              document.getElementById("comm_pincode_error").innerHTML = "";
                              document.getElementById("comm_city_error").innerHTML = "";
                              document.getElementById("comm_address2_error").innerHTML = "";
                              document.getElementById("comm_address1_error").innerHTML = "";

                              if(res[i].typeOfBusinessEntityName!=null)
                              {
                                $('#CustomerTbentityID').val(res[i].typeOfBusinessEntityName);
                              }

                            var customerTbentityID = $('#CustomerTbentityID').val();
                            console.log(customerTbentityID);
                            if (customerTbentityID == "10") 
                            {
                                $('#lblCustPOI').show();
                                document.getElementById("CustomerIncomeTaxPan").maxLength = 30;
                            }
                            else 
                            {
                                $('#lblCustPOI').hide();
                                document.getElementById("CustomerIncomeTaxPan").maxLength = 10;
                            }

                              $('#CustomerIncomeTaxPan').val(res[i].incomeTaxPan);
                              console.log(res[i].incomeTaxPan);
                              console.log($('#CustomerIncomeTaxPan').val());
                              //$('#CustomerZonalOfficeID').val(res[i].zonalOfficeID);
                              //$('#CustomerZonalOfficeID')[0].sumo.selectItem(res[i].zonalOfficeID);
                              //GetRegionId(res[i].zonalOfficeID, res[i].regionalOfficeID);
                              zonalID=res[i].zonalOfficeID;
                              regionalOfficeID = res[i].regionalOfficeID;
                              customerSalesAreaID = res[i].customerSalesAreaID;
                              //setTimeout(function(){
                              //      console.log(zonalID);
                              //      $('#CustomerZonalOfficeID')[0].sumo.selectItem(zonalID);
                              //      console.log($('#CustomerZonalOfficeID').html());
                              //  },3000);

                              //  setTimeout(function(){
                              //      console.log(regionalOfficeID);
                              //      $('#CustomerRegionalOfficeID')[0].sumo.selectItem(regionalOfficeID);
                              //      console.log($('#CustomerRegionalOfficeID').html());
                              //  },6000);

                              //  if(customerSalesAreaID!=null)
                              //  {
                              //      setTimeout(function(){
                              //          console.log(customerSalesAreaID);
                              //          $('#CustomerSalesAreaID')[0].sumo.selectItem(customerSalesAreaID);
                              //          console.log($('#CustomerSalesAreaID').html());
                              //      },8000);
                              //  }
                               
                               //GetZonalOfficeId(res[i].sbuId, res[i].zonalOfficeID);
                               //GetRegionId(res[i].zonalOfficeID, res[i].regionalOfficeID);
                               //GetSalesArea(res[i].regionalOfficeID,res[i].customerSalesAreaID);

                                                             
                              //$('#CustomerZonalOfficeID').html("");
                              //var CustomerZonalOffice = $('<option value="' + res[i].zonalOfficeName + '">' + res[i].zonalOfficeName + '</option>');
                              //$('#CustomerZonalOfficeID').append(CustomerZonalOffice);
                              //$("#CustomerZonalOfficeID")[0].sumo.reload();
                              //$('#CustomerRegionalOfficeID').val(res[i].regionalOfficeID);
                              //$('#CustomerRegionalOfficeID')[0].sumo.selectItem(res[i].regionalOfficeID);
                              //$('#CustomerTypeID').val(res[i].customerTypeId);
                              //$('#CustomerTypeID')[0].sumo.selectItem(res[i].customerTypeId);

                              //$('#CustomerRegionalOfficeID').html("");
                              //var regionalOffice = $('<option value="' + res[i].regionalOfficeName + '">' + res[i].regionalOfficeName + '</option>');
                              //$('#CustomerRegionalOfficeID').append(regionalOffice);
                              //$("#CustomerRegionalOfficeID")[0].sumo.reload();

                               $('#CustomerTypeId').html("");
                               var CustomerType = $('<option value="' + res[i].customerTypeName + '">' + res[i].customerTypeName + '</option>');
                                $('#CustomerTypeId').append(CustomerType);
                                $("#CustomerTypeId")[0].sumo.reload();

                              //$('#residenceStatus').val(res[i].residenceStatus);
                              if(res[i].residenceStatus!=null)
                              {
                                $('#CustomerResidenceStatus')[0].sumo.selectItem(res[i].residenceStatus);
                              }
                              $('#CustomerTbentityID')[0].sumo.selectItem(res[i].typeOfBusinessEntityId);
                              //$('#customerSubType').val(res[i].customerSubtype);
                              //$('#customerSubType')[0].sumo.selectItem(res[i].customerSubtype);

                              $('#CustomerSubtypeId').html("");
                              var custSubType = $('<option value="' + res[i].customerSubtypeName + '">' + res[i].customerSubtypeName + '</option>');
                              $('#CustomerSubtypeId').append(custSubType);
                              $("#CustomerSubtypeId")[0].sumo.reload();

                              //$('#KeyOfficialIndividualInitials').val(res[i].keyOfficialIndividualInitials);
                              //$('#KeyOffNameofIndividual').val(res[i].KeyOfficialNameofIndividual);
                              //$('#KeyOffFirstName').val(res[i].keyOfficialFirstName);
                              //$('#KeyOffLastName').val(res[i].keyOfficialLastName);
                              //$('#KeyOffMiddleName').val(res[i].keyOfficialMiddleName);
                              //$('#KeyOffDesignation').val(res[i].keyOfficialDesignation);
                              ////var dob = new Date(res[i].keyOfficialDOB);
                              ////document.getElementById('officialDOB').valueAsDate = new Date(dob.getFullYear(), dob.getMonth(), dob.getDate(), 12);
                              //document.getElementById('officialDOB').value = res[i].keyOfficialDOB;
                              //var keyOfficialTitleId = "0";
                              //if (res[i].keyOfficialTitle != "") 
                              //{
                              //    if (res[i].keyOfficialTitle == "Mr" || res[i].keyOfficialTitle == "Mr.")
                              //        keyOfficialTitleId = "1";
                              //    else if (res[i].keyOfficialTitle == "Mrs" || res[i].keyOfficialTitle == "Mrs.")
                              //        keyOfficialTitleId = "2";
                              //    else if (res[i].keyOfficialTitle == "Ms" || res[i].keyOfficialTitle == "Ms.")
                              //        keyOfficialTitleId = "3";
                              //    else
                              //        keyOfficialTitleId = "1";
                              //}
                              ////$('#KeyOffTitle').val(keyOfficialTitleId);
                              //$('#KeyOffTitle')[0].sumo.selectItem(keyOfficialTitleId);
                              ////$('#KeyOffDialCode').val(res[i].keyOffDialCode);
                              ////$('#KeyOffPhoneNumber').val(res[i].keyOfficialPhoneNo);
                              //$('#KeyOffMobileNumber').val(res[i].keyOfficialMobile);
                              ////$('#KeyOffFaxCode').val(res[i].keyOffFaxCode);
                              ////$('#KeyOffFax').val(res[i].keyOffFax);
                              //$('#KeyOffEmail').val(res[i].keyOfficialEmail);
                              ////var doa = new Date(res[i].keyOfficialDOA);
                              ////document.getElementById('KeyOffDateOfAnniversary').valueAsDate = new Date(doa.getFullYear(), doa.getMonth(), doa.getDate(), 12);
                              //document.getElementById('KeyOffDateOfAnniversary').value = res[i].keyOfficialDOA;
                              //$('#FleetSizeNoOfVechileOwnedHCV').val(res[i].fleetSizeNoOfVechileOwnedHCV);
                              //$('#FleetSizeNoOfVechileOwnedLCV').val(res[i].fleetSizeNoOfVechileOwnedLCV);
                              //$('#FleetSizeNoOfVechileOwnedMUVSUV').val(res[i].fleetSizeNoOfVechileOwnedMUVSUV);
                              //$('#FleetSizeNoOfVechileOwnedCarJeep').val(res[i].fleetSizeNoOfVechileOwnedCarJeep);
                              //$('#CustomerTypeOfFleetID').val(res[i].eyOfficialTypkeOfFleetId);
                              //$('#KeyOfficialCardAppliedFor').val(res[i].keyOfficialCardAppliedFor);
                              //$('#KeyOfficialApproxMonthlySpendsonVechile2').val(res[i].keyOfficialApproxMonthlySpendsonVechile2);
                              //$('#KeyOfficialApproxMonthlySpendsonVechile1').val(res[i].keyOfficialApproxMonthlySpendsonVechile1);
                              $('#CommunicationAddress1').val(res[i].communicationAddress1);
                              $('#CommunicationAddress2').val(res[i].communicationAddress2);
                              $('#CommunicationAddress3').val(res[i].communicationAddress3);
                              $('#CommunicationLocation').val(res[i].communicationLocation);
                              $('#CommunicationCity').val(res[i].communicationCityName);
                              $('#CommunicationPinCode').val(res[i].communicationPincode);
                              //$('#CommunicationStateID').val(res[i].communicationStateId);
                              $('#CommunicationStateID')[0].sumo.selectItem(res[i].communicationStateId);
                              //$('#CommunicationDialCode').val(res[i].communicationDialCode);
                              //$('#CommunicationPhoneNo').val(res[i].communicationPhoneNo);
                              $('#CommunicationMobileNumber').val(res[i].communicationMobileNo);
                              //$('#CommunicationFaxCode').val(res[i].communicationFaxCode);
                              //$('#CommunicationFax').val(res[i].communicationFax);
                              $('#CommunicationEmail').val(res[i].communicationEmailid);
                              //$('#PerOrRegAddress1').val(res[i].permanentAddress1);
                              //$('#PerOrRegAddress2').val(res[i].permanentAddress2);
                              //$('#PerOrRegAddress3').val(res[i].permanentAddress3);
                              //$('#PerOrRegAddressLocation').val(res[i].permanentLocation);
                              //$('#PerOrRegAddressCity').val(res[i].permanentCityName);
                              //$('#PerOrRegAddressPinCode').val(res[i].permanentPincode);
                              ////$('#PerOrRegAddressStateID').val(res[i].permanentStateId);
                              //$('#PerOrRegAddressStateID')[0].sumo.selectItem(res[i].permanentStateId);
                              ////$('#PerOrRegAddressDialCode').val(res[i].perOrRegAddressDialCode);
                              //$('#PerOrRegAddressPhoneNumber').val(res[i].permanentPhoneNo);
                              //$('#PermanentFaxCode').val(res[i].permanentFaxCode);
                              //$('#PermanentFax').val(res[i].permanentFax);
                              //var individualOrgNameTitleId = "0";
                              //if (res[i].individualOrgNameTitle != "") 
                              //{
                              //    if (res[i].individualOrgNameTitle == "Mr" || res[i].individualOrgNameTitle == "Mr.")
                              //        individualOrgNameTitleId = "1";
                              //    else if (res[i].individualOrgNameTitle == "Mrs" || res[i].individualOrgNameTitle == "Mrs.")
                              //        individualOrgNameTitleId = "2";
                              //    else if (res[i].individualOrgNameTitle == "Ms" || res[i].individualOrgNameTitle == "Ms.")
                              //        individualOrgNameTitleId = "3";
                              //    else
                              //        individualOrgNameTitleId = "1";
                              //}
                              //console.log(individualOrgNameTitleId);
                              //$('#IndividualOrgNameTitle').val(individualOrgNameTitleId);
                              $('#IndividualOrgNameTitle')[0].sumo.selectItem(res[i].individualOrgNameTitle);
                              if(res[i].residenceStatus!=null)
                              {
                                 $('#CustomerResidenceStatus')[0].sumo.selectItem(res[i].residenceStatus);
                              }
                              //$('#CustomerTypeOfFleetID').val(res[i].keyOfficialTypeOfFleetId);
                              //$('#CustomerTypeOfFleetID')[0].sumo.selectItem(res[i].keyOfficialTypeOfFleetId);
                              //if (res[i].areaOfOperation != "") 
                              //{
                              //    var areaOfOperation=res[i].areaOfOperation;
                              //    console.log(areaOfOperation);
                              //    console.log(areaOfOperation.includes("Inter State"));
                              //    if (areaOfOperation.includes("Inter State"))
                              //        document.getElementById("interstate").checked = true;
                              //    if (areaOfOperation.includes("Inter City"))
                              //        document.getElementById("intercity").checked = true;
                              //    if (areaOfOperation.includes("Intra City"))
                              //        document.getElementById("intracity").checked = true;
                              //}
                              debugger;
                              //console.log(res[i]);
                              //$('#TypeOfCustomerID')[0].sumo.selectItem(res[i].typeOfCustomerID);
                              //$('#TierOfCustomerID')[0].sumo.selectItem(res[i].tierOfCustomerID);
                              GetComDistrict(res[i].communicationStateId, res[i].communicationDistrictId);

                              //document.getElementById("CardSearch").style.display = "none";
                              //document.getElementById("lblCardDetails").style.display = "none";
                              //document.getElementById("CustomerSearch").style.display = "none";
                              //$("#CustomerId").val("");
                              //$("#nameOnCard").val("");
                              //$("#custErrMsg").html("");
                              //$("#NameOnCardErrMsg").html("");
                          }
                      }
console.log(customerType);                     
debugger;
                      if(customerType == "OTC" || customerType == "Tatkal" || customerType == "Driver" || customerType == "Ashok Leyland" || customerType == "Volvo Eicher" || customerType == "DICV")
                      {
                        $("#CustomerProfile-tab").removeClass("disabled");
                        $("#Address-tab").removeClass("disabled");
                        $("#BasicInfo-tab").removeClass("disabled");
                        $("#OfficialDetails-tab").removeClass("disabled");
                        //$('#BasicInfo-tab').tab('show');
                        $('#Address-tab').tab('show');
                        document.getElementById("OfficialDetails-tab").style.display = "none";
                        document.getElementById("PermanentOfcAddress").style.display = "none";
                        //document.getElementById("OfficialDetails").style.display = "none";
                      }
                      else
                      {
                        $("#CustomerProfile-tab").removeClass("disabled");
                        $("#Address-tab").removeClass("disabled");
                        $("#BasicInfo-tab").removeClass("disabled");
                        $("#OfficialDetails-tab").removeClass("disabled");
                        $('#BasicInfo-tab').tab('show');
                        //document.getElementById("OfficialDetails").style.display = "block";
                        document.getElementById("PermanentOfcAddress").style.display = "block";
                      }
                  }

              },
              error: function (ex) {
                  alert('Failed' + ex);
              }
          });

      };

      $("#customerSubType").change(function () {
          var id = this.value;
          $("#CustomerSubTypeID").val(id);
      });

      $("#CommunicationDistrictId").change(function () {
          var id = this.value;
          $("#CommunicationDistrictId").val(id);
      });

      $("#PermanentDistrictId").change(function () {
          var id = this.value;
          $("#PermanentDistrictId").val(id);
      });


      // on customer selection Change
      $("#CustomerTypeID").change(function () {
          var id = this.value;
              if (id != 0) {
                  $("#customerSubType_error").html("");
              }

              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetCustomerSubType", "Customer")',
                  data: { CustomerTypeID: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      if (status == 'success') {
                          $("#customerSubType").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              $('<option>',
                                  {
                                      value: data.customerSubTypeID,
                                      text: data.customerSubTypeName
                                  }).html(data.customerSubTypeName).appendTo("#customerSubType");
                          });

                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating Customer Sub Type");
                  }
              });
      });

      //$("#CustomerZonalOfficeID").change(function () {
      //    var id = this.value;
      //        if (id != 0) {
      //            $("#regionalOffice_error").html("");
      //        }
      //        $.ajax({
      //            type: 'POST',  // http method
      //            url: '@Url.Action("GetRegionalDetails", "Customer")',
      //            data: { ZonalOfficeID: id },  // data to submit
      //            dataType: "json",
      //            success: function (data, status, xhr) {
      //                var v = data;
      //                if (status == 'success') {
      //                    $("#CustomerRegionalOfficeID").html("");
      //                    $.each(data, function (i, data) { // bind the dropdown list using json result
      //                        $('<option>',
      //                            {
      //                                value: data.regionalOfficeID,
      //                                text: data.regionalOfficeName
      //                            }).html(data.regionalOfficeName).appendTo("#CustomerRegionalOfficeID");
      //                    });

      //                }
      //                else {
      //                    console.log(v);
      //                }
      //            },
      //            error: function (jqXhr, textStatus, errorMessage) {
      //                alert("Error Populating Customer Region");
      //            }
      //        });
      //});

      $("#CommunicationStateID").change(function () {
              var id = this.value;

              if (id != 0) {
                  $("#comm_states_error").html("");
              }

              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetDistrictDetails", "Customer")',
                  data: { Stateid: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      if (status == 'success') {
                          $("#CommunicationDistrictId").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              $('<option>',
                                  {
                                      value: data.districtID,
                                      text: data.districtName
                                  }).html(data.districtName).appendTo("#CommunicationDistrictId");
                          });
                          $("#CommunicationDistrictId")[0].sumo.reload();
                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating District Data");
                  }
              });
      });
      $("#PerOrRegAddressStateID").change(function () {
              var id = this.value;
           if (id != 0) {
                  $("#state_error").html("");
              }

              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetDistrictDetails", "Customer")',
                  data: { Stateid: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      if (status == 'success') {
                          $("#PermanentDistrictId").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              $('<option>',
                                  {
                                      value: data.districtID,
                                      text: data.districtName
                                  }).html(data.districtName).appendTo("#PermanentDistrictId");
                          });
                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating District Data");
                  }

             });

      });

$('#CustomerId').keypress(function (e) 
{
    if (e.keyCode == 13) 
    {  // detect the enter key
        e.preventDefault();
        $('#btnSearch').click();
    }
});

 $("#CommunicationAddress1").on("blur", function () {
        //debugger;
        var Address = document.getElementById("CommunicationAddress1").value.trim();
        if (Address == "") 
        {
            document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) 
        {
            document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
            return false;
        }
        else if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
            return false;
        }
        else 
        {
            document.getElementById("comm_address1_error").innerHTML = "";
        }

  });

$("#CommunicationAddress2").on("blur", function () {
    //debugger;
    var Address = document.getElementById("CommunicationAddress2").value.trim();
    if (Address == "") 
    {
        document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
        return (false);
    }
    else if (!isNaN(document.getElementById("CommunicationAddress2").value.trim())) 
    {
        document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
        return false;
    }
    else if (!document.getElementById("CommunicationAddress2").value.match(atLeastOneAlphabet)) 
    {
        document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
        return false;
    }
    else 
    {
        document.getElementById("comm_address2_error").innerHTML = "";
    }

});

$("#CommunicationAddress3").on("blur", function () 
{
    //debugger;
    if (document.getElementById("CommunicationAddress3").value.trim() != "") 
    {
        if (!isNaN(document.getElementById("CommunicationAddress3").value.trim())) 
        {
            document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
            return false;
        }
        else if (!document.getElementById("CommunicationAddress3").value.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
            return false;
        }
        else 
        {
            document.getElementById("comm_address3_error").innerHTML = "";
        }

    }
    else 
    {
        document.getElementById("comm_address3_error").innerHTML = "";
    }
});

$("#CommunicationLocation").on("blur", function () {
    //debugger;
    if (document.getElementById("CommunicationLocation").value.trim() != "") 
    {
        if (!isNaN(document.getElementById("CommunicationLocation").value.trim())) 
        {
            document.getElementById("comm_location_error").innerHTML = "Invalid Location";
            return false;
        }
        else if (!document.getElementById("CommunicationLocation").value.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_location_error").innerHTML = "Invalid Location";
            return false;
        }
        else 
        {
            document.getElementById("comm_location_error").innerHTML = "";
        }
    }
    else 
    {
        document.getElementById("comm_location_error").innerHTML = "";
    }
});

$("#CommunicationCity").on("blur", function () {
    //debugger;
    var city = document.getElementById("CommunicationCity").value.trim();
    if (city == "") 
    {
        document.getElementById("comm_city_error").innerHTML = "City field cannot be left blank";
        return (false);
    }
    else 
    {
        if (!isNaN(document.getElementById("CommunicationCity").value.trim())) 
        {
            document.getElementById("comm_city_error").innerHTML = "Invalid City";
            return false;
        }
        else if (!document.getElementById("CommunicationCity").value.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_city_error").innerHTML = "Invalid City";
            return false;
        }
        else 
        {
            document.getElementById("comm_city_error").innerHTML = "";
        }
    }
});

$("#CommunicationPinCode").on("blur", function () {
    //debugger;
    if (document.getElementById("CommunicationPinCode").value.trim() == "") 
    {
        document.getElementById("comm_pincode_error").innerHTML = "PIN Code field cannot be left blank";
        return false;
    }
    else if (document.getElementById("CommunicationPinCode").value.substring(0, 1) == "0") 
    {
        document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
        return false;
    }
    else if (document.getElementById("CommunicationPinCode").value.length < 6) 
    {
        document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
        return false;
    }
    else if (!document.getElementById("CommunicationPinCode").value.match(pincode)) 
    {
        document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
        return false;
    }
    else 
    {
        document.getElementById("comm_pincode_error").innerHTML = "";    
    }

});

$("#CommunicationDistrictId").change(function () {
    debugger;
    var id = this.value;

    if (id != 0) {
        $("#comm_district_error").html("");
    }


 });

$("#CommunicationMobileNumber").on("blur", function () {
    //debugger;
    var communicationMobile = document.getElementById("CommunicationMobileNumber").value.trim();
    if (communicationMobile == "") 
    {
        document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
        return (false);
    }
    else if (document.getElementById("CommunicationMobileNumber").value.substring(0, 1) == "0") 
    {
        document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
        return false;
    }
    else if (document.getElementById("CommunicationMobileNumber").value.length < 10) 
    {
        document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
        return false;
    }
    else if (document.getElementById("CommunicationMobileNumber").value.match(phoneno)) 
    {
        document.getElementById("comm_mobileNumber_error").innerHTML = "";
    }
    else 
    {
        document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
        return false;
    }

});

$("#CommunicationEmail").on("blur", function () {
    //debugger;
    var communicationEmail = document.getElementById("CommunicationEmail").value.trim();
    if (communicationEmail == "") 
    {
        document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
        return (false);
    }
    else if (communicationEmail.match(email)) 
    {
        document.getElementById("comm_email_error").innerHTML = "";
    }
    else 
    {
        document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
        return (false);
    }

});

$("#CustomerNameOnCard").on("blur", function () {
    //debugger;
    var customerNameOnCard = document.getElementById("CustomerNameOnCard").value.trim();
    if (customerNameOnCard == "") 
    {
        document.getElementById("nameOnCard_error").innerHTML = "Name on Card field cannot be left blank";
        return (false);
    }
    else if (!isNaN(document.getElementById("CustomerNameOnCard").value.trim())) 
    {
        document.getElementById("nameOnCard_error").innerHTML = "Invalid Name on Card";
        return false;
    }
    else if (!document.getElementById("CustomerNameOnCard").value.match(nameWithSpaceCheck)) 
    {
        document.getElementById("nameOnCard_error").innerHTML = "Invalid Name on Card";
        return false;
    }
    else 
    {
        document.getElementById("nameOnCard_error").innerHTML = "";
    }
});

$("#IndividualOrgName").on("blur", function () {
    //debugger;
    var individualOrgName = document.getElementById("IndividualOrgName").value.trim();
    if (individualOrgName == "") 
    {
        document.getElementById("individualName_error").innerHTML = "Individual/Org. Name is required";
        return (false);
    }
    else if (!isNaN(document.getElementById("IndividualOrgName").value.trim())) 
    {
        document.getElementById("individualName_error").innerHTML = "Invalid Individual/Org. Name";
        return false;
    }
    else if (!document.getElementById("IndividualOrgName").value.match(nameWithSpaceCheck)) 
    {
        document.getElementById("individualName_error").innerHTML = "Invalid Individual/Org. Name";
        return false;
    }
    else 
    {
        document.getElementById("individualName_error").innerHTML = "";
    }
});

$("#CustomerNameOnCard").on("blur", function () {
    //debugger;
    var customerNameOnCard = document.getElementById("CustomerNameOnCard").value.trim();
    if (customerNameOnCard == "") 
    {
        document.getElementById("nameOnCard_error").innerHTML = "Name on Card field cannot be left blank";
        return (false);
    }
    else if (!isNaN(document.getElementById("CustomerNameOnCard").value.trim())) 
    {
        document.getElementById("nameOnCard_error").innerHTML = "Invalid Name on Card";
        return false;
    }
    else if (!document.getElementById("CustomerNameOnCard").value.match(nameWithSpaceCheck)) 
    {
        document.getElementById("nameOnCard_error").innerHTML = "Invalid Name on Card";
        return false;
    }
    else 
    {
        document.getElementById("nameOnCard_error").innerHTML = "";
    }
});


    function submitProfile()
    {
        debugger;
        var ret=true;
        var invalidAddress=true;
        
        if (document.getElementById("IndividualOrgNameTitle").value == "-1") 
        {
            document.getElementById("salutaion_error").innerHTML = "Select Title";
            ret = false;
        }
        else 
        {
            document.getElementById("salutaion_error").innerHTML = "";
        }


        if (document.getElementById("IndividualOrgName").value == "") 
        {
            document.getElementById("individualName_error").innerHTML = "Individual/Org. Name is required";
            ret = false;
        }
        else if (!isNaN(document.getElementById("IndividualOrgName").value.trim())) 
        {
            document.getElementById("individualName_error").innerHTML = "Invalid Individual/Org. Name";
            ret = false;
        }
        else if (!document.getElementById("IndividualOrgName").value.match(nameWithSpaceCheck)) 
        {
            document.getElementById("individualName_error").innerHTML = "Invalid Individual/Org. Name";
            ret = false;
        }
        else 
        {
            document.getElementById("individualName_error").innerHTML = "";
        }
        

        if (document.getElementById("CustomerNameOnCard").value.trim() == "") 
        {
            document.getElementById("nameOnCard_error").innerHTML = "Name on Card field cannot be left blank";
            ret = false;
        }
        else if (!isNaN(document.getElementById("CustomerNameOnCard").value.trim())) 
        {
            document.getElementById("nameOnCard_error").innerHTML = "Invalid Name on Card";
            ret = false;
        }
        else if (!document.getElementById("CustomerNameOnCard").value.match(nameWithSpaceCheck)) 
        {
            document.getElementById("nameOnCard_error").innerHTML = "Invalid Name on Card";
            ret = false;
        }
        else 
        {
            document.getElementById("nameOnCard_error").innerHTML = "";
        }

        var Address = document.getElementById("CommunicationAddress1").value.trim();
        if (Address == "") 
        {
            document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
            ret=false;
            invalidAddress=false;
        }
        else if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) 
        {
            document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
            ret=false;
            invalidAddress=false;
        }
        else if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
            ret=false;
            invalidAddress=false;
        }
        else 
        {
            document.getElementById("comm_address1_error").innerHTML = "";
        }

        var Address = document.getElementById("CommunicationAddress2").value.trim();
        if (Address == "") 
        {
            document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
            ret=false;
            invalidAddress=false;
        }
        else if (!isNaN(document.getElementById("CommunicationAddress2").value.trim())) 
        {
            document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
            ret=false;
            invalidAddress=false;
        }
        else if (!document.getElementById("CommunicationAddress2").value.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
            ret=false;
        }
        else 
        {
            document.getElementById("comm_address2_error").innerHTML = "";
        }

        //if (document.getElementById("CommunicationAddress3").value.trim() != "") 
        //{
        //    if (!isNaN(document.getElementById("CommunicationAddress3").value.trim())) 
        //    {
        //        document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
        //        ret=false;
        //        invalidAddress=false;
        //    }
        //    else if (!document.getElementById("CommunicationAddress3").value.match(atLeastOneAlphabet)) 
        //    {
        //        document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
        //        ret=false;
        //        invalidAddress=false;
        //    }
        //    else 
        //    {
        //        document.getElementById("comm_address3_error").innerHTML = "";
        //    }
        //}
        //else
        //{
        //    document.getElementById("comm_address3_error").innerHTML = "";
        //}

        //if (document.getElementById("CommunicationLocation").value.trim() != "") 
        //{
        //    if (!isNaN(document.getElementById("CommunicationLocation").value.trim())) 
        //    {
        //        document.getElementById("comm_location_error").innerHTML = "Invalid Location";
        //        ret=false;
        //        invalidAddress=false;
        //    }
        //    else if (!document.getElementById("CommunicationLocation").value.match(atLeastOneAlphabet)) 
        //    {
        //        document.getElementById("comm_location_error").innerHTML = "Invalid Location";
        //        ret=false;
        //        invalidAddress=false;
        //    }
        //    else 
        //    {
        //        document.getElementById("comm_location_error").innerHTML = "";
        //    }
        //}
        //else 
        //{
        //    document.getElementById("comm_location_error").innerHTML = "";
        //}

        var city = document.getElementById("CommunicationCity").value.trim();
        if (city == "") 
        {
            document.getElementById("comm_city_error").innerHTML = "City field cannot be left blank";
            ret=false;
        }
        else 
        {
            if (!isNaN(document.getElementById("CommunicationCity").value.trim())) 
            {
                document.getElementById("comm_city_error").innerHTML = "Invalid City";
                ret=false;
            }
            else if (!document.getElementById("CommunicationCity").value.match(atLeastOneAlphabet)) 
            {
                document.getElementById("comm_city_error").innerHTML = "Invalid City";
                ret=false;
            }
            else 
            {
                document.getElementById("comm_city_error").innerHTML = "";
            }
        }

        if (document.getElementById("CommunicationPinCode").value.trim() == "") 
        {
            document.getElementById("comm_pincode_error").innerHTML = "PIN Code field cannot be left blank";
            ret=false;
        }
        else if (document.getElementById("CommunicationPinCode").value.substring(0, 1) == "0") 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
            ret=false;
        }
        else if (document.getElementById("CommunicationPinCode").value.length < 6) 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
            ret=false;
        }
        else if (!document.getElementById("CommunicationPinCode").value.match(pincode)) 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
            ret=false;
        }
        else 
        {
            document.getElementById("comm_pincode_error").innerHTML = "";    
        }

        if (document.getElementById("CommunicationStateID").value == "0" || document.getElementById("CommunicationStateID").value == "") 
        {
            document.getElementById("comm_states_error").innerHTML = "State field cannot be left blank";
            ret = false;
        }
        else 
        {
            document.getElementById("comm_states_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationDistrictId").value == "0" || document.getElementById("CommunicationDistrictId").value == "")
        {
            document.getElementById("comm_district_error").innerHTML = "District field cannot be left blank";
            ret = false;
        }
        else 
        {
            document.getElementById("comm_district_error").innerHTML = "";
        }

        var communicationMobile = document.getElementById("CommunicationMobileNumber").value.trim();
        if (communicationMobile == "") 
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            ret=false;
        }
        else if (document.getElementById("CommunicationMobileNumber").value.substring(0, 1) == "0") 
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            ret=false;
        }
        else if (document.getElementById("CommunicationMobileNumber").value.length < 10) 
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            ret=false;
        }
        else if (document.getElementById("CommunicationMobileNumber").value.match(phoneno)) 
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }
        else 
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            ret=false;
        }

        var communicationEmail = document.getElementById("CommunicationEmail").value.trim();
        if (communicationEmail == "")
        {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            ret=false;
        }
        else if (!communicationEmail.match(email)) 
        {
            document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            ret=false;
        }
        else 
        {
            document.getElementById("comm_email_error").innerHTML = "";
        }
        
debugger;
        if (ret==true) 
        {

            var customerID = $("#CustomerIdSelected").val();
            var individualOrgNameTitle = $("#IndividualOrgNameTitle").val();
            var individualOrgName = $("#IndividualOrgName").val();
            var customerNameOnCard = $("#CustomerNameOnCard").val();
            var communicationAddress1 = $("#CommunicationAddress1").val();
            var communicationAddress2 = $("#CommunicationAddress2").val();
            var communicationCity = $("#CommunicationCity").val();
            var communicationPinCode = $("#CommunicationPinCode").val();
            var communicationStateID = $("#CommunicationStateID").val();
            var communicationDistrictId = $("#CommunicationDistrictId").val();
            var communicationMobileNumber = $("#CommunicationMobileNumber").val();
            var communicationEmail = $("#CommunicationEmail").val();
            
            var getAllData = [];

            getAllData.push({
                CustomerID: customerID,
                IndividualOrgNameTitle: individualOrgNameTitle,
                IndividualOrgName : individualOrgName,
                NameOnCard : customerNameOnCard,
                CommunicationAddress1 : communicationAddress1,
                CommunicationAddress2 : communicationAddress2,
                CommunicationCityName : communicationCity,
                CommunicationPincode  : communicationPinCode,
                CommunicationStateId  : communicationStateID,
                CommunicationDistrictId : communicationDistrictId,
                CommunicationPhoneNo : "-",
                CommunicationFax : "-",
                CommunicationMobileNo : communicationMobileNumber,
                CommunicationEmailid : communicationEmail
            })


            $.ajax({
                url: "@Url.Action("UpdateDICVCustomerProfile", "DICV")",
                type: "POST",
                data: { str: JSON.stringify(getAllData) },
                dataType: "JSON",
                success: function (res) 
                {
                    console.log(res);
                    if (res.result.success == true) 
                    {
                        $("#responseMsg").append("<span>" + res.result.data[0].reason + "</span>");

                        document.getElementById("responseMsg").style.display = "block";
                        document.getElementById("failureMsg").style.display = "none";
                        document.getElementById("failureMsg").innerHTML="";
                        document.getElementById("dvMain").style.display = "none";
                    }
                    else
                    {
                        document.getElementById("failureMsg").style.display = "block";
                        document.getElementById("responseMsg").style.display = "none";
                        document.getElementById("failureMsg").innerHTML="";
                        document.getElementById("failureMsg").innerHTML=res.result.data[0].reason;
                    }

                },
                error: function (ex) 
                {
                    alert('Failed' + ex);
                }
            });
        } 
        else 
        {
            return false;
        }
    }

    $("#CustomerIncomeTaxPan").on("blur", function () {
            debugger;
            var panNumber = document.getElementById("CustomerIncomeTaxPan").value.trim();

            var customerTbentityid = $("#CustomerTbentityID").val();
            localStorage.setItem("PANNOALREADYUSED", "1");
            localStorage.setItem("DUPLICATEPANUSED", "1");
            localStorage.setItem("PANNAMEMATCHING", "1");
            localStorage.setItem("INVALIDPAN", "1");
            var correctPANName = '';

            if (customerTbentityid == 10)
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "";
                if (panNumber == "")
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Govt. Dept. Identification Details required";
                    document.getElementById("incomeTaxPan_error").className = "error";
                }
                else
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                }
                return (false);
            }

            if (panNumber == "")
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field is required";
                document.getElementById("incomeTaxPan_error").className = "error";
                return (false);
            }
            else
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "";
            }

            document.getElementById("CustomerIncomeTaxPan").value = document.getElementById("CustomerIncomeTaxPan").value.trim().toUpperCase();
            panNumber = document.getElementById("CustomerIncomeTaxPan").value.trim();

            if ($('#CustomerIncomeTaxPan').val().match(pancard))
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                document.getElementById("incomeTaxPan_error").className = "error text-success";
            }
            else
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                $("#btnshowregAddress").attr("disabled", false);
                return (false);
            }

            //solo Propritorship 4th Char Pan should be 'P'--> 2
            //Public/Private Ltd Co 4th Char Pan should be 'C' --> 3
            //HUF (Hindu Undivided Family) 4th Char Pan should be 'H'--> 4
            //A stands for Association of Persons (AOP)—(Trust Foundation) 4th Char Pan should be 'A'-->8
            if (customerTbentityid !=10) 
            {
                let forthdigitPan = panNumber.substr(3, 1);
                console.log(forthdigitPan);
                if (customerTbentityid == 2 && forthdigitPan != 'P')
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    $('#PANErrorMsg').modal('show');
                    return (false);
                }
                else if (customerTbentityid == 3 && forthdigitPan != 'C')
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    $('#PANErrorMsg').modal('show');
                    return (false);
                }
                else if (customerTbentityid == 4 && forthdigitPan != 'H')
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    $('#PANErrorMsg').modal('show');
                    return (false);
                }
                else if (customerTbentityid == 8 && forthdigitPan != 'A')
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    $('#PANErrorMsg').modal('show');
                    return (false);
                }
                else if ((customerTbentityid == 1 || customerTbentityid == 5 || customerTbentityid == 6 || customerTbentityid == 7 || customerTbentityid == 9) && (forthdigitPan == 'A' || forthdigitPan == 'P'|| forthdigitPan == 'C'|| forthdigitPan == 'H'))
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    $('#PANErrorMsg').modal('show');
                    return (false);
                }
                else
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                    document.getElementById("incomeTaxPan_error").className = "error text-success";
                }
            }

            var OrgName = $('#IndividualOrgName').val().trim();
            var districtId = $("#CommunicationDistrictId").val();

            var externalPANAPIStatus="Y";

            externalPANAPIStatus = document.getElementById("ExternalPANAPIStatus").value.trim();

            console.log(externalPANAPIStatus);

    if(externalPANAPIStatus=="Y")
    {

           $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("PANValidation", "Customer")',
            data: { PANNumber: panNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                debugger;
                var jsonData = JSON.parse(data);
                console.log(jsonData);
                if (status == 'success' && jsonData['status-code'] == '101')
                {
                    //document.applicationForm.IndividualOrgName.value = jsonData["result"]["name"];
                    correctPANName = jsonData["result"]["name"];

                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                    document.getElementById("incomeTaxPan_error").className = "error text-success";

                    console.log(correctPANName);
                    console.log(OrgName);
                    if (correctPANName.toUpperCase() != OrgName.toUpperCase())
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Individual name not match with pan name";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        localStorage.setItem("PANNAMEMATCHING", "0");
                    }
                    else
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "";
                        document.getElementById("incomeTaxPan_error").className = "error text-success";

                    }

                }
                else
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    localStorage.setItem("INVALIDPAN", "0");
                    console.log('Not Success');
                }
            },
            error: function (jqXhr, textStatus, errorMessage)
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                console.log(jsonData['status-code']);
                document.getElementById("incomeTaxPan_error").className = "error";
            }
        });

    }
    else
    {
        localStorage.setItem("INVALIDPAN", "1");
        localStorage.setItem("PANNAMEMATCHING", "1");

    }


        });

    $("#CustomerIncomeTaxPan").keydown(function (e) {
        var k = e.keyCode || e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 9 || //tab
            k == 46 || //del
            k == 8 || // backspaces
            (!e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)

        if (!ok || (e.ctrlKey && e.altKey)) {
            e.preventDefault();
        }
    });

function HidePANErrorMsgPopup(o)
{
    debugger;
    $('#PANErrorMsg').modal('hide');
}

function GetZonalOfficeId(sbuId, zOfficeID) {
        var id = sbuId;

        if(id == "")
        {
            $(".zonalVal").html("");
            $(".zonalVal")[0].sumo.reload();
            return false;
        }


        if (id != 0) 
        {
            $("#zonalOffice_error").html("");
        }
        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetZonalOfficebySBUType", "Common")',
            data: { SBUTypeId: id },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') 
                {
                    $(".zonalVal").html("");
                    $('<option value="">--Select--</option>').appendTo(".zonalVal");
                    $.each(data, function (i, data) { // bind the dropdown list using json result
                        $('<option>',
                            {
                                value: data.zonalOfficeID,
                                text: data.zonalOfficeName
                            }).html(data.zonalOfficeName).appendTo(".zonalVal");
                    });
                    $(".zonalVal")[0].sumo.reload();

                    setTimeout(function(){
                                $('#CustomerZonalOfficeID')[0].sumo.selectItem(zOfficeID);
                            },500);
                    //console.log($(".zonalVal").html());
                    //console.log(zOfficeID);
                }
                else 
                {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating Zonal Office");
            }
        });
            
};

function GetRegionId(zonalId, regionId) {
         var id = zonalId;

           if(id == "")
           {
                $(".regionalVal").html("");
                $(".regionalVal")[0].sumo.reload();
                return false;
           }


            if (id != 0) 
            {
                $("#regionalOffice_error").html("");
            }
            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetRegionalOfcDetails", "AshokLeyLand")',
                data: { zonalOfcId: zonalId },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') 
                    {
                        $(".regionalVal").html("");
                        $('<option value="">--Select--</option>').appendTo(".regionalVal");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.regionalOfficeID,
                                    text: data.regionalOfficeName
                                }).html(data.regionalOfficeName).appendTo(".regionalVal");
                        });
                        $(".regionalVal")[0].sumo.reload();

                         setTimeout(function(){
                                   $('#CustomerRegionalOfficeID')[0].sumo.selectItem(regionId);
                                   console.log($('#CustomerRegionalOfficeID').val());
                               },700);
                        console.log($(".regionalVal").html());
                        console.log(regionId);
                    }
                    else 
                    {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating Regional Office");
                }
            });
    };

    // $("#SBUTypeID").change(function () {
    //    var id = this.value;

    //    $.ajax({
    //        type: 'POST',  // http method
    //        url: '@Url.Action("GetZonalOfficebySBUType", "Common")',
    //        data: { SBUTypeId: id },  // data to submit
    //        dataType: "json",
    //        success: function (data, status, xhr) {
    //            var v = data;
    //            if (status == 'success') {

    //                $("#CustomerZonalOfficeID").html("");
    //                $.each(data, function (i, data) { // bind the dropdown list using json result
    //                        if (i == 0) {
    //                        $('<option>',
    //                            {
    //                                value: 0,
    //                                text: "Select Zonal Office"
    //                            }).html("Select Zonal Office").appendTo("#CustomerZonalOfficeID");
    //                        }
    //                        else{
    //                        $('<option>',
    //                            {
    //                                value: data.zonalOfficeID,
    //                                text: data.zonalOfficeName
    //                            }).html(data.zonalOfficeName).appendTo("#CustomerZonalOfficeID");
    //                        }
    //                });
    //                $("#CustomerZonalOfficeID")[0].sumo.reload();
    //                //$("#CustomerZonalOfficeID").trigger("change");
    //            }
    //            else {
    //                console.log(v);
    //            }
    //        },
    //        error: function (jqXhr, textStatus, errorMessage) {
    //            alert("Error Populating Customer Zone");
    //        }
    //    });
    //});

    $(".SBUIdVal").change(function () {
            var id = this.value;

            
            if(id == "")
            {
                $(".zonalVal").html("");
                $(".zonalVal")[0].sumo.reload();
                return false;
            }

            if (id != 0) 
            {
                $("#zonalOffice_error").html("");
            }
            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetZonalOfficebySBUType", "Common")',
                data: { SBUTypeId: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') 
                    {
                        $(".zonalVal").html("");
                        $('<option value="">--Select--</option>').appendTo(".zonalVal");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.zonalOfficeID,
                                    text: data.zonalOfficeName
                                }).html(data.zonalOfficeName).appendTo(".zonalVal");
                        });
                        $(".zonalVal")[0].sumo.reload();
                        //$('.zonalVal').trigger('change');
                    }
                    else 
                    {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating Zonal Office");
                }
            });
     });

     $(".zonalVal").change(function () {
            var id = this.value;

            
            if(id == "")
            {
                $(".regionalVal").html("");
                $(".regionalVal")[0].sumo.reload();
                return false;
            }

            if (id != 0) 
            {
                $("#zonalOffice_error").html("");
            }
            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetRegionalOfcDetails", "AshokLeyLand")',
                data: { zonalOfcId: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') 
                    {
                        $(".regionalVal").html("");
                        $('<option value="">--Select--</option>').appendTo(".regionalVal");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.regionalOfficeID,
                                    text: data.regionalOfficeName
                                }).html(data.regionalOfficeName).appendTo(".regionalVal");
                        });
                        $(".regionalVal")[0].sumo.reload();
                        //$('.regionalVal').trigger('change');
                    }
                    else 
                    {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) 
                {
                    alert("Error Populating Regional Office");
                }
            });
     });

    $(".regionalVal").change(function () {
        var id = this.value;
        if (id != 0) 
        {
            $("#regionalOffice_error").html("");
        }
        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetsalesAreaDetails", "Customer")',
            data: { RegionID: id },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') {
                    $("#CustomerSalesAreaID").html("");
                    $.each(data, function (i, data) 
                    { // bind the dropdown list using json result
                        $('<option>',
                            {
                                value: data.salesAreaID,
                                text: data.salesAreaName
                            }).html(data.salesAreaName).appendTo("#CustomerSalesAreaID");
                    });
                    $("#CustomerSalesAreaID")[0].sumo.reload();
                }
                else 
                {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating Sales Area");
            }
        });

});

function GetSalesArea(regionId,customerSalesAreaID) {
         var id = regionId;

           if(id == "")
           {
                $(".salesAreaVal").html("");
                $(".salesAreaVal")[0].sumo.reload();
                return false;
            }


            if (id != 0) {
                $("#salesArea_error").html("");
            }
            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetsalesAreaDetails", "Customer")',
                data: { RegionID: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') 
                    {
                        $(".salesAreaVal").html("");
                        $('<option value="">--Select--</option>').appendTo(".salesAreaVal");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.salesAreaID,
                                    text: data.salesAreaName
                                }).html(data.salesAreaName).appendTo(".salesAreaVal");
                        });
                        $(".salesAreaVal")[0].sumo.reload();

                        if(customerSalesAreaID!=null)
                        {
                         setTimeout(function(){
                                   $('#CustomerSalesAreaID')[0].sumo.selectItem(customerSalesAreaID);
                               },500);
                        }
                        //console.log($(".salesAreaVal").html());
                        //console.log(regionId);
                    }
                    else {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating Sales Area");
                }
            });
    };

    $("#CustomerSalesAreaID").change(function () {
            var id = this.value;

            if (id != 0) {
                $("#salesArea_error").html("");
            }
        });

        $("#CustomerTbentityID").change(function () {
            var id = this.value;
            if (id != 0) {
                $("#incomeTaxPan_error").html("");
                $("#typeOfbusiness_error").html("");
            }

            document.getElementById("CustomerIncomeTaxPan").value = "";
            document.getElementById("incomeTaxPan_error").className = "error";

            if (id == 10) 
            {
                $('#lblPanText').text('');
                $('#lblPanText').append('Govt. Dept. Identification Details<sup class="text-danger">*</sup>');
                $('#btnVerify').hide();
                $('#lblCustPOI').show();
                document.getElementById("CustomerIncomeTaxPan").maxLength = 30;
                document.getElementById("dvPan").className = "col-md-7 col-12";
            }
            else 
            {
                $('#lblPanText').text('');
                $('#lblPanText').append('Income Tax PAN<sup class="text-danger">*</sup>');
                $('#btnVerify').show();
                $('#lblCustPOI').hide();
                document.getElementById("CustomerIncomeTaxPan").maxLength = 10;
                document.getElementById("dvPan").className = "col-md-5 col-12";
            }

            var panNumber = document.getElementById("CustomerIncomeTaxPan").value.trim();

            if (id == 10)
            {
                if (panNumber == "")
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Govt. Dept. Identification Details required";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    return (false);
                }
                else
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                }
            }
            else
            {
                if (panNumber == "")
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field is required";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    return (false);
                }
                else
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                }
            }

        });

        $("#CustomerSignedOn").on("change", function () {

            var selectedDate = document.getElementById("CustomerSignedOn").value.trim();

            if (selectedDate == "") 
            {
               document.getElementById("CustomerSignedOn_error").innerHTML = "Signed On date field cannot be left blank";
            }
            else 
            {
                document.getElementById("CustomerSignedOn_error").innerHTML = "";
            }

        });
        $("#CardNo").on("blur", function () 
        {
          var cardNo = $("#CardNo").val();
            if (cardNo != "") 
            {
               if (!(cardNo.match(number)) || cardNo.length<16) 
               {
                   $("#cardNo_error").attr("style", "display:block");
                   $("#cardNo_error").html("Invalid Card Number");
               }
               else
               {
                  $("#cardNo_error").attr("style", "display:none");
                  $("#cardNo_error").html("");
               }
           }
           else
           {
                $("#cardNo_error").attr("style", "display:none");
                $("#cardNo_error").html("");
           }

      });
      $("#MobileNo").on("blur", function () {
          var mobileNo= $("#MobileNo").val();
           if (mobileNo != "") 
           {
               if (!(mobileNo.match(phoneno))) 
               {
                   $("#mobileNo_error").attr("style", "display:block");
                   $("#mobileNo_error").html("Invalid Mobile Number");
               }
               else
               {
                  $("#mobileNo_error").attr("style", "display:none");
                  $("#mobileNo_error").html("");
               }
           }
           else
           {
                $("#mobileNo_error").attr("style", "display:none");
                $("#mobileNo_error").html("");
           }

      });

$("#Email").on("blur", function () 
{
    //debugger;
    var Email = document.getElementById("Email").value.trim();
    if (Email != "") 
    {
        if (Email.match(email)) 
        {
            document.getElementById("EmailErrMsg").innerHTML = "";
        }
        else 
        {
            document.getElementById("EmailErrMsg").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            return (false);
        }
    }
    else
    {
        document.getElementById("EmailErrMsg").innerHTML = "";
    }

});

</script>