@model HPCL.Common.Models.ViewModel.Cards.SetIndividualLimit

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>

<div class="bg-white p-2 p-md-4">
    <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
        <li class="breadcrumb-item"><a href="@Url.Action("Index")" class="text_primary">Cards</a> </li>
        <li class="breadcrumb-item font-weight-light">Set CCMS Limit for Individual Cards</li>
    </ul>
    <form method="post" data-ajax="true" data-ajax-controller="Cards" data-ajax-action="SetCcmsForIndCards" data-ajax-method="POST" data-ajax-success="OnSuccessSetLimitIndividual" data-ajax-failure="OnFailure">
        <div class="tab-content mt-3" id="myTabContent">
            <div class="tab-pane fade show active" id="basicInfo" role="tabpanel" aria-labelledby="basicInfo-tab">
                <div class="border-1 rounded border-grey h-100 mt-3">
                    <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Set CCMS Limit for Individual Cards</p>
                    <div class="p-2 p-md-4">
                        <div class="w-100">

                            <fieldset class="border-1 rounded border-grey">
                                <legend class="font-12 font-weight-bold d-inline-block w-auto ml-3 mb-0 px-2">Search Cards</legend>
                                <div class="d-flex align-items-center justify-content-between flex-wrap pt-3">
                                    <div class="col-md-6 col-12">
                                        <div class="form-group d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-5 col-12 mb-0">Customer ID<sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                @Html.TextBoxFor(m => m.CustomerId, new { @id = "CustomerDefaultVal", @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <div class="form-group d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-5 col-12 mb-0">Card Number</label>
                                            <div class="col-md-7 col-12">
                                                @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CardNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <div class="form-group d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-5 col-12 mb-0">Mobile Number</label>
                                            <div class="col-md-7 col-12">
                                                @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 col-12">
                                        <div class="form-group d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-5 col-12 mb-0">Vehicle Number</label>
                                            <div class="col-md-7 col-12">
                                                @Html.TextBoxFor(m => m.VechileNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.VechileNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="clearfix"></div>

                                <div class="d-flex align-items-center justify-content-center mt-md-3 flex-wrap px-4 mb-3">
                                    <div class="px-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                        <button class="btn btn_primary py-2 px-4" type="submit" id="btnSave" name="submit" style="background-color:#084693;color:white;">SEARCH</button>
                                    </div>
                                    <div class="px-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                        <a class="btn btn_primary py-2 px-4" href="#" id="btnCancel" onclick="resetClick()" style="background-color:#084693;color:white;">RESET</a>
                                    </div>
                                    <div class="px-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                        <a class="btn btn_primary py-2 px-4" href="#" style="background-color:#084693;color:white;">UPLOAD EXCEL</a>
                                    </div>
                                </div>
                            </fieldset>

                        </div>

                        <div class="clearfix"></div>

                        <div id="noRecord" class="mb-3 text-center alert alert-danger" style="display:none;"></div>


                        <div id="UpdateGrid" style="display:none;">

                            <div class="d-flex align-items-center justify-content-center flex-wrap mt-4">
                                <div class="col-12 col-md-6">
                                    <div id="limitSection" class="alert alert-warning mt-3" role="alert" style="width:100%;"> </div>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table id="CardSearch" class="datatable table table-striped d-block d-md-table table-bordered table-responsive mt-3" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th>
                                                S.No.
                                            </th>
                                            <th>
                                                @Html.DisplayName("Select")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Card Number")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Vehicle No")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Issue Date")
                                            </th>
                                           @* <th>
                                                @Html.DisplayName("Expiry Date")
                                            </th>*@
                                            <th>
                                                @Html.DisplayName("Status")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Mobile Number")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Type Of Limit")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Amount")
                                            </th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>

                            <div class="d-flex align-items-center justify-content-center mt-md-3 flex-wrap px-4 mb-3">
                                <div class="px-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                    <button class="btn btn_primary py-2 px-4" type="button" id="btnSave" name="submit" onclick="updateCards()">UPDATE</button>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@using Microsoft.AspNetCore.Http;
<script src="https://rawgit.com/moment/moment/2.2.1/min/moment.min.js"></script>

<script>

     $('.restrictPaste').on('paste', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
     });

     $("#CardSearch").on('keydown', '.amt', function (event) {
        if (event.shiftKey == true) {
            event.preventDefault();
        }
        debugger;
        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode==110) {

        } else {
            event.preventDefault();
        }
        if($(this).val().indexOf('.') !== -1 && (event.keyCode == 190|| event.keyCode == 110))
            event.preventDefault();
     });

     $(document).ready(function () {

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        $('.vls').SumoSelect({
            placeholder: '-Select-',
            search: true,
            searchText: 'Enter Text here.'
        });

        var loginType = '@Context.Session.GetString("LoginType")';

        if (loginType == "Customer") {

            $.ajax({
                url: "@Url.Action("SetCcmsForIndCards", "Cards")",
                type: "POST",
                dataType: "JSON",
                success: function (data) {

                    OnSuccessSetLimitIndividual(data);

                    $("#CustomerDefaultVal").val('@Context.Session.GetString("UserId")');
                    $("#CustomerDefaultVal").attr("readonly", true);

                    document.getElementById('CardSearch').style.display = 'inline-table';

                },
                error: function (ex) {
                    alert('Failed' + ex);
                }
            });
        }
    });

    function resetClick() {
        window.location.reload(true);
    }

    $("#CardSearch").on('click', '.checkEnable', function (e) {

        currentRow = $(this).closest("tr");

        if ($(this).is(':checked')) {

            var selectedVal = currentRow.find('.vls').val();

            $(this).closest("tr").attr("style", "background-color: #90ee90;" );

            currentRow.find('input:text').attr("readonly", false);
            currentRow.find('.vls').attr("readonly", false);
            currentRow.find('.vls').attr("disabled", false);

            if(selectedVal == "5"){
                currentRow.find('.amt').attr("readonly", true);
            }else{
                currentRow.find('.amt').attr("readonly", false);
            }
        }
        if (!$(this).is(':checked')) {
            $(this).closest("tr").attr("style", "background-color: #f2f2f2;");
            currentRow.find('input:text').attr("readonly", true);
            currentRow.find('.vls').attr("readonly", true);
            currentRow.find('.vls').attr("disabled", true);
            currentRow.find('.errs').css("display", "none");
            currentRow.find('.errss').css("display", "none");
        }
    });

    $("#CardSearch").on('paste', '.cgl', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
    });

    function OnSuccessSetLimitIndividual(res) {

        console.log("res", res);

        if (res.searchList.success == true) {

            document.getElementById("noRecord").style.display = "none";

            var ccmsDetails = res.searchList.data.ccmsBasicDetail;
            var ccmsBalanceDetails = res.searchList.data.ccmsBalanceDetail;

            $("#limitSection").html("");
            var amountAppend = "<span>Available CCMS Balance : " + ccmsBalanceDetails[0].actualCCMSBalance + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Unallocated CCMS Balance : " + ccmsBalanceDetails[0].unallocatedCCMSBalance + " </span>"

            $("#limitSection").append(amountAppend);

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetLimitType", "Common")',
                dataType: "json",
                success: function (data, status, xhr) {

                    console.log(data, "data");

                    $('#CardSearch').DataTable().clear().destroy();

                    var tbl = $('#CardSearch').DataTable({
                        paging: true,
                        searching: false,
                        stateSave: true,
                        "bDestroy": true,
                        "lengthMenu": [5, 10, 20, 50, 100, 200, 500, 1000, 2000],
                        "autoWidth": false,
                        "oLanguage": {
                            "sLengthMenu": "Display _MENU_ Records",
                            "info": "Showing _START_ to _END_ of _TOTAL_ Records",
                        }
                    });

                    for (var i = 0; i < ccmsDetails.length; i++) {

                        var isDts;
                        //var expDts;

                        if(((ccmsDetails[i].issueDate) == "01/01/0001 00:00:00") || ((ccmsDetails[i].issueDate) == "01/01/1900 00:00:00") || ((ccmsDetails[i].issueDate) == null)){
                            isDts = "";
                        }else{
                            isDts = moment(ccmsDetails[i].issueDate, 'DD-MM-YYYY').format('DD-MM-YYYY');
                        }

                        //if(((ccmsDetails[i].expiryDate) == "01/01/0001 00:00:00") || ((ccmsDetails[i].expiryDate) == "01/01/1900 00:00:00") || ((ccmsDetails[i].expiryDate) == null)){
                        //    expDts = "";
                        //}else{
                        //    expDts = moment(ccmsDetails[i].expiryDate, 'DD-MM-YYYY').format('DD-MM-YYYY');
                        //}

                        var ccmsReloadSaleLimit = (ccmsDetails[i].ccmsReloadSaleLimitValue).toFixed(1);

                        var srNumber = (ccmsDetails[i].srNumber || '');
                        var pressCheck = "<input type='checkbox' class='checkEnable' name='enableRow'>";
                        var cardNumber = "<span class='cdn'>"+(ccmsDetails[i].cardNumber || '')+"</span>";
                        var vechileNo = "<span class='vn'>" + (ccmsDetails[i].vechileNo || '')+"</span>";
                        var issueDate = "<span class='isd'>" + isDts+"</span>";
                        //var expiryDate = "<span class='expd'>" + expDts+"</span>";
                        var status = "<span class='sts'>" + (ccmsDetails[i].status || '')+"</span>";
                        var mobileNumber = "<div style='width:160px;display:flex;'><input maxlength='10' onkeypress='return isNumberKey(event)' onchange='mobilenoChange(this," + (i) + ")' class='form-control mobn cgl' maxlength='10' pattern='^(?!(0))[0-9]{10}$' name='" + (ccmsDetails[i].mobileNumber || '') + "' type='text' value='" + (ccmsDetails[i].mobileNumber || '') + "' readonly='readonly'><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle errs' id='mobileno_error_"+i+"' aria-hidden='true'></i></div>";
                        var ccmsLimitOption = "<div style='width:160px;display:flex;'><select onchange='selectCcmsLimitChange(this," + (i) + ")' readonly='readonly' disabled='disabled' class='form-control vls cgl'><option value='" + (ccmsDetails[i].ccmsLimitOption || '') + "'>" + (ccmsDetails[i].description || '') + "</option></select><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle' id='selectCcmsLimit_error_"+i+"' aria-hidden='true'></i></div>";
                        var ccmsReloadSaleLimitValue = "<div style='width:160px;display:flex;'><input maxlength='10' id='ccmsReloadSaleid_"+i+"' onchange='ccmsReloadSaleChange(this," + (i) + ")' class='form-control amt cgl' type='text' value='" + (ccmsDetails[i].ccmsReloadSaleLimitValue.toFixed(2) || '') + "' readonly='readonly'><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle errss' id='ccmsReloadSale_error_"+i+"' aria-hidden='true'></i></div>";

                        tbl.row.add([
                            srNumber,
                            pressCheck,
                            cardNumber,
                            vechileNo,
                            issueDate,
                            //expiryDate,
                            status,
                            mobileNumber,
                            ccmsLimitOption,
                            ccmsReloadSaleLimitValue
                        ]).draw();
                    }

                    $.each(data.sortedtList, function (i, option) {
                        $("<option/>").val(option.limitId).text(option.description).appendTo(".vls");                         
                    });

                    $(".vls option").each(function () {
                        $(this).siblings('[value="' + this.value + '"]').remove();
                    });
                    //$("select.vls")[0].sumo.reload();

                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating Customer Region");
                }
            });

            document.getElementById('UpdateGrid').style.display = 'grid';
        } else {
            document.getElementById("UpdateGrid").style.display = "none";
            $("#noRecord").html("");
            $("#noRecord").append("<span>" + res.searchList.message + "</span>");
            document.getElementById("noRecord").style.display = "block";
        }
    }

    function updateCards() {

        var updateArray = new Array();
        var viewArray = new Array();

        cnt = 0;
        var flag = "Y";
        var Cardno;
        $("#CardSearch input[type=checkbox]:checked").each(function () {

            var selectedRow = $(this).closest("tr")[0];
            console.log("index",selectedRow.rowIndex);
            
            var indexS = (selectedRow.rowIndex) - 1;

            var row = $(this).closest("tr");

            var Mobileno = row.find('.mobn').val();
            var Limittype = row.find('.vls').val();
            var Amount = (row.find('.amt').val()) || "0";
            Cardno = row.find('.cdn').text();
            var vehicleNo = row.find('.vn').text();
            var issueDate = row.find('.isd').text();
            var expiryDate = row.find('.expd').text();
            var status = row.find('.sts').text();
            var limitTypeText = row.find('.vls option:selected').text();

            updateArray.push({
                Cardno: Cardno,
                Mobileno: Mobileno,
                Limittype: Limittype,
                Amount: Amount 
            });

            viewArray.push({
                Cardno: Cardno,
                vehicleNo: vehicleNo,
                issueDate: issueDate,
                expiryDate: expiryDate,
                status: status,
                Mobileno: Mobileno,
                Amount: Amount,
                limitTypeText: limitTypeText
            });

            
        if(Mobileno.trim()!=''){
            if (!Mobileno.match(/^[6789]\d{9}$/)){
                document.getElementById('mobileno_error_'+indexS).title="Invalid Mobile Number";
                document.getElementById('mobileno_error_'+indexS).style.display = "block";
                flag = "N";
            }else{
                 document.getElementById('mobileno_error_'+indexS).style.display = "none";
            }
        }

        if(Limittype.trim() == "5"){
            $('#ccmsReloadSaleid_'+indexS).attr("readonly", true);
        }else{
            $('#ccmsReloadSaleid_'+indexS).attr("readonly", false);
        }

        if(!$('#ccmsReloadSaleid_'+cnt).is('[readonly]')){
            if(Amount.trim()==''){
                document.getElementById('ccmsReloadSale_error_'+indexS).title="Please Enter Amount";
                document.getElementById('ccmsReloadSale_error_'+indexS).style.display = "block";
                flag = "N";
            }else{
                document.getElementById('ccmsReloadSale_error_'+indexS).style.display = "none";
            }
        }

        if(Amount.trim()!=''){
            //if (!Amount.match(number)){
            //    document.getElementById('ccmsReloadSale_error_'+indexS).title="Please Enter Numeric Value";
            //    document.getElementById('ccmsReloadSale_error_'+indexS).style.display = "block";
            //    flag = "N";
            //}
            //else
            if (!(parseFloat(Amount) <= 5000000)){
                document.getElementById('ccmsReloadSale_error_'+indexS).title="Invalid CCMS Reload/Sale Limit";
                document.getElementById('ccmsReloadSale_error_'+indexS).style.display = "block";
                flag = "N";
            }else{
                document.getElementById('ccmsReloadSale_error_'+indexS).style.display = "none";
            }
        }

        });

        
        if (Cardno == undefined) {
            alert("Please select atleast one record");
            flag = "N";
        }

        console.log("viewlist", viewArray);
        console.log("updt", updateArray);

        if (flag == "N")
            e.preventDefault();

        if (flag == "Y") {
             $("#CardSearch input[type=checkbox]:checked").each(function () {
                var selectedRow = $(this).closest("tr")[0];
                console.log("index",selectedRow.rowIndex);
                var indexS = (selectedRow.rowIndex) - 1;
                document.getElementById('mobileno_error_'+indexS).style.display = "none";
                document.getElementById('ccmsReloadSale_error_'+indexS).style.display = "none";
                $(this).closest("tr").find(".checkEnable").prop('checked',false);
                $(this).closest("tr").find('input:text').attr("readonly", true);
                $(this).closest("tr").find('.vls').attr("readonly", true);
                $(this).closest("tr").find('.vls').attr("disabled", true);
            });

            if (confirm('Are you sure! You want to process the selected record(s)?')) {
                console.log('ok');

                $.ajax({
                    url: "@Url.Action("UpdateCcmsIndividualCard", "Cards")",
                    type: "POST",
                    traditional: true,
                    data: { objCCMSLimits: JSON.stringify(updateArray), viewGirds: JSON.stringify(viewArray) },
                    success: function (res) {

                        var url = '@Html.Raw(@Url.Action("ViewUpdatedGrid","Cards"))';

                        window.location.href = url;
                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });

            } else {
                console.log('cancel')
            }
        }
    }


     function mobilenoChange(o, rowSelected){
        var mobileNoVal = o.value;
        o.value = o.value.replace(/[^\0-9]/ig, "");

        if(mobileNoVal.trim()!=''){
            if (!mobileNoVal.match(/^[6789]\d{9}$/)){
                document.getElementById('mobileno_error_'+rowSelected).title="Invalid Mobile Number";
                document.getElementById('mobileno_error_'+rowSelected).style.display = "block";
                return false;
            }
            else{
                document.getElementById('mobileno_error_'+rowSelected).title="";
                document.getElementById('mobileno_error_'+rowSelected).style.display = "none";
            }
        }
    }

     function selectCcmsLimitChange(o, rowSelected){
        var ccmslimitSelect = o.value;

        console.log("ccmslimitSelect", ccmslimitSelect);

         if(ccmslimitSelect == "5"){
            $('#ccmsReloadSaleid_'+rowSelected).val('');
            $('#ccmsReloadSaleid_'+rowSelected).attr("readonly", true);
         }else{
            $('#ccmsReloadSaleid_'+rowSelected).attr("readonly", false);
         }
     }

      function ccmsReloadSaleChange(o, rowSelected){
        var amountVal = o.value;

         if(amountVal.trim()==''){
            document.getElementById('ccmsReloadSale_error_'+rowSelected).title="Please Enter Amount";
            document.getElementById('ccmsReloadSale_error_'+rowSelected).style.display = "block";
            return false;
         }

         if ($('#ccmsReloadSaleid_'+rowSelected).attr("readonly") == true) {
                document.getElementById('ccmsReloadSale_error_'+rowSelected).title="";
                document.getElementById('ccmsReloadSale_error_'+rowSelected).style.display = "none";
         }

        if(amountVal.trim()!=''){
            //if (!amountVal.match(number)){
            //    document.getElementById('ccmsReloadSale_error_'+rowSelected).title="Please Enter Numeric Value";
            //    document.getElementById('ccmsReloadSale_error_'+rowSelected).style.display = "block";
            //    return false;
            //}
            //else 
            if (!(parseFloat(amountVal) <= 5000000)){
                document.getElementById('ccmsReloadSale_error_'+rowSelected).title="Invalid CCMS Reload/Sale Limit";
                document.getElementById('ccmsReloadSale_error_'+rowSelected).style.display = "block";
                return false;
            }
            else{
                document.getElementById('ccmsReloadSale_error_'+rowSelected).title="";
                document.getElementById('ccmsReloadSale_error_'+rowSelected).style.display = "none";
            }
        }
     }
</script>
<style>
    .cgl {
        width: 80%;
    }
</style>