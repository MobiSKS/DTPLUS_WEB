@model HPCL.Common.Models.ViewModel.Cards.SearchAllowedMerchant
@using Microsoft.AspNetCore.Http;

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4" style="background: #edecec !important;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")" class="text_primary">Cards</a> </li>
            <li class="breadcrumb-item font-weight-light">Mapping User Cards to Merchants</li>
        </ul>
        <form id="formVal">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Mapping User Cards to Merchants</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3 bg-white">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Card Number</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @{
                                                    if (Context.Session.GetString("LoginType") == "Customer")
                                                    {
                                                        @Html.DropDownListFor(m => m.CardNumber, Enumerable.Empty<SelectListItem>(), "--Select Card--", new { @class = "form-control cardListCls" })
                                                        @Html.ValidationMessageFor(m => m.CardNumber, "", new { @class = "text-danger" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.CardNumber, new { @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                        @Html.ValidationMessageFor(m => m.CardNumber, "", new { @class = "text-danger" })
                                                    }
                                                }
                                                @Html.ValidationMessage("All", "", new {@id="cardNumberValErr", @class = "text-danger" })
                                                @*<span style="display:none" class="error" id="cardNumberValErr"></span>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Merchant ID</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.MerchantId, "", new { @id = "merchantIdValErr", @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Customer ID</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerId, "", new { @id = "customerIdValErr", @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" id="searchFire" type="button">Search</button>
                                </div>
                                <div class="px-2">
                                    <a class="btn btn_primary" href="@Url.Action("ManageMapping")">Manage Card Mapping</a>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="resetClick()">Reset</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div class="clearfix"></div>

                <div>
                    <div class="mb-3 text-center alert alert-danger" style="display:none;" id="noRecord">

                    </div>
                </div>

                <div class="clearfix"></div>

                <div id="fetchDetails" style="display:none;">

                    <table id="getDetails" class="table table-striped d-md-table d-block table-bordered table-responsive nowrap mt-3" style="width:100%;">
                        <thead>
                            <tr>
                                <th><input type="checkbox" name="allListCheck" class="checkAll" /></th>
                                <th>Card Number</th>
                                <th>Customer ID</th>
                                <th>Merchant ID</th>
                                <th>Merchant Name</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                    </table>

                    <div class="clearfix"></div>

                    <div class="d-flex align-items-center justify-content-center mt-0">
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" onclick="blockMap()">DELETE MAPPING</button>
                        </div>
                    </div>

                </div>

            </div>
        </form>
        <div class="clearfix"></div>
    </div>
</div>


<script type="text/javascript">

    $('.restrictPaste').on('paste', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
    });

    function resetClick() {
        window.location.reload(true);
    }

    $(document).ready(function () {

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        var loginType = '@Context.Session.GetString("LoginType")';

        if (loginType == "Customer") {

            $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("GetCardList", "Cards")',
                    dataType: "json",
                 success: function (data, status, xhr) {

                     console.log(data);

                     $.each(data.cardList, function (i, option) {
                         $("<option/>").val(option.cardNo).text(option.cardNo).appendTo(".cardListCls");
                     });
                     $(".cardListCls")[0].sumo.reload();
                 },
                 error: function (jqXhr, textStatus, errorMessage) {
                     alert("Error Populating Cards");
                 }
             });
         }
    });

    $("#searchFire").on("click", (function (e) {

        var cardNo = $("#CardNumber").val();
        var merchantId = $("#MerchantId").val();
        var customerId = $("#CustomerId").val();

        var flag = "Y";

        if(cardNo.trim() == '' && merchantId.trim() == '' && customerId == ''){
            $("#cardNumberValErr").attr("style", "display:block");
            $("#cardNumberValErr").html("Please enter either Customer ID or Card Number or Merchant ID");
            flag = "N";
        }

        if (flag == "N")
            e.preventDefault();
        else{
            $("#cardNumberValErr").html("");
            $("#cardNumberValErr").attr("style", "display:none");
        }

        if (flag == "Y") {
            if ($("#formVal").valid()) {

                $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("MappingCardToMerchant", "Cards")',
                    data: $('#formVal').serialize(),
                    success: function (res, status, xhr) {

                        console.log(res);

                        if (res.searchList.success == true) {

                            document.getElementById("noRecord").style.display = "none";

                            $("#getDetails td").parent().remove();

                            for (var i = 0; i < res.searchList.data.length; i++) {

                                var rows = "<tbody><tr>"
                                    + "<td><input type='checkbox' class='rowSelect' name='rowCheck'></td>"
                                    + "<td><span class='cardNoVal'>" + (res.searchList.data[i].cardNo || '') + "</span></td>"
                                    + "<td><span class='merchantVal'>" + (res.searchList.data[i].merchantID || '') + "</span></td>"
                                    + "<td><span class='customerVal'>" + (res.searchList.data[i].customerID || '') + "</span></td>"
                                    + "<td>" + (res.searchList.data[i].merchantName || '') + "</td>"
                                    + "<td>" + (res.searchList.data[i].status || '') + "</td>"
                                    + "</tr ></tbody>";

                                $('#getDetails').append(rows);
                            }

                            document.getElementById("fetchDetails").style.display = "block";
                        } else {
                            document.getElementById("fetchDetails").style.display = "none";
                            $("#noRecord").html("");
                            $("#noRecord").append("<span>" + res.searchList.message + "</span>");
                            document.getElementById("noRecord").style.display = "block";
                        }

                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                         alert("Error Populating Cards");
                    }
                });

            } else {
                return false;
            }
        }
    })
    );

    $(".checkAll").click(function () {
        if (this.checked) {
            $(".rowSelect").prop("checked", true);
        } else {
            $(".rowSelect").prop("checked", false);
        }
    });

    function blockMap() {

        var merchantArray = [];

        $("#getDetails input[type=checkbox]:checked").each(function () {
            var row = $(this).closest("tr");
            var cardNo = row.find('.cardNoVal').text();
            var merchantId = row.find('.merchantVal').text();
            var customerId = row.find('.customerVal').text();

            merchantArray.push({
                cardNo: cardNo,
                merchantId: merchantId,
                customerId: customerId
            });
        });


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("DeleteCustomerMappingMerchant", "Cards")',
            data: { objCardMerchantMaps: JSON.stringify(merchantArray), status: "Block" },
            dataType: "json",
            success: function (data) {
                $("#noRecord").html("");
                $("#noRecord").append("<span>" + data + "</span>");
                document.getElementById("noRecord").style.display = "block";
            },
            error: function (data) {
                alert(data);
            }
        });

    }


</script>
