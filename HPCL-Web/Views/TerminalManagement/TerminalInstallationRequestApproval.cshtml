@model HPCL.Common.Models.ViewModel.Terminal.TerminalApprovalReq

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Approvals")" class="text_primary">Approvals</a> </li>
            <li class="breadcrumb-item font-weight-light">Terminal Installation Request Approval</li>
        </ul>
        <div id="reason" class="mb-3 text-center" style="background-color: #a0f1d6;"></div>
        <form id="formVal" class="toBeHiddenOnSuccess">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mb-3">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Terminal Installation Request Approval</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Zonal Office <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.ZonalOfficeId, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "form-control zonalFetchId" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Regional Office <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.RegionalOfficeId, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "form-control regionalFetchId" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">From Date <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control fromDate",@placeholder="dd-mm-yyyy", @autocomplete = "off", @onchange = "checkDates('fromDate_error');" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.FromDate, "", new { @class = "text-danger", @id = "fromDate_error" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">To Date <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control toDate",@placeholder="dd-mm-yyyy", @autocomplete = "off", @onchange = "checkDates('fromDate_error');" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.ToDate, "", new { @class = "text-danger", @id = "toDate_error" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Select Category <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                <select name="Category" id="" class="form-control">
                                                    <option value="New Terminals">New Terminals</option>
                                                    <option value="Updated Terminals">Updated Terminals</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="searchClick()">Search</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="resetClick()">Reset</button>
                                </div>
                            </div>
                            <div style="display:none;" id="noRecord" class="mt-3">
                                <div id="message" class="mb-3 text-center" style="background-color: #f9c9c9; color: #8d0d0d; border-color: #f3abab;">
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>

                        <div id="approvalRejectSection" style="display:none;" class="ml-3 mr-3">
                            <div class="table-responsive">
                                <table id="approvalTerminalList" class="datatable table table-striped d-block table-bordered table-responsive nowrap mt-3" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th>S No.</th>
                                            <th><input type="checkbox" name="allCheck" class="checkAll" /></th>
                                            <th>Terminal ID</th>
                                            <th>Merchant ID</th>
                                            <th>Terminal Type Requested</th>
                                            <th>Merchant Status</th>
                                            <th>Last Month's Spends</th>
                                            <th>No. Of Transactions Of Last Month</th>
                                            <th>Request Type</th>
                                            <th>Requested By</th>
                                            <th>Requested Date</th>
                                            <th>Justification</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>

                            <div class="col-md-6 col-12">
                                <div class="form-group d-flex align-items-center flex-wrap">
                                    <label class="font-weight-normal col-md-5 col-12">Remark: <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <textarea rows="4" cols="50" id="remarkVal" name="remarkVal" class="form-control"></textarea>
                                        <span class="text-danger field-validation-error" data-valmsg-for="remarkVal"
                                              data-valmsg-replace="true"><span id="remarkErr"></span></span>
                                    </div>
                                </div>
                            </div>

                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="approveClick()">APPROVE</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="rejectClick()">REJECT</button>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </form>
        <div class="clearfix"></div>
    </div>
</div>


<script type="text/javascript">

    function resetClick() {
        location.reload();
    }

  

    $(document).ready(function () {
        
        $('select').SumoSelect({
            placeholder: '-Select-',
            search: true,
            searchText: 'Enter Text here.'
        });

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetzonalOfficeList", "Common")',
            dataType: "json",
            success: function (data, status, xhr) {

                console.log(data);

                $.each(data.zonalOfficeLst, function (i, option) {
                    $("<option/>").val(option.zonalOfficeID).text(option.zonalOfficeName).appendTo(".zonalFetchId");
                });
                $(".zonalFetchId")[0].sumo.reload();
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating Zonal Office");
            }
        });
    });



$(".zonalFetchId").change(function () {
    var id = this.value;

     if(id == ""){
        $(".regionalFetchId").html("");
        $(".regionalFetchId")[0].sumo.reload();
        return false;
     }

    if (id != 0) {
        $("#state_error").html("");
    }

    $.ajax({
        type: 'POST',  // http method
        url: '@Url.Action("GetRegionalOfcDetails", "Common")',
        data: { zonalOfcId: id },  // data to submit
        dataType: "json",
        success: function (data, status, xhr) {
            var v = data;
            if (status == 'success') {
                $(".regionalFetchId").html("");
                $('<option>',{value: 0,text: "--Select Regional Office--"}).html("--Select Regional Office--").appendTo(".regionalFetchId");
                //$('<option>--Select Regional Office--</option>').appendTo(".regionalFetchId");
                $.each(data, function (i, data) { // bind the dropdown list using json result
                    $('<option>',
                        {
                            value: data.regionalOfficeID,
                            text: data.regionalOfficeName
                        }).html(data.districtName).appendTo(".regionalFetchId");
                });
                $(".regionalFetchId")[0].sumo.reload();
            }
            else {
                console.log(v);
            }
        },
        error: function (jqXhr, textStatus, errorMessage) {
            alert("Error Populating Regional Office");
        }
    });
});

    function searchClick() {
        var fromdate = $("#FromDate").val();
        var todate = $("#ToDate").val();

        var flag = "Y";
        if (fromdate == "") {
            $("#fromDate_error").attr("style", "display:block");
            $("#fromDate_error").html("Select From Date");
            flag = "N";
        }
        if (todate == "") {
            $("#toDate_error").attr("style", "display:block");
            $("#toDate_error").html("Select To Date");
            flag = "N";
        }
        if (fromdate != "" && todate != "") {
            flag = checkDates(fromdate, todate);
        }

        if (flag == "N")
            e.preventDefault();

        if (flag == "Y") {
            if ($("#formVal").valid()) {

                $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("TerminalInstallationRequestApproval", "TerminalManagement")',
                    data: $('#formVal').serialize(),  // data to submit
                    success: function (data, status, xhr) {


                        if (data.approvalList.terminalApprovalReqDetails.length > 0) {

                            $("#approvalTerminalList td").parent().remove();

                            $('#approvalTerminalList').DataTable().clear().destroy();

                            var tbl = $('#approvalTerminalList').DataTable({
                                paging: true,
                                searching: false,
                                stateSave: true,
                                "bDestroy": true,
                                "lengthMenu": [5, 10, 20, 50, 100, 200, 500, 1000, 2000],
                                "autoWidth": false,
                                "oLanguage": {
                                    "sLengthMenu": "Display _MENU_ Records",
                                    "info": "Showing _START_ to _END_ of _TOTAL_ Records",
                                }
                            });

                            for (var i = 0; i < data.approvalList.terminalApprovalReqDetails.length; i++) {

                                var srNumber = (i + 1);
                                var checkBx = "<td><input type='checkbox' class='terminalRow' name='terminalCheck'></td>";
                                var terminalId = "<span class='terminalVal'>" + (data.approvalList.terminalApprovalReqDetails[i].terminalId || '') + "</span>";
                                var merchantId = "<a href='#a' class='merchantVal'>" + (data.approvalList.terminalApprovalReqDetails[i].merchantId || '') + "</a>";
                                var terminalType = (data.approvalList.terminalApprovalReqDetails[i].terminalType || '');
                                var merchantStatus =  (data.approvalList.terminalApprovalReqDetails[i].merchantStatus || '');
                                var lastMonthSpend = (data.approvalList.terminalApprovalReqDetails[i].lastMonthSpend);
                                var noOfTransactionsOfLastMonth = (data.approvalList.terminalApprovalReqDetails[i].noOfTransactionsOfLastMonth);
                                var requestType = (data.approvalList.terminalApprovalReqDetails[i].requestType);
                                var requestedBy = (data.approvalList.terminalApprovalReqDetails[i].requestedBy);
                                var requestedDate = (data.approvalList.terminalApprovalReqDetails[i].requestedDate);
                                var justification = (data.approvalList.terminalApprovalReqDetails[i].justification);

                                tbl.row.add([
                                    srNumber,
                                    checkBx,
                                    terminalId,
                                    merchantId,
                                    terminalType,
                                    merchantStatus,
                                    lastMonthSpend,
                                    noOfTransactionsOfLastMonth,
                                    requestType,
                                    requestedBy,
                                    requestedDate,
                                    justification
                                ]).order( [ 1, 'asc' ] ).draw();
                            }
                        }
                        if (data.approvalList.terminalApprovalReqDetails.length == 0) {
                            document.getElementById("approvalRejectSection").style.display = "none";
                            document.getElementById("noRecord").style.display = "block";
                            $("#message").html(data.approvalList.message);
                        }
                        if (data.approvalList.terminalApprovalReqDetails.length > 0) {
                            document.getElementById("noRecord").style.display = "none";
                            document.getElementById("approvalRejectSection").style.display = "block";
                            $("#message").html("");
                        }

                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        console.log("Error");
                    }
                });
            } else {
                return false;
            }
        }
    }

    //function OnSuccess(data) {

    //    console.log(data);

    //    $("#approvalTerminalList td").parent().remove();
    //    if (data.approvalList.terminalApprovalReqDetails.length > 0) {
    //        for (var i = 0; i < data.approvalList.terminalApprovalReqDetails.length; i++) {

    //            var rows = "<tbody><tr>"
    //                + "<td><input type='checkbox' class='terminalRow' name='terminalCheck'></td>"
    //                + "<td><span class='terminalVal'>" + (data.approvalList.terminalApprovalReqDetails[i].terminalId || '') + "</span></td>"
    //                + "<td><a href='#a' class='merchantVal'>" + (data.approvalList.terminalApprovalReqDetails[i].merchantId || '') + "</a></td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].terminalType || '') + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].merchantStatus || '') + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].lastMonthSpend) + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].noOfTransactionsOfLastMonth) + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].requestType || '') + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].requestedBy || '') + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].requestedDate || '') + "</td>"
    //                + "<td>" + (data.approvalList.terminalApprovalReqDetails[i].justification || '') + "</td>"
    //                + "</tr ></tbody>";

    //            $('#approvalTerminalList').append(rows);
    //        }
    //    }
    //    if (data.approvalList.terminalApprovalReqDetails.length == 0) {
    //        document.getElementById("approvalRejectSection").style.display = "none";
    //        document.getElementById("noRecord").style.display = "block";
    //        $("#message").html(data.approvalList.message);
    //    }
    //    if (data.approvalList.terminalApprovalReqDetails.length > 0) {
    //        document.getElementById("noRecord").style.display = "none";
    //        document.getElementById("approvalRejectSection").style.display = "block";
    //        $("#message").html("");
    //    }
    //};

    $(".checkAll").click(function () {
        if (this.checked) {
            $(".terminalRow").prop("checked", true);
        } else {
            $(".terminalRow").prop("checked", false);
        }
    });


    function approveClick() {

        var remark = $("#remarkVal").val();

        if ($('#remarkVal').val() == "") {
            $('#remarkErr').text("Remark should not be empty");
            return false;
        }
        $('#remarkErr').text("");


        var ObjMerchantTerminalInsertInput = [];
        var TerminalID;

        $("#approvalTerminalList tbody tr").each(function () {
            var row = $(this);
            if (row.find('input[type="checkbox"]').is(":checked")) {
                TerminalID = row.find('.terminalVal').text();
                var MerchantId = row.find('.merchantVal').text();

                ObjMerchantTerminalInsertInput.push({
                    TerminalID: TerminalID,
                    MerchantId: MerchantId
                });
            }
        });


        if (TerminalID == undefined) {
            alert("Please select at least one row");
            return false;
        }


        if (confirm('Are you sure you want to Approve the selected Terminal Installation request(s)?')) {

        $.ajax({
            url: "@Url.Action("TerminalInstallationRequestApprovalClick", "TerminalManagement")",
            type: "POST",
            dataType: "JSON",
            data: { ObjMerchantTerminalInsertInput: JSON.stringify(ObjMerchantTerminalInsertInput), remark: remark },
            success: function (res) {

                $("#reason").html(res);
                $(".toBeHiddenOnSuccess").hide();
            },
            error: function (ex) {
                alert('Failed' + ex);
            }
        });
        } else {
            console.log('cancel')
        }

    };


    function rejectClick() {

        var remark = $("#remarkVal").val();

        if ($('#remarkVal').val() == "") {
            $('#remarkErr').text("Remark should not be empty");
            return false;
        }
        $('#remarkErr').text("");


        var ObjMerchantTerminalInsertInput = [];
        var TerminalID;

        $("#approvalTerminalList tbody tr").each(function () {
            var row = $(this);
            if (row.find('input[type="checkbox"]').is(":checked")) {
                TerminalID = row.find('.terminalVal').text();
                var MerchantId = row.find('.merchantVal').text();

                ObjMerchantTerminalInsertInput.push({
                    TerminalID: TerminalID,
                    MerchantId: MerchantId
                });
            }
        });

        if (TerminalID == undefined) {
            alert("Please select at least one row");
            return false;
        }

        if (confirm('Are you sure you want to Reject the selected Terminal Installation request(s)?')) {

            $.ajax({
                url: "@Url.Action("TerminalInstallationRequestRejectClick", "TerminalManagement")",
                type: "POST",
                dataType: "JSON",
                data: { ObjMerchantTerminalInsertInput: JSON.stringify(ObjMerchantTerminalInsertInput), remark: remark },
                success: function (res) {
                    $("#reason").html(res);
                    $(".toBeHiddenOnSuccess").hide();
                },
                error: function (ex) {
                    alert('Failed' + ex);
                }
            });
        } else {
            console.log('cancel')
        }

    };

</script>