@model HPCL.Common.Models.ViewModel.TerminalManagementRequestViewModel

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "TerminalManagement")" class="text_primary">Terminal Management</a> </li>
            <li class="breadcrumb-item font-weight-light">Terminal Installation Request Close</li>
        </ul>
        <div id="reason" class="mb-3 text-center" style="background-color: #a0f1d6;"></div>
        @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "form1", @class = "toBeHiddenOnSuccess" }))
        {
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mb-3">
                    <div class="border-1 rounded border-grey">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Terminal Installation Request Close</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Zonal Office <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">

                                                @Html.DropDownListFor(m => m.ZonalOfficeId, new SelectList(Model.ZonalOffices, "ZonalOfficeID", "ZonalOfficeName"), new { @class = "form-control", onchange = "getMerchantRegionalOfc()" })
                                                <span class="error" id="zonal_office_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Regional Office <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                <select name="RegionalOfficeId" id="RegionalOfficeId" class="form-control"></select>
                                                <span class="error" id="regionalOfc_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">From Date <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control date", @type = "date" })
                                            </div>
                                            <span class="error" id="fromDate_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">To Date <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control date", @type = "date" })
                                            </div>
                                            <span class="error" id="toDate_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Merchant ID</label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span style="display:none" class="error" id="merchantId_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Terminal ID</label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.TerminalId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span style="display:none" class="error" id="terminalId_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" id="btnSearch" type="submit">SEARCH</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" id="btnReset" type="button">RESET</button>
                                </div>
                            </div>
                            <div style="display:none;">@Html.TextBoxFor(m => m.RegionalOfcIdVal)</div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
        }
        <div id="show_Table" class="toBeHiddenOnSuccess">
            @if (Model.TerminalManagementRequestDetails.Count() > 0)
            {
                <div class="table-responsive">
                    <table class="datatable table table-striped table-bordered d-md-table d-block text-nowrap display table-responsive" style="width:100%;" id="TerminalRequestDetails">
                        <thead style="background-color:lightgray;">
                            <tr>
                                <th style="width:5%;"><input type="checkbox" id="checkAll" /></th>
                                <th style="width:5%;">Merchant ID</th>
                                <th style="width:10%;">Terminal ID</th>
                                <th style="width:10%;">Zonal Office</th>
                                <th style="width:10%;">Regional Office</th>

                                <th style="width:20%;">Status</th>
                                <th style="width:10%;">Terminal Type Requested</th>
                                <th style="width:10%;">Created By</th>
                                <th style="width:10%;">Created Date</th>
                            </tr>
                        </thead>
                        <tbody id="searchTableBody">
                            @{
                                int i = 0;
                            }
                            @foreach (var item in Model.TerminalManagementRequestDetails)
                            {
                                i = i + 1;

                                <tr>
                                    <td><input type="checkbox" id="check_@i" /></td>
                                    <td>@item.MerchantID</td>
                                    <td>@item.TerminalID</td>
                                    <td>@item.ZonalOfficeName</td>
                                    <td>@item.RegionalOfficeName</td>
                                    <td>@item.Status</td>
                                    <td>@item.TerminalTypeRequested</td>
                                    <td>@item.CreatedBy</td>
                                    <td>@item.CreatedDate</td>


                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="clearfix"></div>
                <div class="border-1 rounded border-grey mt-3">
                    <div class="d-flex align-items-center flex-wrap">
                        <div class="col-lg-6 col-12">
                            <div class="d-flex align-items-center flex-wrap mb-3 mt-3">
                                <label class="font-weight-normal col-md-4 col-12 px-0">Status <sup class="text-danger">*</sup></label>
                                <div class="col-md-7 col-12">
                                    <div class="custom_select">
                                        <input class="mr-2 form-check-input" type="radio" name="Status" style="margin-top: 0.1rem;" value="Problematic-Installation" disabled checked>
                                        <span>Problematic-Installation</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="d-flex align-items-center flex-wrap">
                        <div class="col-lg-6 col-12">
                            <div class="d-flex align-items-center flex-wrap mb-3">
                                <label class="font-weight-normal col-md-4 col-12">Reason<sup class="text-danger">*</sup></label>
                                <div class="col-md-7 col-12">
                                    <div class="custom_select">
                                        @Html.DropDownListFor(m => m.Reason, new SelectList(Model.Reasons, "ReasonId", "ReasonName"), new { @class = "form-control" })
                                        <span class="error" id="reason_error"></span>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="clearfix"></div>
                    <div class="d-flex align-items-center justify-content-center mb-3">
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" onclick="submitTerminalrequestClose();">Submit</button>
                        </div>

                    </div>
                </div>
            }
            else
            {
                <div class="mb-3 text-center" style="background-color: #f9c9c9; color: #8d0d0d; border-color: #f3abab;">
                    @Model.Message
                </div>
            }
        </div>
        <div style="display:none;">@Html.TextBoxFor(m => m.RegionalOfcIdVal)</div>
    </div>
</div>

<script type="text/javascript">
    //debugger;
    $("#checkAll").click(function () {
        $('input:checkbox').not(this).prop('checked', this.checked);
    });
    var zonalID = $("#ZonalOfficeId").val();
    var regionalID = $("#RegionalOfcIdVal").val();

      var fromdate = $("#FromDate").val();
    var todate = $("#ToDate").val();
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
    var yyyy = today.getFullYear();
    today = yyyy + '-' + mm + '-' + dd;

    $(document).ready(function () {

        setDates();
        getMerchantRegionalOfc();
    });
    $("#btnSearch").on("click", (function (e) {
        var fromdate = $("#FromDate").val();
        var todate = $("#ToDate").val();
        var merchantId = $("#MerchantId").val();
        var terminalId = $("#TerminalId").val();
        var flag = "Y";
        if (fromdate == "") {
            $("#fromDate_error").attr("style", "display:block");
            $("#fromDate_error").html("Select From Date");
            flag = "N";
        }

        if (todate == "") {
            $("#toDate_error").attr("style", "display:block");
            $("#toDate_error").html("Select To Date");
            flag = "N";
        }
        if (fromdate != "" && todate != "") {
            flag = checkDates();
        }
        if (merchantId != "") {
            if (!merchantId.match(mappedMerchantID)) {
                $("#merchantId_error").attr("style", "display:block");
                $("#merchantId_error").html("Please enter valid Merchant ID");
                flag = "N";
            }
        }
        if (terminalId != "") {
            if (!terminalId.match(mappedterminalID)) {
                $("#terminalId_error").attr("style", "display:block");
                $("#terminalId_error").html("Please enter valid Terminal ID");
                flag = "N";
            }
        }
        if (flag == "Y") {
            $("#toDate_error").attr("style", "display:none");
            $("#toDate_error").html("");
            $("#fromDate_error").attr("style", "display:none");
            $("#fromDate_error").html("");
            $("#merchantId_error").attr("style", "display:none");
            $("#merchantId_error").html("");
        }
        if (flag == "N")
            e.preventDefault();

    })
    );
    $("#btnReset").click(function () {
        setDates();
        $("#show_Table").html("");
        $("#ZonalOfficeId").val(0);
        $("#RegionalOfcIdVal").val("");
        getMerchantRegionalOfc();
        $("#MerchantId").val("");
        $("#TerminalId").val("");
        $("#fromDate_error").html("");
        $("#toDate_error").html("");
        $("#merchantId_error").html("");
        $("#terminalId_error").html("");
    });
    function setDates() {
        var fromd = new Date();
        fromd.setMonth(fromd.getMonth() - 1);
        var dd = String(fromd.getDate()).padStart(2, '0');
        var mm = String(fromd.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = fromd.getFullYear();

        fromd = yyyy + '-' + mm + '-' + dd;
        $("#FromDate").val(fromd);
        $("#ToDate").val(today);
    };
    $("#RegionalOfficeId").change(function () {
        var id = this.value;
        $("#RegionalOfcIdVal").val(id);
    });
   function getMerchantRegionalOfc() {
       var id = $('#ZonalOfficeId :selected').val();
       var regionalID = $("#RegionalOfcIdVal").val();
        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetRegionalOfcDetails", "Common")',
            data: { ZonalOfcID: id },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') {
                    $("#RegionalOfficeId").html("");
                    $.each(data, function (i, data) { // bind the dropdown list using json result
                        if (i == 0) {
                            $('<option>',
                                {
                                    value: 0,
                                    text: "--All--"
                                }).html("--All--").appendTo("#RegionalOfficeId");
                            if (data.regionalOfficeID == regionalID) {
                                $('<option selected = "selected">',
                                    {
                                        value: data.regionalOfficeID,
                                        text: data.regionalOfficeName
                                    }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                            }
                            else {
                                $('<option>',
                                    {
                                        value: data.regionalOfficeID,
                                        text: data.regionalOfficeName
                                    }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                            }
                        }
                        else if (data.regionalOfficeID == regionalID) {
                            $('<option selected = "selected">',
                                {
                                    value: data.regionalOfficeID,
                                    text: data.regionalOfficeName
                                }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                        }
                        else {
                            $('<option>',
                                {
                                    value: data.regionalOfficeID,
                                    text: data.regionalOfficeName
                                }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                        }
                    });
                }
                else {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating Regional Office Data");
            }
        });
    };


    function submitTerminalrequestClose() {
        //alert("inside submit");
        merchantDetail = [];
         $("#TerminalRequestDetails tbody tr").each(function () {
             //debugger;

             var row = $(this);
             if (row.find('input[type="checkbox"]').is(":checked")) {

                 var merchantId = row[0].cells[1].textContent;
                 var terminalId = row[0].cells[2].textContent;
                 merchantDetail.push({ MerchantId: merchantId, TerminalId: terminalId });

            }
         });
        var flag = "Y";
        //debugger;
        var reason = $('#Reason :selected').text();
        var reasonId = $('#Reason :selected').val();
        if (merchantDetail.length == 0) {
            alert("Please select at least one request to process.");
            return;
        }
        if (reasonId == "0") {
             flag = "N";
             $("#reason_error").html("Please select reason");
        }
        if (merchantDetail.length > 0 && flag == "Y") {
            if (confirm("Are you sure, you want to close these installation requests as Problematic installations ?")) {
                $("#reason_error").html("");
                var terminationReqmodel = { ReasonId: reasonId, ReasonName: reason, ObjMerchantTerminalInstallationRequestCloseDetail: merchantDetail };
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SubmitTerminalRequestClose", "TerminalManagement")',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(terminationReqmodel),
                    success: function (data) {
                        setDates();
                        $("#reason").html(data);
                        $(".toBeHiddenOnSuccess").hide();

                    },
                    error: function (ex) {
                        alert('Error.' + ex);
                    }
                });
            }
        }


    };
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $(".date").on('change', function (e) {
    
        checkDates();
        $("#show_Table").html("");
    });

    function checkDates() {
        var fromD = $("#FromDate").val();
        var toD = $("#ToDate").val();
        var dateflag = "Y";
        if (fromD != "" && toD != "") {
            if (fromD > toD) {

                $("#fromDate_error").attr("style", "display:block");
                $("#fromDate_error").html("'From Date' should be less or equal to 'To date'");
                dateflag = "N";
            }
            else {
                $("#fromDate_error").html("");
                $("#fromDate_error").attr("style", "display:none");
            }
        }

        if (toD != "") {
            if (toD > today) {
                $("#toDate_error").attr("style", "display:block");
                $("#toDate_error").html("To Date should be less or equal to Today's date");
                dateflag = "N";
            }
            else {
                $("#toDate_error").html("");
                $("#toDate_error").attr("style", "display:none");
            }
        }

        return dateflag;
    }

</script>