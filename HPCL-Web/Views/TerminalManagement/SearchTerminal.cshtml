@model HPCL.Common.Models.ViewModel.Terminal.SearchTerminalModel
@using HPCL.Common.Resources


<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "TerminalManagement")" class="text_primary">Terminal Management</a> </li>
            <li class="breadcrumb-item font-weight-light">Search</li>
        </ul>
        <form class="toBeHiddenOnSuccess">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Search</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-12 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-2 col-12"></label>
                                        <div class="col-md-10 col-12">
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
                                                <label class="form-check-label" for="inlineRadio1">Merchant</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2" checked="checked">
                                                <label class="form-check-label" for="inlineRadio2">Terminal</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Terminal ID</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.TerminalId, new { @class = "form-control" ,onkeypress = "return isNumberKey(event)",maxlength = "10"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Merchant ID</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control",onkeypress = "return isNumberKey(event)",maxlength = "10"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Terminal Type</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                             @Html.DropDownListFor(m => m.TerminalType, new SelectList(Model.TerminalTypeResponseModals, "id", "TerminalIssuanceType"), new { @class = "form-control" })
@*@Html.DropDownListFor(m => m.MerchantTypes, new SelectList(Model.MerchantTypes, "MerchantTypeCode", "MerchantTypeName"), new { @class = "form-control" })*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Issue Date</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.IssueDate, new { @class = "form-control", @type = "date", @placeholder = "" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="searchTerminal()">Search</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="resetTerminalSearch()">Reset</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
              </div>
              <div> <span class="error" id="TerminalId_error"></span></div>
            </div>
        </form>
        <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3 toBeHiddenOnReset" id="searchTerminalTbl">

        </div>
        <div class="clearfix"></div>
    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {

        
             document.getElementById("TerminalId").value=  sessionStorage.getItem("textvalue");

        if (document.getElementById("TerminalId").value.length > 10) {
            document.getElementById("TerminalId_error").innerHTML = "Only 10 Digits are allowed ";
            return (false);



        } else {
             searchTerminal();

        }

        $('input[type=radio]').change(function() {
            window.location = '@Url.Action("SearchMerchant", "Merchant")';
        });
        $("#IssueDate").val(" ");
    });

    function searchTerminal() {

        var terminalId = $("#TerminalId").val();
        var merchantId = $("#MerchantId").val();
        var terminalType = $("#TerminalType").val();
        var issueDate = $("#IssueDate").val();

          if (document.getElementById("TerminalId").value.length < 10) {
            document.getElementById("TerminalId_error").innerHTML = "invalid Terminal Id ";
            return (false);
        }

        

        $.ajax({
            type: 'GET',  // http method
            url: '@Url.Action("SearchTerminalDetails", "TerminalManagement")',
            contentType: "application/json; charset=utf-8",
            data: { terminalId: terminalId, merchantId: merchantId, terminalType: terminalType, issueDate: issueDate},
            dataType: "text",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') {
                    $("#searchTerminalTbl").html(data);
                    $('html, body').animate({
                        scrollTop: $("#searchTerminalTbl").offset().top
                    }, 2000);
                }
                else {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error");
            }
        });
    }

//document.getElementById("result").innerHTML = localStorage.setItem("textvalue");

    function resetTerminalSearch() {
        $(".toBeHiddenOnReset").html("");
    }

</script>