@model HPCL.Common.Models.ViewModel.Terminal.TerminalDeinstallationRequestViewModel

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "TerminalManagement")" class="text_primary">Terminal Management</a> </li>
            <li class="breadcrumb-item font-weight-light">Terminal Deinstallation Request</li>
        </ul>
        <div id="reason" class="mb-3 text-center alert" style="display:none"></div>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form1", @class = "toBeHiddenOnSuccess" }))
        {
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mb-3">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Terminal Deinstallation Request</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Zonal Office <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.ZonalOfficeId, new SelectList(Model.ZonalOffices, "ZonalOfficeID", "ZonalOfficeName"), new { @class = "form-control", onchange = "getMerchantRegionalOfc()" })
                                                <span class="error" id="zonal_office_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Regional Office <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                <select name="RegionalOfficeId" id="RegionalOfficeId" class="form-control"></select>
                                                <span class="error" id="regionalOfc_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Merchant ID<sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" style="display:none" id="Merchant_error"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Terminal ID</label>
                                        <div class="col-md-7 col-12">
                                            @{
                                                string DeinstallationTypeID = Model.DeinstallationTypeID;


                                                if (DeinstallationTypeID == "1")
                                                    @Html.TextBoxFor(m => m.TerminalId, new { @class = "form-control", @readonly = "readonly", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                else
                                                    @Html.TextBoxFor(m => m.TerminalId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            }
                                            <span style="display:none" class="error" id="terminalId_error"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Deinstallation Type <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.DeinstallationTypeID, new SelectList(Model.DeinstallationTypes, "DeinstallationTypeID", "DeinstallationType"), new { @class = "form-control", onchange = "changeterminalId()" })
                                                <span class="error" id="type_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" id="btnSearch" type="button">SEARCH</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" id="btnReset" type="button">RESET</button>
                                </div>
                            </div>
                            <div style="display:none;">@Html.TextBoxFor(m => m.RegionalOfcIdVal)</div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        }
        <div class="clearfix"></div>

        <div id="show_Table" class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3 toBeHiddenOnSuccess">
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<script type="text/javascript">
     //debugger;

     var zonalID = $("#ZonalOfficeId").val();
     var regionalID = $("#RegionalOfcIdVal").val();


     $(document).ready(function () {

     });

     $("#btnSearch").on("click", (function (e) {
         //debugger;
         var deInstallationType = $("#DeinstallationTypeID :selected").val();
         var merchantID = $("#MerchantId").val();
         var terminalId = $("#TerminalId").val();
         var flag = "Y";
         if (merchantID == "") {
             $("#Merchant_error").attr("style", "display:block");
             $("#Merchant_error").html("Merchant ID required");
             flag = "N";
         }
         else {
             if (!merchantID.match(mappedMerchantID)) {
                 $("#Merchant_error").attr("style", "display:block");
                 $("#Merchant_error").html("Please enter valid Merchant ID");
                 flag = "N";
             }
             else {
                 $("#Merchant_error").attr("style", "display:none");
                 $("#Merchant_error").html("");
             }
         }
         if (terminalId != "") {
             if (!terminalId.match(mappedterminalID)) {
                 $("#terminalId_error").attr("style", "display:block");
                 $("#terminalId_error").html("Please enter valid Terminal ID");
                 flag = "N";
             }
         }
         if (deInstallationType == "0") {
             $("#type_error").html("Select Deinstallation Type");
             flag = "N";
         }
         else {
             $("#type_error").html("");
             if (deInstallationType == "1") {
                 $("#TerminalId").val("");
                 $("#TerminalId").prop("readonly", true);
             }
             else
                 $("#TerminalId").prop("readonly", false);
         }
         if (flag == "N")
             e.preventDefault();
             else{

                  var zoID = $("#ZonalOfficeId").val();
                  var roID = $("#RegionalOfficeId").val();
                 var terminationReqmodel = { MerchantId: merchantID, TerminalId: terminalId, ZonalOfficeId: zoID, RegionalOfficeId: roID,DeinstallationTypeID:deInstallationType };
                  $.ajax({
                      type: 'GET',
                      url: '@Url.Action("SearchTerminalDeInstallationRequest", "TerminalManagement")',
                      contentType: "application/json; charset=utf-8",
                      data: terminationReqmodel,
                      success: function (data) {
                            $("#show_Table").html(data);
                            $('html, body').animate({
                                scrollTop: $("#show_Table").offset().top
                            }, 2000);
                      },
                      error: function (ex) {
                          alert('Error.' + ex);
                      }
                  });
             }

     })
     );
     $("#btnReset").click(function () {
         window.location.reload(true);

     });

     $("#RegionalOfficeId").change(function () {
         var id = this.value;
         $("#RegionalOfcIdVal").val(id);
     });
     function changeterminalId() {
         var deInstallationTypeID = $("#DeinstallationTypeID :selected").val();
         if (deInstallationTypeID == "1") {
             $("#TerminalId").val("");
             $("#TerminalId").prop("readonly", true);
         }
         else
             $("#TerminalId").prop("readonly", false);
         $("#show_Table").html("");
     }


    function getMerchantRegionalOfc() {
         var id = $('#ZonalOfficeId :selected').val();
         var regionalID = $("#RegionalOfcIdVal").val();
         if(id>0){
              $.ajax({
                  type: 'POST',  // http method
                  url: '@Url.Action("GetRegionalOfcDetails", "Common")',
                  data: { ZonalOfcID: id },  // data to submit
                  dataType: "json",
                  success: function (data, status, xhr) {
                      var v = data;
                      if (status == 'success') {
                          $("#RegionalOfficeId").html("");
                          $.each(data, function (i, data) { // bind the dropdown list using json result
                              if (i == 0) {
                                  $('<option>',
                                      {
                                          value: 0,
                                          text: "--All--"
                                      }).html("--All--").appendTo("#RegionalOfficeId");
                                  if (data.regionalOfficeID == regionalID) {
                                      $('<option selected = "selected">',
                                          {
                                              value: data.regionalOfficeID,
                                              text: data.regionalOfficeName
                                          }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                                  }
                                  else {
                                      $('<option>',
                                          {
                                              value: data.regionalOfficeID,
                                              text: data.regionalOfficeName
                                          }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                                  }
                              }
                              else if (data.regionalOfficeID == regionalID) {
                                  $('<option selected = "selected">',
                                      {
                                          value: data.regionalOfficeID,
                                          text: data.regionalOfficeName
                                      }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                              }
                              else {
                                  $('<option>',
                                      {
                                          value: data.regionalOfficeID,
                                          text: data.regionalOfficeName
                                      }).html(data.regionalOfficeName).appendTo("#RegionalOfficeId");
                              }
                          });
                          $("#RegionalOfficeId")[0].sumo.reload();
                      }
                      else {
                          console.log(v);
                      }
                  },
                  error: function (jqXhr, textStatus, errorMessage) {
                      alert("Error Populating Regional Office Data");
                  }
              });
          }
          else{
             $("#RegionalOfficeId").html('');
             $("#RegionalOfficeId")[0].sumo.reload();
          }
      };
        $('select').SumoSelect({
             placeholder: '-All-',
             search: true,
             searchText: 'Enter Text here.'
         });



      $("#MerchantId").on("blur", function () {
          var merchantId = $("#MerchantId").val();
          if (merchantId != "") {
             if (!merchantId.match(mappedMerchantID)) {
                 $("#Merchant_error").attr("style", "display:block");
                 $("#Merchant_error").html("Please enter valid Merchant ID");

             }
             else{
                 $("#Merchant_error").attr("style", "display:none");
                 $("#Merchant_error").html("");
             }
          }
          else{
             $("#Merchant_error").attr("style", "display:block");
             $("#Merchant_error").html("Merchant ID required");
          }
      });
      $("#TerminalId").on("blur", function () {
          var terminalId = $("#TerminalId").val();
          if (terminalId != "") {
              if (!terminalId.match(mappedterminalID)) {
                  $("#terminalId_error").attr("style", "display:block");
                  $("#terminalId_error").html("Please enter valid Terminal ID");
              }
              else{
                  $("#terminalId_error").attr("style", "display:none");
                  $("#terminalId_error").html("");
              }
          }
          else{
              $("#terminalId_error").attr("style", "display:none");
              $("#terminalId_error").html("");
          }
      });
      $("#DeinstallationTypeID").on("change", function () {
          var deInstallationType = $("#DeinstallationTypeID :selected").val();
          if (deInstallationType == "0") {
             $("#type_error").html("Select Deinstallation Type");
         }
         else {
             $("#type_error").html("");
         }
      });


</script>
