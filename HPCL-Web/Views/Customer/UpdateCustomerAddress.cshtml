@model HPCL.Common.Models.ViewModel.Customer.UpdateCustomerAddress
@using HPCL.Common.Resources;
@{
    ViewData["Title"] = "Update Customer Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Request","Customer")" class="text_primary">Requests</a> </li>
            <li class="breadcrumb-item font-weight-light">Update Customer Details</li>
        </ul>
        @using (Html.BeginForm("UpdateCustomerAddress", "Customer", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            <div class="w-100">
                <div class="alert alert-danger mt-3 text-center" id="dvRemarks" style="@(Model.Remarks=="" ? "display:none":"display:block")">
                    @Html.DisplayFor(m => m.Remarks)
                </div>
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Update Customer Details</p>
                        <div class="col-lg-12 col-md-12 col-12 pt-3">
                            <p class="text-dark font-weight-bold">Search Profile</p>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-12 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-0">
                                        <label class="font-weight-normal col-md-2 col-12">Customer ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-3 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", @id = "CustomerId", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger", @id = "CustomerIdValErrMsg" })
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-12">
                                            <div class="d-flex align-items-center flex-wrap">
                                                <div class="px-2">
                                                    <button class="btn btn_primary" type="button" onclick="ViewCustomerDetails()" id="btnSearch">@Label.Search</button>
                                                </div>
                                                <div class="px-2">
                                                    <button class="btn btn_primary px-4 py-2" type="button" id="btnReset">@Label.Reset</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div id="dvNoData" style="display:none;" class="alert alert-danger mt-3 text-center">
                </div>
                <div class="clearfix"></div>
                <div id="dvAddress" style="display:none">
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Communication Address</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-3">
                                <div style="display:none">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Individual/Org. Name <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.IndividualOrgName, new { @class = "form-control", autocomplete = "off", maxlength = "80",@readonly = "readonly" })
                                                    <span class="error" id="individualName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Type of Business Entity <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.TBEntityName, new { @class = "form-control", autocomplete = "off", @readonly="readonly" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="comm_address1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="comm_address2_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 3 </label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationAddress3, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="comm_address3_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Location</label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationLocation, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="comm_location_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="comm_city_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">PIN Code <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationPinCode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="comm_pincode_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationStateId, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control stateType" })
                                                </div>
                                                <span class="error" id="comm_states_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationDistrictId, new SelectList(Model.CommunicationDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
                                                </div>
                                                <span class="error" id="comm_district_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    @*<div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
                                            <div class="col-md-7 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationDialCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationPhonePart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationPhonePart2_error"></span>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>*@
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Mobile <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationMobileNo, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <div class="error" id="comm_mobileNumber_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*<div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Fax </label>
                                            <div class="col-md-7 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationFaxCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationFaxPart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="CommunicationFaxPart2_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12" id="lblPanText">Income Tax PAN <sup class="text-danger">*</sup></label>
                                        <div class="col-md-5 col-12" id="dvPan">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.IncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off", maxlength = "10" })
                                                <span class="error" id="incomeTaxPan_error"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-2 col-12 pl-0">
                                            <div class="custom_select">
                                               <button class="btn btn_primary" type="button" id="btnVerify" onclick="ValidatePAN()">Verify</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                     <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12" id="lblPanCardRemarks">PAN Card Remarks <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PanCardRemarks, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="PanCardRemarks_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group align-items-center flex-wrap" id="lblCustPOI">
                                    <p class="alert alert-info" style="padding: 5px 10px;">** Please provide the document details that you are going to upload as POI.</p>
                                </div>

                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Permanent/Registered Office Address</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-3">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PermanentAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="perma_address1_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PermanentAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="perma_address2_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address 3 </label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PermanentAddress3, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="perma_address3_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Location</label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PermanentLocation, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="perma_location_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PermanentCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="perma_city_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">PIN Code <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.PermanentPincode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="perma_pincode_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.PermanentStateId, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
                                                </div>
                                                <span class="error" id="perma_state_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
                                            <div class="col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.PermanentDistrictId, new SelectList(Model.PerOrRegAddressDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
                                                </div>
                                                <span class="error" id="perma_district_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*<div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
                                            <div class="col-md-7 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.PerOrRegAddressDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="PerOrRegAddressDialCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.PerOrRegAddressPhoneNumber, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="perma_officePhone_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Fax </label>
                                            <div class="col-md-7 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.PermanentFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="PermanentFaxCode_error"></span>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.PermanentFaxPhoneNumber, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <span class="error" id="PermanentFaxPhoneNumber_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="d-flex align-items-center justify-content-center mt-3">
                            <div class="px-2">
                                <button class="btn btn_primary" type="submit" id="btnSubmit" onclick="return SubmitValidations()">Update</button>
                            </div>
                            <div class="px-2">
                                <button class="btn btn_primary" type="button" onclick="ViewCustomerDetails()">Reset</button>
                            </div>
                            <div class="px-2">
                                <button class="btn btn_primary" type="button" style="display:none">Skip</button>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>

            </div>
            @Html.HiddenFor(model => Model.ExternalPANAPIStatus)
            @Html.HiddenFor(model => Model.TBEntityId)
            @Html.HiddenFor(model => Model.IsDuplicatePanNo)
            @Html.HiddenFor(model => Model.CustomerReferenceNo)
            @Html.HiddenFor(model => Model.FormNumber)

            <!-- Modal : Dialog -->
            <!-- PAN ErrorMsg Modal -->
            <div class="modal fade" id="PANErrorMsg" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header py-2">
                            <h5 class="modal-title" id="exampleModalLabel" style="font-size:18px;">PAN Validation</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="col-lg-12 col-12">
                                <div class="d-flex align-items-center justify-content-center flex-wrap mb-0">
                                    <p class="mb-0">Entered PAN No. does not match with selected Type of Business Entity</p>
                                </div>
                            </div>
                            <div class="d-flex align-items-center justify-content-center mt-3">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="HidePANErrorMsgPopup(this)">OK</button>
                                </div>
                                <div class="px-2">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal : Dialog -->

        }
        <div class="clearfix"></div>
    </div>
</div>
<div class="clearfix"></div>

<script>
        $(document).ready(function ()
        {
            if($("#dvRemarks").html().trim()!="")
            {
                document.getElementById("dvAddress").style.display="block";
                document.getElementById("dvNoData").style.display = "none";
                document.getElementById("dvNoData").innerHTML="";
                $("#CustomerId").prop('readonly', true);

                var tbentityid = document.getElementById("TBEntityId").value;
                if(tbentityid==10)
                {
                    $('#lblPanText').text('');
                    $('#lblPanText').append('Govt. Dept. Identification Details<sup class="text-danger">*</sup>');
                    $('#btnVerify').hide();
                    $('#lblCustPOI').show();
                    document.getElementById('IsDuplicatePanNo').value = "1";
                    document.getElementById("IncomeTaxPan").maxLength = 30;
                    document.getElementById("dvPan").className = "col-md-7 col-12";
                    $('#PanCardRemarks').val('');
                }
                else 
                {
                    $('#lblPanText').text('');
                    $('#lblPanText').append('Income Tax PAN<sup class="text-danger">*</sup>');
                    $('#btnVerify').show();
                    $('#lblCustPOI').hide();
                    document.getElementById("IncomeTaxPan").maxLength = 10;
                    document.getElementById("dvPan").className = "col-md-6 col-12";

                    if(document.getElementById('IsDuplicatePanNo').value == "0")
                    {
                        document.getElementById("lblPanCardRemarks").style.display = "block";
                        document.getElementById("PanCardRemarks").style.display = "block";
                        document.getElementById("PanCardRemarks_error").innerHTML="";
                    }
                    else
                    {
                        document.getElementById("lblPanCardRemarks").style.display = "none";
                        document.getElementById("PanCardRemarks").style.display = "none";
                        document.getElementById("PanCardRemarks_error").innerHTML="";
                    }
                }
            }
        });

        $('select').SumoSelect({
            placeholder: '--Select--',
            search: true,
            searchText: 'Enter Text here.'
        });

        $("#btnReset").click(function () {
            window.location.href = '@Url.Action("UpdateCustomerAddress", "Customer")';
        });

        $('#CustomerId').keypress(function (e) {
            if (e.keyCode == 13) {  // detect the enter key
                e.preventDefault();
                $('#btnSearch').click();
            }
        });

        $("#CustomerId").on("blur", function ()
        {
            if ($("#CustomerId").val().trim() == "")
            {
                $('#CustomerIdValErrMsg').html("Please enter Customer ID");
                return false;
            }
            else if (!$("#CustomerId").val().match(mappedCustomerId))
            {
                $("#CustomerIdValErrMsg").attr("style", "display:block");
                $("#CustomerIdValErrMsg").html("Invalid Customer ID");
                return false;
            }
            else
            {
               $('#CustomerIdValErrMsg').html("");
            }

        })

      function ViewCustomerDetails()
      {
            debugger;
            if ($("#CustomerId").val().trim() == "")
            {
                $('#CustomerIdValErrMsg').html("Please enter Customer ID");
                return false;
            }
            else if (!$("#CustomerId").val().match(mappedCustomerId))
            {
                $("#CustomerIdValErrMsg").attr("style", "display:block");
                $("#CustomerIdValErrMsg").html("Invalid Customer ID");
                return false;
            }
            else
            {
               $('#CustomerIdValErrMsg').html("");
            }

            localStorage.setItem("DUPLICATEPANUSED", "1");
            $('#dvRemarks').html("");
            $("#dvRemarks").attr("style", "display:none");
            

            $.ajax({
                url: "@Url.Action("GetCustomerAddress", "Customer")",
                type: "POST",
                dataType: "JSON",
                data: { CustomerId: $("#CustomerId").val() },
                success: function (res)
                {
                    console.log("customer", res.customer);

                    if(res.customer.communicationAddress1!="")
                    {
                        document.getElementById("dvAddress").style.display="block";
                        document.getElementById("dvNoData").style.display = "none";
                        document.getElementById("dvNoData").innerHTML="";
                        $("#CustomerId").prop('readonly', true);

                        $('#IncomeTaxPan').val(res.customer.incomeTaxPan);

                        $('#CommunicationAddress1').val(res.customer.communicationAddress1);
                        $('#CommunicationAddress2').val(res.customer.communicationAddress2);
                        $('#CommunicationAddress3').val(res.customer.communicationAddress3);
                        $('#CommunicationLocation').val(res.customer.communicationLocation);
                        $('#CommunicationCityName').val(res.customer.communicationCityName);
                        $('#CommunicationPinCode').val(res.customer.communicationPinCode);
                        $('#TBEntityId').val(res.customer.tbEntityId);
                        $('#CustomerReferenceNo').val(res.customer.customerReferenceNo);
                        $('#IndividualOrgName').val(res.customer.individualOrgName);
                        $('#TBEntityName').val(res.customer.tbEntityName);
                        $('#FormNumber').val(res.customer.formNumber);
                                                            
                        console.log($('#TBEntityId').val());

                        $('#CommunicationStateId')[0].sumo.selectItem(res.customer.casid);
                        $('#PermanentStateId')[0].sumo.selectItem(res.customer.pasid);


                        @*$('#CommunicationDialCode').val(res.customer.communicationDialCode);
                        $('#CommunicationPhonePart2').val(res.customer.communicationPhonePart2);
                        $('#CommunicationFaxCode').val(res.customer.communicationFaxCode);
                        $('#CommunicationFaxPart2').val(res.customer.communicationFaxPart2);*@
                        $('#CommunicationMobileNo').val(res.customer.communicationMobileNo);
                        $('#CommunicationEmailid').val(res.customer.communicationEmailid);


                        $('#PermanentAddress1').val(res.customer.permanentAddress1);
                        $('#PermanentAddress2').val(res.customer.permanentAddress2);
                        $('#PermanentAddress3').val(res.customer.permanentAddress3);
                        $('#PermanentCityName').val(res.customer.permanentCityName);
                        $('#PermanentPincode').val(res.customer.permanentPincode);
                        $('#PermanentLocation').val(res.customer.permanentLocation);

                        @*$('#PerOrRegAddressDialCode').val(res.customer.perOrRegAddressDialCode);
                        $('#PerOrRegAddressPhoneNumber').val(res.customer.perOrRegAddressPhoneNumber);
                        $('#PermanentFaxCode').val(res.customer.permanentFaxCode);
                        $('#PermanentFaxPhoneNumber').val(res.customer.permanentFaxPhoneNumber);*@
                        $('#PanCardRemarks').val(res.customer.panCardRemarks);
                    

                        $('#lblPanCardRemarks').hide();
                        $('#PanCardRemarks').hide();
                        document.getElementById("PanCardRemarks_error").innerHTML="";

                        if(res.customer.tbEntityId==10)
                        {
                            $('#lblPanText').text('');
                            $('#lblPanText').append('Govt. Dept. Identification Details<sup class="text-danger">*</sup>');
                            $('#btnVerify').hide();
                            $('#lblCustPOI').show();
                            document.getElementById('IsDuplicatePanNo').value = "1";
                            document.getElementById("IncomeTaxPan").maxLength = 30;
                            document.getElementById("dvPan").className = "col-md-7 col-12";
                            $('#PanCardRemarks').val('');
                        }
                        else 
                        {
                            $('#lblPanText').text('');
                            $('#lblPanText').append('Income Tax PAN<sup class="text-danger">*</sup>');
                            $('#btnVerify').show();
                            $('#lblCustPOI').hide();
                            document.getElementById("IncomeTaxPan").maxLength = 10;
                            document.getElementById("dvPan").className = "col-md-6 col-12";
                        }

                         $.ajax({
                            type: 'POST',  // http method
                            url: '@Url.Action("GetDistrictDetails", "Customer")',
                            data: { Stateid: res.customer.casid },  // data to submit
                            dataType: "json",
                            success: function (data, status, xhr) {
                                var v = data;
                                if (status == 'success')
                                {
                                    $("#CommunicationDistrictId").html("");
                                    $.each(data, function (i, data) { // bind the dropdown list using json result
                                        $('<option>',
                                            {
                                                value: data.districtID,
                                                text: data.districtName
                                            }).html(data.districtName).appendTo("#CommunicationDistrictId");
                                    });
                                    $("#CommunicationDistrictId")[0].sumo.reload();

                                    setTimeout(function(){
                                       $('#CommunicationDistrictId')[0].sumo.selectItem(res.customer.cadid);
                                       },500);
                                }
                                else {
                                    console.log(v);
                                }
                            },
                            error: function (jqXhr, textStatus, errorMessage) {
                                alert("Error Populating District Data");
                            }
                        });


                         $.ajax({
                            type: 'POST',  // http method
                            url: '@Url.Action("GetDistrictDetails", "Customer")',
                            data: { Stateid: res.customer.pasid },  // data to submit
                            dataType: "json",
                            success: function (data, status, xhr) {
                                var v = data;
                                if (status == 'success')
                                {
                                    $("#PermanentDistrictId").html("");
                                    $.each(data, function (i, data) { // bind the dropdown list using json result
                                        $('<option>',
                                            {
                                                value: data.districtID,
                                                text: data.districtName
                                            }).html(data.districtName).appendTo("#PermanentDistrictId");
                                    });
                                    $("#PermanentDistrictId")[0].sumo.reload();

                                    setTimeout(function(){
                                       $('#PermanentDistrictId')[0].sumo.selectItem(res.customer.padid);
                                       },500);
                                }
                                else {
                                    console.log(v);
                                }
                            },
                            error: function (jqXhr, textStatus, errorMessage) {
                                alert("Error Populating District Data");
                            }
                        });

                    }
                    else
                    {
                        document.getElementById("dvAddress").style.display = "none";
                        document.getElementById("dvNoData").style.display = "block";
                        document.getElementById("dvNoData").innerHTML= res.customer.message;
                        $("#CustomerId").prop('readonly', false);
                    }
                    
 
                 },
                 error: function (ex)
                 {
                    alert('Failed' + ex);
                    document.getElementById("dvAddress").style.display = "none";
                    document.getElementById("dvNoData").style.display = "block";
                    document.getElementById("dvNoData").innerHTML= res.customer.message;
                 }

            });
            clearValidations();
        };

        function clearValidations()
        {
            document.getElementById("comm_address1_error").innerHTML="";
            document.getElementById("comm_address2_error").innerHTML="";
            document.getElementById("comm_address3_error").innerHTML="";
            document.getElementById("comm_location_error").innerHTML="";
            document.getElementById("comm_city_error").innerHTML="";
            document.getElementById("comm_pincode_error").innerHTML="";
            document.getElementById("comm_states_error").innerHTML="";
            document.getElementById("comm_district_error").innerHTML="";
            @*document.getElementById("CommunicationDialCode_error").innerHTML="";
            document.getElementById("CommunicationPhonePart2_error").innerHTML="";*@
            document.getElementById("comm_mobileNumber_error").innerHTML="";
            @*document.getElementById("CommunicationFaxCode_error").innerHTML="";
            document.getElementById("CommunicationFaxPart2_error").innerHTML="";*@
            document.getElementById("comm_email_error").innerHTML="";
            document.getElementById("incomeTaxPan_error").innerHTML="";
            document.getElementById("perma_address1_error").innerHTML="";
            document.getElementById("perma_address2_error").innerHTML="";
            document.getElementById("perma_address3_error").innerHTML="";
            document.getElementById("perma_location_error").innerHTML="";
            document.getElementById("perma_city_error").innerHTML="";
            document.getElementById("perma_pincode_error").innerHTML="";
            document.getElementById("perma_state_error").innerHTML="";
            document.getElementById("perma_district_error").innerHTML="";
            @*document.getElementById("PerOrRegAddressDialCode_error").innerHTML="";
            document.getElementById("perma_officePhone_error").innerHTML="";
            document.getElementById("PermanentFaxCode_error").innerHTML="";
            document.getElementById("PermanentFaxPhoneNumber_error").innerHTML="";*@
        }

           $("#CommunicationAddress1").on("blur", function () {
            //debugger;
            var Address = document.getElementById("CommunicationAddress1").value.trim();
            if (Address == "") {
                document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
                return (false);
            }
            else {
                if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) {
                    document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("comm_address1_error").innerHTML = "";
                }

                if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) {
                    document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("comm_address1_error").innerHTML = "";
                }

            }
        });

        $("#CommunicationAddress2").on("blur", function () {
            //debugger;
            var Address = document.getElementById("CommunicationAddress2").value.trim();
            if (Address == "") {
                document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
                return (false);
            }
            else {
                if (!isNaN(document.getElementById("CommunicationAddress2").value.trim())) {
                    document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("comm_address2_error").innerHTML = "";
                }

                if (!document.getElementById("CommunicationAddress2").value.match(atLeastOneAlphabet)) {
                    document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("comm_address2_error").innerHTML = "";
                }
            }
        });

        $("#CommunicationAddress3").on("blur", function () {
            //debugger;
            if (document.getElementById("CommunicationAddress3").value.trim() != "")
            {
                if (!isNaN(document.getElementById("CommunicationAddress3").value.trim())) {
                    document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("comm_address3_error").innerHTML = "";
                }

                if (!document.getElementById("CommunicationAddress3").value.match(atLeastOneAlphabet)) {
                    document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("comm_address3_error").innerHTML = "";
                }

            }
            else {
                document.getElementById("comm_address3_error").innerHTML = "";
            }
        });

        $("#CommunicationCityName").on("blur", function () {
            //debugger;
            var city = document.getElementById("CommunicationCityName").value.trim();
            if (city == "") {
                document.getElementById("comm_city_error").innerHTML = "City field cannot be left blank";
                return (false);
            }
            else {
                if (!isNaN(document.getElementById("CommunicationCityName").value.trim())) {
                    document.getElementById("comm_city_error").innerHTML = "Invalid City";
                    return false;
                }
                else {
                    document.getElementById("comm_city_error").innerHTML = "";
                }

                if (!document.getElementById("CommunicationCityName").value.match(atLeastOneAlphabet)) {
                    document.getElementById("comm_city_error").innerHTML = "Invalid City";
                    return false;
                }
                else {
                    document.getElementById("comm_city_error").innerHTML = "";
                }
            }
        });

        $("#CommunicationPinCode").on("blur", function ()
        {
            //debugger;
            if (document.getElementById("CommunicationPinCode").value == "")
            {
                document.getElementById("comm_pincode_error").innerHTML = "PIN Code field cannot be left blank";
                return (false);
            }
            else if (document.getElementById("CommunicationPinCode").value.substring(0, 1) == "0")
            {
                document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                return false;
            }
            else if (document.getElementById("CommunicationPinCode").value.length < 6)
            {
                document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                return false;
            }
            else if (!document.getElementById("CommunicationPinCode").value.match(pincode))
            {
                document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                return false;
            }
            else
            {
                document.getElementById("comm_pincode_error").innerHTML = "";
            }

        });

        $("#CommunicationDialCode").on("blur", function ()
        {
            //debugger;
            var stdCode = document.getElementById("CommunicationDialCode").value.trim();
            if (stdCode != "")
            {

                if (stdCode.length < 2 || stdCode.length > 4)
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else
                {
                    if (!stdCode.match(number))
                    {
                        document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                        return false;
                    }
                    else
                    {
                        document.getElementById("CommunicationDialCode_error").innerHTML = "";
                    }
                }
            }
            else
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "";
            }

      });

      $("#CommunicationPhonePart2").on("blur", function ()
       {
            //debugger;
            var phno = document.getElementById("CommunicationPhonePart2").value.trim();
            if (phno != "")
            {
                if (phno.charAt(0) == "0")
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else if (phno.length < 6 || phno.length > 8)
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else
                {
                    if (!phno.match(number))
                    {
                        document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                        return false;
                    }
                    else
                    {
                        document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
                    }
                }

            }
            else
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
            }

      });

      @*$("#CommunicationFaxCode").on("blur", function ()
       {
            //debugger;
        var faxCode = document.getElementById("CommunicationFaxCode").value.trim();
        if (faxCode != "") {
            if (faxCode.length < 2 || faxCode.length > 4) {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else
            {
                if (!faxCode.match(number))
                {
                    document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else {
                    document.getElementById("CommunicationFaxCode_error").innerHTML = "";
                }
            }

        }
        else {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "";
        }

      });

      $("#CommunicationFaxPart2").on("blur", function ()
      {
            //debugger;
        var faxphno = document.getElementById("CommunicationFaxPart2").value.trim();
        if (faxphno != "") {
            if (faxphno.charAt(0) == "0") {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else if (faxphno.length < 6 || faxphno.length > 8) {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else
            {
                if (!faxphno.match(number))
                {
                    document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                    return false;
                }
                else
                {
                    document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
                }
            }

        }
        else
        {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
        }

      });*@

       $("#CommunicationMobileNo").on("blur", function ()
       {
            //debugger;
            var communicationMobile = document.getElementById("CommunicationMobileNo").value;
            if (communicationMobile == "") {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
                return (false);
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }

            if (document.getElementById("CommunicationMobileNo").value.substring(0, 1) == "0") {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
                return false;
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }

            if (document.getElementById("CommunicationMobileNo").value.length < 10) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
                return false;
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }

            if (document.getElementById("CommunicationMobileNo").value.match(phoneno)) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
                return false;
            }


        });

        $("#CommunicationEmailid").on("blur", function () {
            //debugger;
            var communicationEmail = document.getElementById("CommunicationEmailid").value.trim();
            if (communicationEmail == "") {
                document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
                return (false);
            }
            else {
                document.getElementById("comm_email_error").innerHTML = "";
            }

            if (communicationEmail.match(email)) {
                document.getElementById("comm_email_error").innerHTML = "";
            }
            else {
                document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
                return (false);
            }

        });

        $("#PermanentAddress1").on("blur", function () {
            //debugger;
            var Address = document.getElementById("PermanentAddress1").value.trim();
            if (Address == "") {
                document.getElementById("perma_address1_error").innerHTML = "Address field cannot be left blank";
                return (false);
            }
            else {
                if (!isNaN(document.getElementById("PermanentAddress1").value.trim())) {
                    document.getElementById("perma_address1_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("perma_address1_error").innerHTML = "";
                }

                if (!document.getElementById("PermanentAddress1").value.match(atLeastOneAlphabet)) {
                    document.getElementById("perma_address1_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("perma_address1_error").innerHTML = "";
                }

            }
        });

        $("#PermanentAddress2").on("blur", function () {
            //debugger;
            var Address = document.getElementById("PermanentAddress2").value.trim();
            if (Address == "") {
                document.getElementById("perma_address2_error").innerHTML = "Address field cannot be left blank";
                return (false);
            }
            else {
                if (!isNaN(document.getElementById("PermanentAddress2").value.trim())) {
                    document.getElementById("perma_address2_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("perma_address2_error").innerHTML = "";
                }

                if (!document.getElementById("PermanentAddress2").value.match(atLeastOneAlphabet)) {
                    document.getElementById("perma_address2_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("perma_address2_error").innerHTML = "";
                }
            }
        });

        $("#PermanentAddress3").on("blur", function () {
            //debugger;
            if (document.getElementById("PermanentAddress3").value.trim() != "") {
                if (!isNaN(document.getElementById("PermanentAddress3").value.trim())) {
                    document.getElementById("perma_address3_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("perma_address3_error").innerHTML = "";
                }

                if (!document.getElementById("PermanentAddress3").value.match(atLeastOneAlphabet)) {
                    document.getElementById("perma_address3_error").innerHTML = "Invalid Address";
                    return false;
                }
                else {
                    document.getElementById("perma_address3_error").innerHTML = "";
                }

            }
            else {
                document.getElementById("perma_address3_error").innerHTML = "";
            }

        });

        $("#PermanentCityName").on("blur", function () {
            //debugger;
            var city = document.getElementById("PermanentCityName").value.trim();
            if (city == "") {
                document.getElementById("perma_city_error").innerHTML = "City field cannot be left blank";
                return (false);
            }
            else {
                if (!isNaN(document.getElementById("PermanentCityName").value.trim())) {
                    document.getElementById("perma_city_error").innerHTML = "Invalid City";
                    return false;
                }
                else {
                    document.getElementById("perma_city_error").innerHTML = "";
                }

                if (!document.getElementById("PermanentCityName").value.match(atLeastOneAlphabet)) {
                    document.getElementById("perma_city_error").innerHTML = "Invalid City";
                    return false;
                }
                else {
                    document.getElementById("perma_city_error").innerHTML = "";
                }
            }
        });

        $("#PermanentPincode").on("blur", function ()
        {
            //debugger;
            if (document.getElementById("PermanentPincode").value == "")
            {
                document.getElementById("perma_pincode_error").innerHTML = "PIN Code field cannot be left blank";
                return (false);
            }
            else if (document.getElementById("PermanentPincode").value.substring(0, 1) == "0")
            {
                document.getElementById("perma_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                return false;
            }
            else if (document.getElementById("PermanentPincode").value.length < 6)
            {
                document.getElementById("perma_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                return false;
            }
            else if (!document.getElementById("PermanentPincode").value.match(pincode))
            {
                document.getElementById("perma_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                return false;
            }
            else
            {
                document.getElementById("perma_pincode_error").innerHTML = "";
            }

        });

        $("#CommunicationStateId").change(function () {
            var id = this.value;

            if (id != 0) {
                $("#comm_states_error").html("");
            }

            $("#CommunicationDistrictId").html("");


            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetDistrictDetails", "Customer")',
                data: { Stateid: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') {
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.districtID,
                                    text: data.districtName
                                }).html(data.districtName).appendTo("#CommunicationDistrictId");
                        });
                        $("#CommunicationDistrictId")[0].sumo.reload();
                    }
                    else {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating District Data");
                }
            });

        });

        $("#PermanentStateId").change(function () {
                var id = this.value;
             if (id != 0) {
                 $("#perma_state_error").html("");
                }

                $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("GetDistrictDetails", "Customer")',
                    data: { Stateid: id },  // data to submit
                    dataType: "json",
                    success: function (data, status, xhr) {
                        var v = data;

                        if (status == 'success') {
                            $("#PermanentDistrictId").html("");
                            $.each(data, function (i, data) { // bind the dropdown list using json result
                                $('<option>',
                                    {
                                        value: data.districtID,
                                        text: data.districtName
                                    }).html(data.districtName).appendTo("#PermanentDistrictId");
                            });
                            $("#PermanentDistrictId")[0].sumo.reload();

                        }
                        else {
                            console.log(v);
                        }
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        alert("Error Populating District Data");
                    }

               });

        });

        $("#PermanentDistrictId").change(function () {
            var id = this.value;

            if (id != 0) {
                $("#perma_district_error").html("");
            }
        });

        $("#CommunicationDistrictId").change(function () 
        {
            localStorage.setItem("DUPLICATEPANUSED", "1");
            var id = this.value;

            if (id != 0) {
                $("#comm_district_error").html("");
            }

            var panno = $('#IncomeTaxPan').val().trim();
            var tbentityid = document.getElementById("TBEntityId").value;

            document.getElementById('IsDuplicatePanNo').value = "1";
            var customerReferenceNo = $("#CustomerReferenceNo").val();
            var formNumber = $("#FormNumber").val();

            if (id != 0 && tbentityid != "10" && panno!="") 
            {
               console.log('Inside CheckPanCardDuplicationByDistrictidForCustomerUpdate');

                $.ajax({
                    type: 'POST',  // http method
                    url: '@Url.Action("CheckPanCardDuplicationByDistrictidForCustomerUpdate", "Customer")',
                    data: { DistrictId: id, IncomeTaxPan: panno, FormNumber: formNumber},  // data to submit
                    dataType: "json",
                    success: function (data, status, xhr) 
                    {
                        console.log(data);
                        console.log(status);
                        var v = data;
                        if (status == 'success') {

                            console.log('Test');
                            console.log(data);
                            console.log(data.status);
                            console.log(data.reason);
                            if (data.status == "0") 
                            {
                                localStorage.setItem("DUPLICATEPANUSED", "0");
                                document.getElementById('IsDuplicatePanNo').value = "0";

                                document.getElementById("lblPanCardRemarks").style.display = "block";
                                document.getElementById("PanCardRemarks").style.display = "block";
                                document.getElementById("PanCardRemarks_error").innerHTML="";
                            }
                            else 
                            {
                                localStorage.setItem("DUPLICATEPANUSED", "1");
                                document.getElementById('IsDuplicatePanNo').value = "1";

                                document.getElementById("lblPanCardRemarks").style.display = "none";
                                document.getElementById("PanCardRemarks").style.display = "none";
                                document.getElementById("PanCardRemarks").value = "";
                                document.getElementById("PanCardRemarks_error").innerHTML="";
                            }
                        }
                        else 
                        {
                            //console.log(v);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) 
                    {
                    }
                });
            }

        });

        function SubmitValidations()
        {
        debugger;
        var ret = true;
        var Address1=document.getElementById("CommunicationAddress1").value.trim();
        if (Address1 == "")
        {
            document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
            ret=false;
        }
        else
        {
            if (!Address1.match(atLeastOneAlphabet))
            {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else
            {
                document.getElementById("comm_address1_error").innerHTML = "";
            }
        }

        var Address2=document.getElementById("CommunicationAddress2").value.trim();
        if (Address2 == "")
        {
            document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
            ret = false;
        }
        else
        {
            if (!Address2.match(atLeastOneAlphabet))
            {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else
            {
                document.getElementById("comm_address2_error").innerHTML = "";
            }
        }

        var Address3=document.getElementById("CommunicationAddress3").value.trim();
        if (Address3 != "")
        {
            if (!Address3.match(atLeastOneAlphabet))
            {
                document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else
            {
                document.getElementById("comm_address3_error").innerHTML = "";
            }
        }
        else
        {
            document.getElementById("comm_address3_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationLocation").value.trim() != "")
        {
            if (!document.getElementById("CommunicationLocation").value.match(atLeastOneAlphabet))
            {
                document.getElementById("comm_location_error").innerHTML = "Invalid Location";
                ret = false;
            }
            else
            {
                document.getElementById("comm_location_error").innerHTML = "";
            }
        }
        else
        {
            document.getElementById("comm_location_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationCityName").value.trim() == "") {
            document.getElementById("comm_city_error").innerHTML = "City field cannot be left blank";
            ret = false;
        }
        else {
            if (!document.getElementById("CommunicationCityName").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_city_error").innerHTML = "Invalid City";
                ret = false;
            }
            else {
                document.getElementById("comm_city_error").innerHTML = "";
            }
        }

        var pin=document.getElementById("CommunicationPinCode").value.trim();
        if (pin == "")
        {
            document.getElementById("comm_pincode_error").innerHTML = "PIN Code field cannot be left blank";
            ret = false;
        }
        else
        {
            if (pin.substring(0, 1) == "0")
            {
                document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                ret = false;
            }
            else if (pin.length < 6)
            {
                document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                ret = false;
            }
            else if (!pin.match(pincode))
            {
                document.getElementById("comm_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                ret = false;
            }
            else
            {
                document.getElementById("comm_pincode_error").innerHTML = "";
            }
        }

        if (document.getElementById("CommunicationStateId").value == "0" || document.getElementById("CommunicationStateId").value == "")
        {
            document.getElementById("comm_states_error").innerHTML = "State field cannot be left blank";
            ret = false;
        }
        else
        {
            document.getElementById("comm_states_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationDistrictId").value == "0" || document.getElementById("CommunicationDistrictId").value == "")
        {
            document.getElementById("comm_district_error").innerHTML = "District field cannot be left blank";
            ret = false;
        }
        else
        {
            document.getElementById("comm_district_error").innerHTML = "";
        }

        @*var stdCode = document.getElementById("CommunicationDialCode").value.trim();
        if (stdCode != "") {

            if (stdCode.length < 2 || stdCode.length > 4) {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else
            {
                if (!stdCode.match(number))
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                    ret = false;
                }
                else
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "";
                }
            }

        }
        else {
            document.getElementById("CommunicationDialCode_error").innerHTML = "";
        }

        var phno = document.getElementById("CommunicationPhonePart2").value.trim();
        if (phno != "") {
            if (phno.charAt(0) == "0") {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else if (phno.length < 6 || phno.length > 8) {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else
            {
                if (!phno.match(number))
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                    ret = false;
                }
                else {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
                }
            }

        }
        else {
            document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        }*@


      @*  var faxCode = document.getElementById("CommunicationFaxCode").value.trim();
        if (faxCode != "") {
            if (faxCode.length < 2 || faxCode.length > 4) {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else
            {
                if (!faxCode.match(number))
                {
                    document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                    ret = false;
                }
                else {
                    document.getElementById("CommunicationFaxCode_error").innerHTML = "";
                }
            }

        }
        else {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "";
        }

        var faxphno = document.getElementById("CommunicationFaxPart2").value.trim();
        if (faxphno != "") {
            if (faxphno.charAt(0) == "0") {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else if (faxphno.length < 6 || faxphno.length > 8) {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else
            {
                if (!faxphno.match(number))
                {
                    document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                    ret = false;
                }
                else
                {
                    document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
                }
            }

        }
        else
        {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
        }*@

        console.log('Before CommunicationMobileNumber check');

        var mobile=document.getElementById("CommunicationMobileNo").value.trim();
        if (mobile == "")
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            ret = false;
        }
        else
        {
            if (mobile.substring(0, 1) == "0")
            {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
                ret = false;
            }
            else if (mobile.length < 10)
            {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
                ret = false;
            }
            else if (!mobile.match(phoneno))
            {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
                ret = false;
            }
            else
            {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }
        }
        console.log('After CommunicationMobileNumber check');

        var email=document.getElementById("CommunicationEmailid").value.trim();
        if (email.trim() == "")
        {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            ret = false;
        }
        else
        {
            if (!email.match(email))
            {
                document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
                ret = false;
            }
            else
            {
                document.getElementById("comm_email_error").innerHTML = "";
            }
        }

        var address=document.getElementById("PermanentAddress1").value.trim();
        if (address == "")
        {
            document.getElementById("perma_address1_error").innerHTML = "Address field cannot be left blank";
            ret = false;
        }
        else
        {
            if (!address.match(atLeastOneAlphabet))
            {
                document.getElementById("perma_address1_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else
            {
                document.getElementById("perma_address1_error").innerHTML = "";
            }
        }

        var address=document.getElementById("PermanentAddress2").value.trim();
        if (address == "")
        {
            document.getElementById("perma_address2_error").innerHTML = "Address field cannot be left blank";
            ret = false;
        }
        else
        {
            if (!address.match(atLeastOneAlphabet))
            {
                document.getElementById("perma_address2_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else
            {
                document.getElementById("perma_address2_error").innerHTML = "";
            }
        }

        var address=document.getElementById("PermanentAddress3").value.trim();
        if (address != "")
        {
            if (!address.match(atLeastOneAlphabet))
            {
                document.getElementById("perma_address3_error").innerHTML = "Invalid Address";
                ret = false;
            }
            else
            {
                document.getElementById("perma_address3_error").innerHTML = "";
            }
        }
        else
        {
            document.getElementById("perma_address3_error").innerHTML = "";
        }

        var location=document.getElementById("PermanentLocation").value.trim();
        if (location != "")
        {
            if (!location.match(atLeastOneAlphabet))
            {
                document.getElementById("perma_location_error").innerHTML = "Invalid Location";
                ret = false;
            }
            else
            {
                document.getElementById("perma_location_error").innerHTML = "";
            }
        }
        else
        {
            document.getElementById("perma_location_error").innerHTML = "";
        }

        var city = document.getElementById("PermanentCityName").value.trim();
        if (city == "")
        {
            document.getElementById("perma_city_error").innerHTML = "City field cannot be left blank";
            ret = false;
        }
        else
        {
            if (!city.match(atLeastOneAlphabet))
            {
                document.getElementById("perma_city_error").innerHTML = "Invalid City";
                ret = false;
            }
            else
            {
                document.getElementById("perma_city_error").innerHTML = "";
            }
        }
        console.log('Before PermanentPincode')
        var pin = document.getElementById("PermanentPincode").value.trim();
        if (pin == "")
        {
            document.getElementById("perma_pincode_error").innerHTML = "PIN Code field cannot be left blank";
            ret = false;
        }
        else
        {
            if (pin.substring(0, 1) == "0")
            {
                document.getElementById("perma_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                ret = false;
            }
            else if (pin.length < 6)
            {
                document.getElementById("perma_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                ret = false;
            }
            else if (!pin.match(pincode))
            {
                document.getElementById("perma_pincode_error").innerHTML = "Invalid PIN Code. Min-Max 6 digits";
                ret = false;
            }
            else
            {
                document.getElementById("perma_pincode_error").innerHTML = "";
            }
        }
        console.log(pin.match(pincode))
        console.log('After PermanentPincode')

        if (document.getElementById("PermanentStateId").value == "0")
        {
            document.getElementById("perma_state_error").innerHTML = "State field cannot be left blank";
            ret = false;
        }
        else
        {
            document.getElementById("perma_state_error").innerHTML = "";
        }


        if (document.getElementById("PermanentDistrictId").value == "-1" || document.getElementById("PermanentDistrictId").value == "0")
        {
            document.getElementById("perma_district_error").innerHTML = "District field cannot be left blank";
            ret = false;
        }
        else
        {
            document.getElementById("perma_district_error").innerHTML = "";
        }

        @*var stdCode = document.getElementById("PerOrRegAddressDialCode").value.trim();
        if (stdCode != "") {

            if (stdCode.length < 2 || stdCode.length > 4) {
                document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else {
                if (!stdCode.match(number)) {
                    document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                    ret = false;
                }
                else {
                    document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
                }
            }
        }
        else {
            document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
        }

        var phno = document.getElementById("PerOrRegAddressPhoneNumber").value.trim();
        if (phno != "") {
            if (phno.charAt(0) == "0") {
                document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else if (phno.length < 6 || phno.length > 8) {
                document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else {
                if (!phno.match(number)) {
                    document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                    ret = false;
                }
                else {
                    document.getElementById("perma_officePhone_error").innerHTML = "";
                }
            }

        }
        else {
            document.getElementById("perma_officePhone_error").innerHTML = "";
        }

        var faxCode = document.getElementById("PermanentFaxCode").value.trim();
        if (faxCode != "")
        {
            if (faxCode.length < 2 || faxCode.length > 4)
            {
                document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else
            {
                if (!faxCode.match(number))
                {
                    document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
                    ret = false;
                }
                else
                {
                    document.getElementById("PermanentFaxCode_error").innerHTML = "";
                }
            }

        }
        else
        {
            document.getElementById("PermanentFaxCode_error").innerHTML = "";
        }

        var faxphno = document.getElementById("PermanentFaxPhoneNumber").value.trim();
        if (faxphno != "")
        {
            if (faxphno.charAt(0) == "0")
            {
                document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else if (faxphno.length < 6 || faxphno.length > 8)
            {
                document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else
            {
                if (!faxphno.match(number))
                {
                    document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                    ret = false;
                }
                else
                {
                    document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "";
                }
            }

        }
        else
        {
            document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "";
        }*@

            var tbentityid = document.getElementById("TBEntityId").value;

            if (tbentityid == 10) 
            {
                if (document.getElementById("IncomeTaxPan").value.trim() == "")
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Govt. Dept. Identification Details required";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    ret = false;
                }
            }
            else
            {

                if (document.getElementById("IncomeTaxPan").value.trim() == "")
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field is required";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    ret = false;
                }
                else
                {

                     document.getElementById("IncomeTaxPan").value = document.getElementById("IncomeTaxPan").value.trim().toUpperCase();

                    var panNumber = document.getElementById("IncomeTaxPan").value;
                    let forthdigitPan = panNumber.substr(3, 1);
                    console.log(forthdigitPan);
                    if (tbentityid == 2 && forthdigitPan != 'P')
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if (tbentityid == 3 && forthdigitPan != 'C')
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if (tbentityid == 4 && forthdigitPan != 'H')
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if (tbentityid == 8 && forthdigitPan != 'A')
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if ((tbentityid == 1 || tbentityid == 5 || tbentityid == 6 || tbentityid == 7 || tbentityid == 9) && (forthdigitPan == 'A' || forthdigitPan == 'P'|| forthdigitPan == 'C'|| forthdigitPan == 'H'))
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else if (!$('#IncomeTaxPan').val().match(pancard))
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else
                    {
                        if (localStorage.getItem("PANNOALREADYUSED") == 0)
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "PAN Number already exists";
                            document.getElementById("incomeTaxPan_error").className = "error";
                            ret = false;
                        }
                        else if (localStorage.getItem("INVALIDPAN") == 0)
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                            document.getElementById("incomeTaxPan_error").className = "error";
                            ret = false;
                        }
                        else if (localStorage.getItem("PANNOANDNAMEMATCHING") == 0)
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Customer Name not match with pan name";
                            document.getElementById("incomeTaxPan_error").className = "error";
                            ret = false;
                        }
                        else
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                            document.getElementById("incomeTaxPan_error").className = "error text-success";
                        }
                                               

                    }

                }
            }

            if (localStorage.getItem("DUPLICATEPANUSED") == 0)
            {
                if (document.getElementById("PanCardRemarks").value.trim() == "")
                {
                    document.getElementById("PanCardRemarks_error").innerHTML = "PAN Card Remarks field is required";
                    ret = false;
                }
                else
                {
                    document.getElementById("PanCardRemarks_error").innerHTML = "";
                }
            }
            else
            {
                document.getElementById("PanCardRemarks_error").innerHTML = "";
            }

        console.log(ret);
        return ret;
    }

    $("#CommunicationLocation").on("blur", function ()
    {
            //debugger;
            if (document.getElementById("CommunicationLocation").value.trim() != "")
            {
                if (!isNaN(document.getElementById("CommunicationLocation").value.trim()))
                {
                    document.getElementById("comm_location_error").innerHTML = "Invalid Location";
                    return false;
                }
                else if (!document.getElementById("CommunicationLocation").value.match(atLeastOneAlphabet))
                {
                    document.getElementById("comm_location_error").innerHTML = "Invalid Location";
                    return false;
                }
                else
                {
                    document.getElementById("comm_location_error").innerHTML = "";
                }
            }
            else {
                document.getElementById("comm_location_error").innerHTML = "";
            }
     });

    $("#PermanentLocation").on("blur", function ()
    {
            //debugger;
            if (document.getElementById("PermanentLocation").value.trim() != "")
            {
                if (!isNaN(document.getElementById("PermanentLocation").value.trim()))
                {
                    document.getElementById("perma_location_error").innerHTML = "Invalid Location";
                    return false;
                }
                else if (!document.getElementById("PermanentLocation").value.match(atLeastOneAlphabet))
                {
                    document.getElementById("perma_location_error").innerHTML = "Invalid Location";
                    return false;
                }
                else
                {
                    document.getElementById("perma_location_error").innerHTML = "";
                }
            }
            else {
                document.getElementById("perma_location_error").innerHTML = "";
            }
     });

     @*$("#PerOrRegAddressDialCode").on("blur", function ()
        {
            //debugger;
            var stdCode = document.getElementById("PerOrRegAddressDialCode").value.trim();
            if (stdCode != "")
            {

                if (stdCode.length < 2 || stdCode.length > 4)
                {
                    document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else
                {
                    if (!stdCode.match(number))
                    {
                        document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                        return false;
                    }
                    else
                    {
                        document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
                    }
                }
            }
            else
            {
                document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
            }

      });

      $("#PerOrRegAddressPhoneNumber").on("blur", function ()
       {
            //debugger;
            var phno = document.getElementById("PerOrRegAddressPhoneNumber").value.trim();
            if (phno != "")
            {
                if (phno.charAt(0) == "0")
                {
                    document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else if (phno.length < 6 || phno.length > 8)
                {
                    document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else
                {
                    if (!phno.match(number))
                    {
                        document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                        return false;
                    }
                    else
                    {
                        document.getElementById("perma_officePhone_error").innerHTML = "";
                    }
                }

            }
            else
            {
                document.getElementById("perma_officePhone_error").innerHTML = "";
            }

      });*@

      @*$("#PermanentFaxCode").on("blur", function ()
       {
            //debugger;
        var faxCode = document.getElementById("PermanentFaxCode").value.trim();
        if (faxCode != "") {
            if (faxCode.length < 2 || faxCode.length > 4) {
                document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else
            {
                if (!faxCode.match(number))
                {
                    document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else {
                    document.getElementById("PermanentFaxCode_error").innerHTML = "";
                }
            }

        }
        else {
            document.getElementById("PermanentFaxCode_error").innerHTML = "";
        }

      });

      $("#PermanentFaxPhoneNumber").on("blur", function ()
      {
            //debugger;
        var faxphno = document.getElementById("PermanentFaxPhoneNumber").value.trim();
        if (faxphno != "") {
            if (faxphno.charAt(0) == "0") {
                document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else if (faxphno.length < 6 || faxphno.length > 8) {
                document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else
            {
                if (!faxphno.match(number))
                {
                    document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                    return false;
                }
                else
                {
                    document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "";
                }
            }

        }
        else
        {
            document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "";
        }

      });*@

      $("#IncomeTaxPan").keydown(function (e) {
            var k = e.keyCode || e.which;
            var ok = k >= 65 && k <= 90 || // A-Z
                k >= 96 && k <= 105 || // a-z
                k >= 35 && k <= 40 || // arrows
                k == 9 || //tab
                k == 46 || //del
                k == 8 || // backspaces
                (!e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)

            if (!ok || (e.ctrlKey && e.altKey)) {
                e.preventDefault();
            }
        });

        $("#IncomeTaxPan").on("blur", function ()
        {
            debugger;
            var panNumber = document.getElementById("IncomeTaxPan").value.trim();
            localStorage.setItem("PANNOALREADYUSED", "1");
            localStorage.setItem("PANNOANDNAMEMATCHING", "1");
            localStorage.setItem("INVALIDPAN", "1");
            var tbentityid = document.getElementById("TBEntityId").value;

            if (tbentityid == 10) 
            {
                console.log('Inside Govt. Dept. Identification Details')
                document.getElementById("incomeTaxPan_error").innerHTML = "";
                document.getElementById("IsDuplicatePanNo").value = "1";
                localStorage.setItem("IsDuplicatePanNo", "1");
                if (panNumber == "") 
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Govt. Dept. Identification Details required";
                    document.getElementById("incomeTaxPan_error").className = "error";
                }
                else 
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                }

                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                return (false);
           }

            if (panNumber == "")
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field is required";
                document.getElementById("incomeTaxPan_error").className = "error";
                
                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                return (false);
            }
            else
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "";
            }

            document.getElementById("IncomeTaxPan").value = document.getElementById("IncomeTaxPan").value.trim().toUpperCase();
            panNumber = document.getElementById("IncomeTaxPan").value.trim();

            if ($('#IncomeTaxPan').val().match(pancard))
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                document.getElementById("incomeTaxPan_error").className = "error text-success";
            }
            else
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";

                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                return (false);
            }

            let forthdigitPan = panNumber.substr(3, 1);
            console.log(forthdigitPan);
            if (tbentityid == 2 && forthdigitPan != 'P')
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";

                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                $('#PANErrorMsg').modal('show');
                return (false);
            }
            else if (tbentityid == 3 && forthdigitPan != 'C')
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                
                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                $('#PANErrorMsg').modal('show');
                return (false);
            }
            else if (tbentityid == 4 && forthdigitPan != 'H')
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                
                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                $('#PANErrorMsg').modal('show');
                return (false);
            }
            else if (tbentityid == 8 && forthdigitPan != 'A')
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                
                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                $('#PANErrorMsg').modal('show');
                return (false);
            }
            else if ((tbentityid == 1 || tbentityid == 5 || tbentityid == 6 || tbentityid == 7 || tbentityid == 9) && (forthdigitPan == 'A' || forthdigitPan == 'P'|| forthdigitPan == 'C'|| forthdigitPan == 'H'))
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                document.getElementById("incomeTaxPan_error").className = "error";
                
                document.getElementById("lblPanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").style.display = "none";
                document.getElementById("PanCardRemarks").value = "";
                document.getElementById("PanCardRemarks_error").innerHTML="";
                $('#PANErrorMsg').modal('show');
                return (false);
            }
            else
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
                document.getElementById("incomeTaxPan_error").className = "error text-success";
            }

            var OrgName = $('#IndividualOrgName').val();
            var correctPANName = "";

            var externalPANAPIStatus="Y";

            externalPANAPIStatus = document.getElementById("ExternalPANAPIStatus").value.trim();

            console.log(externalPANAPIStatus);
            var districtId = $("#CommunicationDistrictId").val();
            var customerReferenceNo = $("#CustomerReferenceNo").val();
            var formNumber = $("#FormNumber").val();

            if(externalPANAPIStatus=="Y")
            {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("PANValidation", "MyHpOTCCardCustomer")',
                    data: { PANNumber: panNumber },
                    dataType: "json",
                    success: function (data, status, xhr)
                    {
                        //debugger;
                        var jsonData = JSON.parse(data);
                         console.log(jsonData);
                        if (status == 'success' && jsonData['status-code'] == '101')
                        {
                            correctPANName = jsonData["result"]["name"];
                            if (OrgName.toUpperCase() == correctPANName.toUpperCase())
                            {
                                localStorage.setItem("PANNOANDNAMEMATCHING", "1");
                            }
                            else
                            {
                                document.getElementById("incomeTaxPan_error").innerHTML = "Customer Name not match with pan name";
                                document.getElementById("incomeTaxPan_error").className = "error";
                                localStorage.setItem("PANNOANDNAMEMATCHING", "0");
                            }

                            if (districtId != 0 && tbentityid != 10 && panNumber!="") 
                            {
                                console.log('Inside pan duplication')
                                $.ajax({
                                    type: 'POST',  // http method
                                    url: '@Url.Action("CheckPanCardDuplicationByDistrictidForCustomerUpdate", "Customer")',
                                    data: { DistrictId: districtId, IncomeTaxPan: panNumber, FormNumber: formNumber },
                                    dataType: "json",
                                    success: function (data, status, xhr) 
                                    {
                                        console.log(data);
                                        console.log(status);
                                        var v = data;
                                        if (status == 'success') 
                                        {

                                            console.log('Test');
                                            console.log(data);
                                            console.log(data.status);
                                            console.log(data.reason);
                                            if (data.status == "0") 
                                            {
                                                console.log('Duplicate PAN No. Used');
                                                localStorage.setItem("DUPLICATEPANUSED", "0");
                                                document.getElementById('IsDuplicatePanNo').value = "0";
                                                document.getElementById("lblPanCardRemarks").style.display = "block";
                                                document.getElementById("PanCardRemarks").style.display = "block";
                                                document.getElementById("PanCardRemarks_error").innerHTML="";
                                            }
                                            else 
                                            {
                                                localStorage.setItem("DUPLICATEPANUSED", "1");
                                                document.getElementById('IsDuplicatePanNo').value = "1";
                                                document.getElementById("lblPanCardRemarks").style.display = "none";
                                                document.getElementById("PanCardRemarks").style.display = "none";
                                                document.getElementById("PanCardRemarks").value = "";
                                                document.getElementById("PanCardRemarks_error").innerHTML="";
                                            }
                                        }
                                        else 
                                        {
                                            document.getElementById("lblPanCardRemarks").style.display = "none";
                                            document.getElementById("PanCardRemarks").style.display = "none";
                                            document.getElementById("PanCardRemarks").value = "";
                                            document.getElementById("PanCardRemarks_error").innerHTML="";
                                        }
                                    },
                                    error: function (xhr, ajaxOptions, thrownError) 
                                    {
                                        document.getElementById("lblPanCardRemarks").style.display = "none";
                                        document.getElementById("PanCardRemarks").style.display = "none";
                                        document.getElementById("PanCardRemarks").value = "";
                                        document.getElementById("PanCardRemarks_error").innerHTML="";
                                    }
                                });
                            }
                            else 
                            {
                                document.getElementById("lblPanCardRemarks").style.display = "none";
                                document.getElementById("PanCardRemarks").style.display = "none";
                                document.getElementById("PanCardRemarks").value = "";
                                document.getElementById("PanCardRemarks_error").innerHTML="";
                            }

                            console.log(OrgName);
                            console.log(correctPANName);
                            console.log(localStorage.getItem("PANNOANDNAMEMATCHING"));
                        }
                        else
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                            document.getElementById("incomeTaxPan_error").className = "error";
                            localStorage.setItem("INVALIDPAN", "0");
                        }
                    },
                    error: function (jqXhr, textStatus, errorMessage)
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        localStorage.setItem("INVALIDPAN", "0");
                    }
                });
            }
            else
            {

                if (districtId != 0 && tbentityid != 10 && panNumber!="") 
                {
                    console.log('Inside pan duplication')
                    $.ajax({
                        type: 'POST',  // http method
                        url: '@Url.Action("CheckPanCardDuplicationByDistrictidForCustomerUpdate", "Customer")',
                        data: { DistrictId: districtId, IncomeTaxPan: panNumber, FormNumber: formNumber },
                        dataType: "json",
                        success: function (data, status, xhr) 
                        {
                            console.log(data);
                            console.log(status);
                            var v = data;
                            if (status == 'success') 
                            {

                                console.log(data);
                                console.log(data.status);
                                console.log(data.reason);
                                if (data.status == "0") 
                                {
                                    console.log('Duplicate PAN No. Used');
                                    localStorage.setItem("DUPLICATEPANUSED", "0");
                                    document.getElementById('IsDuplicatePanNo').value = "0";
                                    document.getElementById("lblPanCardRemarks").style.display = "block";
                                    document.getElementById("PanCardRemarks").style.display = "block";
                                    document.getElementById("PanCardRemarks_error").innerHTML="";
                                }
                                else 
                                {
                                    localStorage.setItem("DUPLICATEPANUSED", "1");
                                    document.getElementById('IsDuplicatePanNo').value = "1";
                                    document.getElementById("lblPanCardRemarks").style.display = "none";
                                    document.getElementById("PanCardRemarks").style.display = "none";
                                    document.getElementById("PanCardRemarks").value = "";
                                    document.getElementById("PanCardRemarks_error").innerHTML="";
                                }
                            }
                            else 
                            {
                                document.getElementById("lblPanCardRemarks").style.display = "none";
                                document.getElementById("PanCardRemarks").style.display = "none";
                                document.getElementById("PanCardRemarks").value = "";
                                document.getElementById("PanCardRemarks_error").innerHTML="";
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) 
                        {
                            document.getElementById("lblPanCardRemarks").style.display = "none";
                            document.getElementById("PanCardRemarks").style.display = "none";
                            document.getElementById("PanCardRemarks").value = "";
                            document.getElementById("PanCardRemarks_error").innerHTML="";
                        }
                    });
                }
                else 
                {
                    document.getElementById("lblPanCardRemarks").style.display = "none";
                    document.getElementById("PanCardRemarks").style.display = "none";
                    document.getElementById("PanCardRemarks").value = "";
                    document.getElementById("PanCardRemarks_error").innerHTML="";
                }

                localStorage.setItem("INVALIDPAN", "1");
                localStorage.setItem("PANNOANDNAMEMATCHING", "1");
            }


        });

    $("#PanCardRemarks").on("blur", function () 
    {
        //debugger;
        if (document.getElementById("PanCardRemarks").value.trim() == "") 
        {
            document.getElementById("PanCardRemarks_error").innerHTML = "PAN Card Remarks field cannot be left blank";
            return (false);
        }
        else 
        {
            document.getElementById("PanCardRemarks_error").innerHTML = "";
        }

    });

function ValidatePAN()
{
    debugger;
    var panno = $('#IncomeTaxPan').val().trim();
    var OrgName = $('#IndividualOrgName').val().trim();
    var customerTbentityid = $("#TBEntityId").val();
    var correctPANName = '';
    console.log('ValidatePAN');
    if (panno == '')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field is required";
        document.getElementById("incomeTaxPan_error").className = "error";
        return (false);
    }
    console.log(panno);
    if (OrgName == '')
    {
        document.getElementById("individualName_error").innerHTML = "Individual/Org. Name is required";
        //alert('Individual/Org. Name is required');
        return (false);
    }

    if ($('#IncomeTaxPan').val().match(pancard))
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
        document.getElementById("incomeTaxPan_error").className = "error text-success";
    }
    else
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        return (false);
    }

     //solo Propritorship 4th Char Pan should be 'P'--> 2
    //Public/Private Ltd Co 4th Char Pan should be 'C' --> 3
    //HUF (Hindu Undivided Family) 4th Char Pan should be 'H'--> 4
    //A stands for Association of Persons (AOP)—(Trust Foundation) 4th Char Pan should be 'A'-->8
     let forthdigitPan = panno.substr(3, 1);
     console.log(forthdigitPan);
    if (customerTbentityid == '2' && forthdigitPan != 'P')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        $('#PANErrorMsg').modal('show');
        return (false);
    }
    else if (customerTbentityid == 3 && forthdigitPan != 'C')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        $('#PANErrorMsg').modal('show');
        return (false);
    }
    else if (customerTbentityid == 4 && forthdigitPan != 'H')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        $('#PANErrorMsg').modal('show');
        return (false);
    }
    else if (customerTbentityid == 8 && forthdigitPan != 'A')
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
        document.getElementById("incomeTaxPan_error").className = "error";
        $('#PANErrorMsg').modal('show');
        return (false);
    }
    else
    {
        document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN Number is valid";
        document.getElementById("incomeTaxPan_error").className = "error text-success";
    }

    var externalPANAPIStatus = "Y";

    externalPANAPIStatus = document.getElementById("ExternalPANAPIStatus").value.trim();

    console.log(externalPANAPIStatus);

    if (externalPANAPIStatus == "Y")
    {

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("PANValidation", "Customer")',
            data: { PANNumber: panno },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                var jsonData = JSON.parse(data);
                if (status == 'success' && jsonData['status-code'] == '101') 
                {

                    console.log(jsonData);
                    correctPANName = jsonData["result"]["name"];

                    document.getElementById("incomeTaxPan_error").innerHTML = "";
                    document.getElementById("incomeTaxPan_error").className = "error text-success";

                    console.log(correctPANName);
                    console.log(OrgName);
                    if (correctPANName.toUpperCase() != OrgName.toUpperCase()) 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "Individual name not match with pan name";
                        document.getElementById("incomeTaxPan_error").className = "error";
                    }
                    else 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "";
                        document.getElementById("incomeTaxPan_error").className = "error text-success";
                    }

                }
                else 
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    console.log(jsonData['status-code']);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN Number";
                console.log(jsonData['status-code']);
                document.getElementById("incomeTaxPan_error").className = "error";
            }
        });
    }
    
}

</script>