@model HPCL.Common.Models.ViewModel.Customer.UpdateCustomerAddress
@using HPCL.Common.Resources;
@{
    ViewData["Title"] = "Update Customer Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 p-4 p-md-4">
        <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="#" class="text_primary">Requests</a> </li>
            <li class="breadcrumb-item font-weight-light">Update Customer Details</li>
        </ul>
         @using (Html.BeginForm("UpdateCustomerAddress", "Customer", FormMethod.Post, new { @enctype = "multipart/form-data" }))
         {
            <div class="w-100">
            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                <div class="border-1 rounded border-grey pb-3">
                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Update Customer Details</p>
                <div class="col-lg-12 col-md-12 col-12 pt-3">
                    <div class="d-flex align-items-center flex-wrap">
                    <div class="col-lg-6 col-12">
                        <div class="d-flex align-items-center flex-wrap mb-0">
                        <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                        <div class="col-md-7 col-12">
                            <div class="custom_select">
                               @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", @id = "CustomerId", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                               @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger", @id = "CustomerIdValErrMsg" })
                            </div>
                        </div>
					    <div class="col-lg-7 col-12">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" onclick="ViewCustomerDetails()" id="btnSearch">@Label.Search</button>
                                        </div>
                                        <div class="px-2">
                                            <button class="btn btn_primary px-4 py-2" type="button" id="btnReset">@Label.Reset</button>
                                        </div>
                                    </div>
                                </div>
						</div>
                    </div>
					</div> 
                    <div class="clearfix"></div>
				</div>
                <div class="clearfix"></div>
                </div>
            </div>
			<div id="dvNoData" style="background-color: #fee4e4;display:none;text-align:center;font-weight:bold">
			</div>
			<div id="dvAddress" style="display:none">

			<div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                <div class="border-1 rounded border-grey pb-0">
                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Communication Address</p>
                <div class="col-lg-12 col-md-12 col-12 pt-3">
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                       <span class="error" id="comm_address1_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									    @Html.TextBoxFor(m => m.CommunicationAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        <span class="error" id="comm_address2_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 3 </label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationAddress3, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                       <span class="error" id="comm_address3_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Location</label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.CommunicationLocation, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                      <span class="error" id="comm_location_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                       <span class="error" id="comm_city_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Pincode <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.CommunicationPinCode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                      <span class="error" id="comm_pincode_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.DropDownListFor(m => m.CommunicationStateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control stateType" })
									</div>
									<span class="error" id="comm_states_error"></span>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.DropDownListFor(m => m.CommunicationDistrictId, new SelectList(Model.CommunicationDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
									</div>
									<span class="error" id="comm_district_error"></span>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
								<div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.CommunicationDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationDialCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.CommunicationPhonePart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationPhonePart2_error"></span>
                                        </div>
                                    </div>

                                </div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Mobile <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationMobileNo, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                       <div class="error" id="comm_mobileNumber_error"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Fax </label>
								 <div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.CommunicationFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationFaxCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.CommunicationFaxPart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationFaxPart2_error"></span>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                       <div class="error" id="comm_email_error"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Income Tax PAN <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.IncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off" })
                                      <span class="error" id="incomeTaxPan_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
                <div class="clearfix"></div>
                </div>
            </div>
				
			<div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                <div class="border-1 rounded border-grey pb-0">
                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Permanent/Registered Office Address</p>
                <div class="col-lg-12 col-md-12 col-12 pt-3">
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                      <div class="error" id="perma_address1_error"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                      <div class="error" id="perma_address2_error"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 3 </label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentAddress3, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                      <div class="error" id="perma_address3_error"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Location</label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentLocation, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                      <span class="error" id="perma_location_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.PermanentCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                       <span class="error" id="perma_city_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Pincode <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.PermanentPincode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                       <span class="error" id="perma_pincode_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.DropDownListFor(m => m.PerOrRegAddressStateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
									</div>
									<span class="error" id="perma_state_error"></span>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.DropDownListFor(m => m.PermanentDistrictId, new SelectList(Model.PerOrRegAddressDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
									</div>
									<span class="error" id="perma_district_error"></span>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
								<div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.PerOrRegAddressDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="PerOrRegAddressDialCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.PerOrRegAddressPhoneNumber, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="perma_officePhone_error"></span>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Fax </label>
								<div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.PermanentFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="PermanentFaxCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.PermanentFaxPhoneNumber, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="PermanentFaxPhoneNumber_error"></span>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
					</div>
				</div>
                <div class="clearfix"></div>
				</div>
				<div class="d-flex align-items-center justify-content-center mt-3">
					<div class="px-2">
						<button class="btn btn_primary" type="submit" id="btnSubmit" onclick="return SubmitValidations()">Update</button>
					</div>
					<div class="px-2">
						<button class="btn btn_primary" type="button" onclick="ViewCustomerDetails()">Reset</button>
					</div>
					<div class="px-2">
						<button class="btn btn_primary" type="button" style="display:none">Skip</button>
					</div>
				</div>
            </div>
			</div>

			</div>
        }
        <div class="clearfix"></div>
        </div>
</div>
<div class="clearfix"></div>

<script>
	$(document).ready(function () 
	{

    });

    $('select').SumoSelect({
        placeholder: '--Select--',
        search: true,
        searchText: 'Enter Text here.'
    }); 

    $("#btnReset").click(function () {
        location.reload();
    });

    $('#CustomerId').keypress(function (e) {
        if (e.keyCode == 13) {  // detect the enter key
            $('#btnSearch').click();
        }
    });

	$("#CustomerId").on("blur", function ()
    {
        if ($("#CustomerId").val().trim() == "")
        {
            $('#CustomerIdValErrMsg').html("Customer ID should not be Empty");
            return false;
        }
        else if (!$("#CustomerId").val().match(mappedCustomerId))
        {
            $("#CustomerIdValErrMsg").attr("style", "display:block");
            $("#CustomerIdValErrMsg").html("start with 2 and contains 10 digits");
            return false;
        }
        else
        {
           $('#CustomerIdValErrMsg').html("");
        }

    })

  function ViewCustomerDetails() 
  {
        debugger;
		if ($("#CustomerId").val().trim() == "")
        {
            $('#CustomerIdValErrMsg').html("Customer ID should not be Empty");
            return false;
        }
        else if (!$("#CustomerId").val().match(mappedCustomerId))
        {
            $("#CustomerIdValErrMsg").attr("style", "display:block");
            $("#CustomerIdValErrMsg").html("start with 2 and contains 10 digits");
            return false;
        }
        else
        {
           $('#CustomerIdValErrMsg').html("");
        }

        $.ajax({
            url: "@Url.Action("GetCustomerAddress", "Customer")",
            type: "POST",
            dataType: "JSON",
            data: { CustomerId: $("#CustomerId").val() },
            success: function (res) 
			{
                console.log("customer", res.customer);
			               
				if(res.customer.communicationAddress1!="")
				{
				  document.getElementById("dvAddress").style.display="block";
				  document.getElementById("dvNoData").style.display = "none";
				  document.getElementById("dvNoData").innerHTML="";
				  $("#CustomerId").prop('readonly', true);
				}
				else
				{
					document.getElementById("dvAddress").style.display = "none";
					document.getElementById("dvNoData").style.display = "block";
					document.getElementById("dvNoData").innerHTML= res.customer.message;
					$("#CustomerId").prop('readonly', false);
				}
                //if(res.customer.typeOfBusinessEntityId==10)
                //{
                //     document.getElementById("lblPanCardRemarks").style.display = "none";
                //     document.getElementById("PanCardRemarks").style.display = "none";
                //     $('#lblPanText').text('');
                //     $('#lblPanText').append('Govt. Dept. Identification Details<sup class="text-danger">*</sup>');
                //}
                //else
                //{
                //    document.getElementById("lblPanCardRemarks").style.display = "block";
                //    document.getElementById("PanCardRemarks").style.display = "block";
                //    $('#lblPanText').text('');
                //    $('#lblPanText').append('Income Tax PAN<sup class="text-danger">*</sup>');
                //}
				               
                $('#IncomeTaxPan').val(res.customer.incomeTaxPan);
                //$('#PanCardRemarks').val(res.customer.panCardRemarks);

                //Address Tab
                $('#CommunicationAddress1').val(res.customer.communicationAddress1);
                $('#CommunicationAddress2').val(res.customer.communicationAddress2);
                $('#CommunicationAddress3').val(res.customer.communicationAddress3);
                $('#CommunicationCityName').val(res.customer.communicationCityName);
                $('#CommunicationPinCode').val(res.customer.communicationPinCode);

				$('#CommunicationStateID')[0].sumo.selectItem(res.customer.casid);
				$('#PerOrRegAddressStateID')[0].sumo.selectItem(res.customer.pasid);
				              

                $('#CommunicationDialCode').val(res.customer.communicationDialCode);
                $('#CommunicationPhonePart2').val(res.customer.communicationPhonePart2);
                $('#CommunicationFaxCode').val(res.customer.communicationFaxCode);
                $('#CommunicationFaxPart2').val(res.customer.communicationFaxPart2);
                $('#CommunicationMobileNo').val(res.customer.communicationMobileNo);
                $('#CommunicationEmailid').val(res.customer.communicationEmailid);


                $('#PermanentAddress1').val(res.customer.permanentAddress1);
                $('#PermanentAddress2').val(res.customer.permanentAddress2);
                $('#PermanentAddress3').val(res.customer.permanentAddress3);
                $('#PermanentCityName').val(res.customer.permanentCityName);
                $('#PermanentPincode').val(res.customer.permanentPincode);
                $('#PermanentLocation').val(res.customer.permanentLocation);

                //var pDistrict = $('<option value="' + res.customer.permanentDistrictName + '">' + res.customer.permanentDistrictName + '</option>');
                //$('#PerOrRegAddressDistrict').append(pDistrict);
                //$("#PerOrRegAddressDistrict")[0].sumo.reload();

                $('#PerOrRegAddressDialCode').val(res.customer.perOrRegAddressDialCode);
                $('#PerOrRegAddressPhoneNumber').val(res.customer.perOrRegAddressPhoneNumber);
                $('#PermanentFaxCode').val(res.customer.permanentFaxCode);
                $('#PermanentFaxPhoneNumber').val(res.customer.permanentFaxPhoneNumber);

				 $.ajax({
					type: 'POST',  // http method
					url: '@Url.Action("GetDistrictDetails", "Customer")',
					data: { Stateid: res.customer.casid },  // data to submit
					dataType: "json",
					success: function (data, status, xhr) {
						var v = data;
						if (status == 'success') 
						{
							$("#CommunicationDistrictId").html("");
							$.each(data, function (i, data) { // bind the dropdown list using json result
								$('<option>',
									{
										value: data.districtID,
										text: data.districtName
									}).html(data.districtName).appendTo("#CommunicationDistrictId");
							});
							$("#CommunicationDistrictId")[0].sumo.reload();

							//setTimeout(function(){
						   //$('#CommunicationDistrictId')[0].sumo.selectItem($("#CommunicationDistrictId").val());
						   //},500);
						}
						else {
							console.log(v);
						}
					},
					error: function (jqXhr, textStatus, errorMessage) {
						alert("Error Populating District Data");
					}
				});


				 $.ajax({
					type: 'POST',  // http method
					url: '@Url.Action("GetDistrictDetails", "Customer")',
					data: { Stateid: res.customer.pasid },  // data to submit
					dataType: "json",
					success: function (data, status, xhr) {
						var v = data;
						if (status == 'success') 
						{
							$("#PermanentDistrictId").html("");
							$.each(data, function (i, data) { // bind the dropdown list using json result
								$('<option>',
									{
										value: data.districtID,
										text: data.districtName
									}).html(data.districtName).appendTo("#PermanentDistrictId");
							});
							$("#PermanentDistrictId")[0].sumo.reload();

							//setTimeout(function(){
						   //$('#PermanentDistrictId')[0].sumo.selectItem($("#PermanentDistrictId").val());
						   //},500);
						}
						else {
							console.log(v);
						}
					},
					error: function (jqXhr, textStatus, errorMessage) {
						alert("Error Populating District Data");
					}
				});


                },
                error: function (ex) 
				{
                    alert('Failed' + ex);
					document.getElementById("dvAddress").style.display = "none";
					document.getElementById("dvNoData").style.display = "block";
					document.getElementById("dvNoData").innerHTML= res.customer.message;
                }
        });
        clearValidations();
    };

    function clearValidations()
    {
        document.getElementById("comm_address1_error").innerHTML="";
        document.getElementById("comm_address2_error").innerHTML="";
        document.getElementById("comm_address3_error").innerHTML="";
        document.getElementById("comm_location_error").innerHTML="";
        document.getElementById("comm_city_error").innerHTML="";
        document.getElementById("comm_pincode_error").innerHTML="";
        document.getElementById("comm_states_error").innerHTML="";
        document.getElementById("comm_district_error").innerHTML="";
        document.getElementById("CommunicationDialCode_error").innerHTML="";
        document.getElementById("CommunicationPhonePart2_error").innerHTML="";
        document.getElementById("comm_mobileNumber_error").innerHTML="";
        document.getElementById("CommunicationFaxCode_error").innerHTML="";
        document.getElementById("CommunicationFaxPart2_error").innerHTML="";
        document.getElementById("comm_email_error").innerHTML="";
        document.getElementById("incomeTaxPan_error").innerHTML="";
        document.getElementById("perma_address1_error").innerHTML="";
        document.getElementById("perma_address2_error").innerHTML="";
        document.getElementById("perma_address3_error").innerHTML="";
        document.getElementById("perma_location_error").innerHTML="";
        document.getElementById("perma_city_error").innerHTML="";
        document.getElementById("perma_pincode_error").innerHTML="";
        document.getElementById("perma_state_error").innerHTML="";
        document.getElementById("perma_district_error").innerHTML="";
        document.getElementById("PerOrRegAddressDialCode_error").innerHTML="";
        document.getElementById("perma_officePhone_error").innerHTML="";
        document.getElementById("PermanentFaxCode_error").innerHTML="";
        document.getElementById("PermanentFaxPhoneNumber_error").innerHTML="";

    }

	   $("#CommunicationAddress1").on("blur", function () {
        //debugger;
        var Address = document.getElementById("CommunicationAddress1").value.trim();
        if (Address == "") {
            document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }

        }
    });

    $("#CommunicationAddress2").on("blur", function () {
        //debugger;
        var Address = document.getElementById("CommunicationAddress2").value.trim();
        if (Address == "") {
            document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationAddress2").value.trim())) {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address2_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationAddress2").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address2_error").innerHTML = "";
            }
        }
    });

    $("#CommunicationAddress3").on("blur", function () {
        //debugger;
        if (document.getElementById("CommunicationAddress3").value.trim() != "") 
        {
            if (!isNaN(document.getElementById("CommunicationAddress3").value.trim())) {
                document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address3_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationAddress3").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address3_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("comm_address3_error").innerHTML = "";
        }
    });

    $("#CommunicationCityName").on("blur", function () {
        //debugger;
        var city = document.getElementById("CommunicationCityName").value.trim();
        if (city == "") {
            document.getElementById("comm_city_error").innerHTML = "City field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationCityName").value.trim())) {
                document.getElementById("comm_city_error").innerHTML = "Invalid City";
                return false;
            }
            else {
                document.getElementById("comm_city_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationCityName").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_city_error").innerHTML = "Invalid City";
                return false;
            }
            else {
                document.getElementById("comm_city_error").innerHTML = "";
            }
        }
    });

    $("#CommunicationPinCode").on("blur", function () 
    {
        //debugger;
        if (document.getElementById("CommunicationPinCode").value == "") 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Pin code field cannot be left blank";
            return (false);
        }
        else if (document.getElementById("CommunicationPinCode").value.substring(0, 1) == "0") 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            return false;
        }
        else if (document.getElementById("CommunicationPinCode").value.length < 6) 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            return false;
        }
        else if (!document.getElementById("CommunicationPinCode").value.match(pincode)) 
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            return false;
        }
        else
        {
            document.getElementById("comm_pincode_error").innerHTML = "";
        }

    });

    $("#CommunicationDialCode").on("blur", function () 
    {
        //debugger;
        var stdCode = document.getElementById("CommunicationDialCode").value.trim();
        if (stdCode != "") 
        {

            if (stdCode.length < 2 || stdCode.length > 4) 
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else
            {
                if (!stdCode.match(number))
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else
                {
                    document.getElementById("CommunicationDialCode_error").innerHTML = "";
                }
            }
        }
        else 
        {
            document.getElementById("CommunicationDialCode_error").innerHTML = "";
        }

  });

  $("#CommunicationPhonePart2").on("blur", function () 
   {
        //debugger;
        var phno = document.getElementById("CommunicationPhonePart2").value.trim();
        if (phno != "") 
        {
            if (phno.charAt(0) == "0") 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                return false;
            }
            else if (phno.length < 6 || phno.length > 8) 
            {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                return false;
            }
            else
            {
                if (!phno.match(number))
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else 
                {
                    document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
                }
            }

        }
        else 
        {
            document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        }

  });

  $("#CommunicationFaxCode").on("blur", function () 
   {
        //debugger;
    var faxCode = document.getElementById("CommunicationFaxCode").value.trim();
    if (faxCode != "") {
        if (faxCode.length < 2 || faxCode.length > 4) {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
            return false;
        }
        else
        {
            if (!faxCode.match(number))
            {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("CommunicationFaxCode_error").innerHTML = "";
    }

  });

  $("#CommunicationFaxPart2").on("blur", function () 
  {
        //debugger;
    var faxphno = document.getElementById("CommunicationFaxPart2").value.trim();
    if (faxphno != "") {
        if (faxphno.charAt(0) == "0") {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
            return false;
        }
        else if (faxphno.length < 6 || faxphno.length > 8) {
            document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
            return false;
        }
        else
        {
            if (!faxphno.match(number))
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else
            {
                document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
            }
        }

    }
    else
    {
        document.getElementById("CommunicationFaxPart2_error").innerHTML = "";
    }

  });

   $("#CommunicationMobileNo").on("blur", function () 
   {
        //debugger;
        var communicationMobile = document.getElementById("CommunicationMobileNo").value;
        if (communicationMobile == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationMobileNo").value.substring(0, 1) == "0") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            return false;
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationMobileNo").value.length < 10) {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            return false;
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationMobileNo").value.match(phoneno)) {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }
        else {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            return false;
        }


    });

    $("#CommunicationEmailid").on("blur", function () {
        //debugger;
        var communicationEmail = document.getElementById("CommunicationEmailid").value.trim();
        if (communicationEmail == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "";
        }

        if (communicationEmail.match(email)) {
            document.getElementById("comm_email_error").innerHTML = "";
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            return (false);
        }

    });

    $("#PermanentAddress1").on("blur", function () {
        //debugger;
        var Address = document.getElementById("PermanentAddress1").value.trim();
        if (Address == "") {
            document.getElementById("perma_address1_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("PermanentAddress1").value.trim())) {
                document.getElementById("perma_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("perma_address1_error").innerHTML = "";
            }

            if (!document.getElementById("PermanentAddress1").value.match(atLeastOneAlphabet)) {
                document.getElementById("perma_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("perma_address1_error").innerHTML = "";
            }

        }
    });

    $("#PermanentAddress2").on("blur", function () {
        //debugger;
        var Address = document.getElementById("PermanentAddress2").value.trim();
        if (Address == "") {
            document.getElementById("perma_address2_error").innerHTML = "Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("PermanentAddress2").value.trim())) {
                document.getElementById("perma_address2_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("perma_address2_error").innerHTML = "";
            }

            if (!document.getElementById("PermanentAddress2").value.match(atLeastOneAlphabet)) {
                document.getElementById("perma_address2_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("perma_address2_error").innerHTML = "";
            }
        }
    });

    $("#PermanentAddress3").on("blur", function () {
        //debugger;
        if (document.getElementById("PermanentAddress3").value.trim() != "") {
            if (!isNaN(document.getElementById("PermanentAddress3").value.trim())) {
                document.getElementById("perma_address3_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("perma_address3_error").innerHTML = "";
            }

            if (!document.getElementById("PermanentAddress3").value.match(atLeastOneAlphabet)) {
                document.getElementById("perma_address3_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("perma_address3_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("perma_address3_error").innerHTML = "";
        }

    });

    $("#PermanentCityName").on("blur", function () {
        //debugger;
        var city = document.getElementById("PermanentCityName").value.trim();
        if (city == "") {
            document.getElementById("perma_city_error").innerHTML = "City field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("PermanentCityName").value.trim())) {
                document.getElementById("perma_city_error").innerHTML = "Invalid City";
                return false;
            }
            else {
                document.getElementById("perma_city_error").innerHTML = "";
            }

            if (!document.getElementById("PermanentCityName").value.match(atLeastOneAlphabet)) {
                document.getElementById("perma_city_error").innerHTML = "Invalid City";
                return false;
            }
            else {
                document.getElementById("perma_city_error").innerHTML = "";
            }
        }
    });

    $("#PermanentPincode").on("blur", function () 
    {
        //debugger;
        if (document.getElementById("PermanentPincode").value == "") 
        {
            document.getElementById("perma_pincode_error").innerHTML = "Pin code field cannot be left blank";
            return (false);
        }
        else if (document.getElementById("PermanentPincode").value.substring(0, 1) == "0") 
        {
            document.getElementById("perma_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            return false;
        }
        else if (document.getElementById("PermanentPincode").value.length < 6) 
        {
            document.getElementById("perma_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            return false;
        }
        else if (!document.getElementById("PermanentPincode").value.match(pincode)) 
        {
            document.getElementById("perma_pincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            return false;
        }
        else
        {
            document.getElementById("perma_pincode_error").innerHTML = "";
        }

    });

    $("#CommunicationStateID").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#comm_states_error").html("");
        }

        $("#CommunicationDistrictId").html("");


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetDistrictDetails", "Customer")',
            data: { Stateid: id },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                var v = data;
                if (status == 'success') {
                    $.each(data, function (i, data) { // bind the dropdown list using json result
                        $('<option>',
                            {
                                value: data.districtID,
                                text: data.districtName
                            }).html(data.districtName).appendTo("#CommunicationDistrictId");
                    });
                    $("#CommunicationDistrictId")[0].sumo.reload();
                }
                else {
                    console.log(v);
                }
            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating District Data");
            }
        });

    });

    $("#PerOrRegAddressStateID").change(function () {
            var id = this.value;
         if (id != 0) {
             $("#perma_state_error").html("");
            }

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetDistrictDetails", "Customer")',
                data: { Stateid: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;

                    if (status == 'success') {
                        $("#PermanentDistrictId").html("");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            $('<option>',
                                {
                                    value: data.districtID,
                                    text: data.districtName
                                }).html(data.districtName).appendTo("#PermanentDistrictId");
                        });
                        $("#PermanentDistrictId")[0].sumo.reload();

                    }
                    else {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating District Data");
                }

           });

    });

    $("#PermanentDistrictId").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#perma_district_error").html("");
        }
    });

    $("#CommunicationDistrictId").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#comm_district_error").html("");
        }
    });

    function SubmitValidations() 
    {
    debugger;
    var ret = true;
    var Address1=document.getElementById("CommunicationAddress1").value.trim();
    if (Address1 == "") 
    {
        document.getElementById("comm_address1_error").innerHTML = "Address field cannot be left blank";
        ret=false;
    }
    else 
    {
        if (!Address1.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
            ret = false;
        }
        else 
        {
            document.getElementById("comm_address1_error").innerHTML = "";
        }
    }

    var Address2=document.getElementById("CommunicationAddress2").value.trim();
    if (Address2 == "") 
    {
        document.getElementById("comm_address2_error").innerHTML = "Address field cannot be left blank";
        ret = false;
    }
    else 
    {
        if (!Address2.match(atLeastOneAlphabet)) 
        {
            document.getElementById("comm_address2_error").innerHTML = "Invalid Address";
            ret = false;
        }
        else 
        {
            document.getElementById("comm_address2_error").innerHTML = "";
        }
    }

    var Address3=document.getElementById("CommunicationAddress3").value.trim();
    if (Address3 != "")
    {
        if (!Address3.match(atLeastOneAlphabet))
        {
            document.getElementById("comm_address3_error").innerHTML = "Invalid Address";
            ret = false;
        }
        else
        {
            document.getElementById("comm_address3_error").innerHTML = "";
        }
    }
    else
    {
        document.getElementById("comm_address3_error").innerHTML = "";
    }

    if (document.getElementById("CommunicationLocation").value.trim() != "")
    {
        if (!document.getElementById("CommunicationLocation").value.match(atLeastOneAlphabet))
        {
            document.getElementById("comm_location_error").innerHTML = "Invalid Location";
            ret = false;
        }
        else
        {
            document.getElementById("comm_location_error").innerHTML = "";
        }
    }
    else
    {
        document.getElementById("comm_location_error").innerHTML = "";
    }

    if (document.applicationForm.CommunicationCity.value.trim() == "") {
        document.getElementById("comm_city_error").innerHTML = "City field cannot be left blank";
        ret = false;
    }
    else {
        if (!document.getElementById("CommunicationCity").value.match(atLeastOneAlphabet)) {
            document.getElementById("comm_city_error").innerHTML = "Invalid City";
            ret = false;
        }
        else {
            document.getElementById("comm_city_error").innerHTML = "";
        }
    }

    if (document.applicationForm.CommunicationPinCode.value.trim() == "") {
        document.getElementById("comm_pincode_error").innerHTML = "Pin code field cannot be left blank";
        ret = false;
    }
    else {
        if (document.applicationForm.CommunicationPinCode.value.substring(0, 1) == "0") {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            ret = false;
        }
        else if (document.applicationForm.CommunicationPinCode.value.length < 6)
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            ret = false;
        }
        else if (!document.applicationForm.CommunicationPinCode.value.match(pincode))
        {
            document.getElementById("comm_pincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            ret = false;
        }
        else
        {
            document.getElementById("comm_pincode_error").innerHTML = "";
        }
    }

    if (document.applicationForm.CommunicationStateID.value == "0" || document.applicationForm.CommunicationStateID.value == "") {
        document.getElementById("comm_states_error").innerHTML = "State field cannot be left blank";
        ret = false;
    }
    else {
        document.getElementById("comm_states_error").innerHTML = "";
    }
    console.log('Before District');
    if (document.applicationForm.CommunicationDistrictId.value == "0" || document.applicationForm.CommunicationDistrictId.value == "") {
        document.getElementById("comm_district_error").innerHTML = "District field cannot be left blank";
        ret = false;
    }
    else {
        document.getElementById("comm_district_error").innerHTML = "";
    }
    console.log('After District');

    //if (document.applicationForm.CommunicationDialCode.value == "") {
    //    document.getElementById("comm_officePhone_error").innerHTML = "Dial Code is required";
    //    return false;
    //}

    var stdCode = document.applicationForm.CommunicationDialCode.value.trim();
    if (stdCode != "") {

        if (stdCode.length < 2 || stdCode.length > 4) {
            document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
            ret = false;
        }
        else
        {
            if (!stdCode.match(number))
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else
            {
                document.getElementById("CommunicationDialCode_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("CommunicationDialCode_error").innerHTML = "";
    }

    var phno = document.applicationForm.CommunicationPhoneNo.value.trim();
    if (phno != "") {
        if (phno.charAt(0) == "0") {
            document.getElementById("comm_officePhone_error").innerHTML = "Invalid Phone Number";
            ret = false;
        }
        else if (phno.length < 6 || phno.length > 8) {
            document.getElementById("comm_officePhone_error").innerHTML = "Invalid Phone Number";
            ret = false;
        }
        else
        {
            if (!phno.match(number))
            {
                document.getElementById("comm_officePhone_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else {
                document.getElementById("comm_officePhone_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("comm_officePhone_error").innerHTML = "";
    }


    var faxCode = document.applicationForm.CommunicationFaxCode.value.trim();
    if (faxCode != "") {
        if (faxCode.length < 2 || faxCode.length > 4) {
            document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
            ret = false;
        }
        else
        {
            if (!faxCode.match(number))
            {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else {
                document.getElementById("CommunicationFaxCode_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("CommunicationFaxCode_error").innerHTML = "";
    }

    var faxphno = document.applicationForm.CommunicationFax.value.trim();
    if (faxphno != "") {
        if (faxphno.charAt(0) == "0") {
            document.getElementById("CommunicationFax_error").innerHTML = "Invalid Fax Number";
            ret = false;
        }
        else if (faxphno.length < 6 || faxphno.length > 8) {
            document.getElementById("CommunicationFax_error").innerHTML = "Invalid Fax Number";
            ret = false;
        }
        else
        {
            if (!faxphno.match(number))
            {
                document.getElementById("CommunicationFax_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else
            {
                document.getElementById("CommunicationFax_error").innerHTML = "";
            }
        }

    }
    else
    {
        document.getElementById("CommunicationFax_error").innerHTML = "";
    }

    console.log('Before CommunicationMobileNumber check');
    if (document.applicationForm.CommunicationMobileNumber.value.trim() == "") {
        document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
        ret = false;

    }
    else
    {

        if (document.getElementById("CommunicationMobileNumber").value.substring(0, 1) == "0") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            ret = false;
        }
        else if (document.getElementById("CommunicationMobileNumber").value.length < 10) {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            ret = false;
        }
        else if (!document.getElementById("CommunicationMobileNumber").value.match(phoneno))
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number. Min-Max 10 digits";
            ret = false;
        }
        else
        {
            document.getElementById("comm_mobileNumber_error").innerHTML = "";
        }
    }
    console.log('After CommunicationMobileNumber check');

    if (document.applicationForm.CommunicationEmail.value.trim() == "") {
        document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
        ret = false;
    }
    else
    {
        if (!document.applicationForm.CommunicationEmail.value.match(email))
        {
            document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            ret = false;
        }
        else
        {
            document.getElementById("comm_email_error").innerHTML = "";
        }
    }


    if (document.getElementById("PerOrRegAddress1").value.trim() == "") {
        document.getElementById("perma_address1_error").innerHTML = "Address field cannot be left blank";
        ret = false;
    }
    else {
        if (!document.getElementById("PerOrRegAddress1").value.match(atLeastOneAlphabet)) {
            document.getElementById("perma_address1_error").innerHTML = "Invalid Address";
            ret = false;
        }
        else {
            document.getElementById("perma_address1_error").innerHTML = "";
        }
    }

    if (document.getElementById("PerOrRegAddress2").value.trim() == "") {
        document.getElementById("perma_address2_error").innerHTML = "Address field cannot be left blank";
        ret = false;
    }
    else {
        if (!document.getElementById("PerOrRegAddress2").value.match(atLeastOneAlphabet)) {
            document.getElementById("perma_address2_error").innerHTML = "Invalid Address";
            ret = false;
        }
        else {
            document.getElementById("perma_address2_error").innerHTML = "";
        }
    }

    if (document.getElementById("PerOrRegAddress3").value.trim() != "") {
        if (!document.getElementById("PerOrRegAddress3").value.match(atLeastOneAlphabet)) {
            document.getElementById("perma_address3_error").innerHTML = "Invalid Address";
            ret = false;
        }
        else {
            document.getElementById("perma_address3_error").innerHTML = "";
        }
    }
    else {
        document.getElementById("perma_address3_error").innerHTML = "";
    }

    if (document.getElementById("PerOrRegAddressLocation").value.trim() != "") {
        if (!document.getElementById("PerOrRegAddressLocation").value.match(atLeastOneAlphabet)) {
            document.getElementById("perma_location_error").innerHTML = "Invalid Location";
            ret = false;
        }
        else {
            document.getElementById("perma_location_error").innerHTML = "";
        }
    }
    else {
        document.getElementById("perma_location_error").innerHTML = "";
    }

    if (document.getElementById("PerOrRegAddressCity").value.trim() == "") {
        document.getElementById("perma_city_error").innerHTML = "City field cannot be left blank";
        ret = false;
    }
    else {
        if (!document.getElementById("PerOrRegAddressCity").value.match(atLeastOneAlphabet)) {
            document.getElementById("perma_city_error").innerHTML = "Invalid City";
            ret = false;
        }
        else {
            document.getElementById("perma_city_error").innerHTML = "";
        }
    }


    if (document.getElementById("PerOrRegAddressPinCode").value.trim() == "") {
        document.getElementById("perma_pincode_error").innerHTML = "Pin code field cannot be left blank";
        ret = false;
    }
    else
    {
        if (document.getElementById("PerOrRegAddressPinCode").value.substring(0, 1) == "0") {
            document.getElementById("perma_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            ret = false;
        }
        else if (document.getElementById("PerOrRegAddressPinCode").value.length < 6) {
            document.getElementById("perma_pincode_error").innerHTML = "Invalid Pin code. Min-Max 6 digits";
            ret = false;
        }
        else if (!document.getElementById("PerOrRegAddressPinCode").value.match(pincode))
        {
            document.getElementById("perma_pincode_error").innerHTML = "Invalid Pin Code. Min-Max 6 digits";
            ret = false;
        }
        else
        {
            document.getElementById("perma_pincode_error").innerHTML = "";
        }
    }

    if (document.getElementById("CommunicationDistrictId").value == "0" || document.getElementById("CommunicationDistrictId").value == "-1") {
        document.getElementById("comm_district_error").innerHTML = "District field cannot be left blank";
        ret = false;
    }
    else {
        document.getElementById("comm_district_error").innerHTML = "";
    }


    if (document.getElementById("PerOrRegAddressStateID").value == "0") {
        document.getElementById("perma_state_error").innerHTML = "State field cannot be left blank";
        ret = false;
    }
    else {
        document.getElementById("perma_state_error").innerHTML = "";
    }


    if (document.getElementById("PermanentDistrictId").value == "-1" || document.getElementById("PermanentDistrictId").value == "0") {
        document.getElementById("perma_district_error").innerHTML = "District field cannot be left blank";
        ret = false;
    }
    else {
        document.getElementById("perma_district_error").innerHTML = "";
    }


    var stdCode = document.getElementById("PerOrRegAddressDialCode").value.trim();
    if (stdCode != "") {

        if (stdCode.length < 2 || stdCode.length > 4) {
            document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
            ret = false;
        }
        else {
            if (!stdCode.match(number)) {
                document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else {
                document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
            }
        }
    }
    else {
        document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
    }

    var phno = document.getElementById("PerOrRegAddressPhoneNumber").value.trim();
    if (phno != "") {
        if (phno.charAt(0) == "0") {
            document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
            ret = false;
        }
        else if (phno.length < 6 || phno.length > 8) {
            document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
            ret = false;
        }
        else {
            if (!phno.match(number)) {
                document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                ret = false;
            }
            else {
                document.getElementById("perma_officePhone_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("perma_officePhone_error").innerHTML = "";
    }

    var faxCode = document.getElementById("PermanentFaxCode").value.trim();
    if (faxCode != "") {
        if (faxCode.length < 2 || faxCode.length > 4) {
            document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
            ret = false;
        }
        else {
            if (!faxCode.match(number)) {
                document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
                ret = false;
            }
            else {
                document.getElementById("PermanentFaxCode_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("PermanentFaxCode_error").innerHTML = "";
    }

    var faxphno = document.getElementById("PermanentFax").value.trim();
    if (faxphno != "") {
        if (faxphno.charAt(0) == "0") {
            document.getElementById("perma_faxNumber_error").innerHTML = "Invalid Fax Number";
            ret = false;
        }
        else if (faxphno.length < 6 || faxphno.length > 8) {
            document.getElementById("perma_faxNumber_error").innerHTML = "Invalid Fax Number";
            ret = false;
        }
        else {
            if (!faxphno.match(number)) {
                document.getElementById("perma_faxNumber_error").innerHTML = "Invalid Fax Number";
                ret = false;
            }
            else {
                document.getElementById("perma_faxNumber_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("perma_faxNumber_error").innerHTML = "";
    }


    if (ret == false)
        return ret;

    var TypeofBusinessEntityId = document.applicationForm.CustomerTbentityID.value;

    if (TypeofBusinessEntityId != 10)
    {
        if (document.getElementById("IsDuplicatePanNo").value == "0")
        {
            if (document.getElementById("AllowPanDuplication").value != "Y")
            {
                $("#panvalidation").modal("show");
                ret = false;
            }
        }
        else
        {
            document.getElementById("PanCardRemarks").value = "";
            document.getElementById("lblPanCardRemarks").style.display = "none";
            document.getElementById("PanCardRemarks").style.display = "none";
        }
    }

    if (ret == false)
        return ret;

    document.getElementById("officialDetails-tab").click();
    document.getElementById("officialDetails-tab").classList.remove("disable");
    localStorage.setItem("keyOfficial", true);
    localStorage.removeItem("showregAddress");
    document.getElementById("basicInfo-tab").classList.add("disable");
    document.getElementById("address-tab").classList.add("disable");

    return ret;
}

$("#CommunicationLocation").on("blur", function () 
{
        //debugger;
        if (document.getElementById("CommunicationLocation").value.trim() != "") 
        {
            if (!isNaN(document.getElementById("CommunicationLocation").value.trim())) 
            {
                document.getElementById("comm_location_error").innerHTML = "Invalid Location";
                return false;
            }
            else if (!document.getElementById("CommunicationLocation").value.match(atLeastOneAlphabet)) 
            {
                document.getElementById("comm_location_error").innerHTML = "Invalid Location";
                return false;
            }
            else 
            {
                document.getElementById("comm_location_error").innerHTML = "";
            }
        }
        else {
            document.getElementById("comm_location_error").innerHTML = "";
        }
 });

$("#PermanentLocation").on("blur", function () 
{
        //debugger;
        if (document.getElementById("PermanentLocation").value.trim() != "") 
        {
            if (!isNaN(document.getElementById("PermanentLocation").value.trim())) 
            {
                document.getElementById("perma_location_error").innerHTML = "Invalid Location";
                return false;
            }
            else if (!document.getElementById("PermanentLocation").value.match(atLeastOneAlphabet)) 
            {
                document.getElementById("perma_location_error").innerHTML = "Invalid Location";
                return false;
            }
            else 
            {
                document.getElementById("perma_location_error").innerHTML = "";
            }
        }
        else {
            document.getElementById("perma_location_error").innerHTML = "";
        }
 });

 $("#PerOrRegAddressDialCode").on("blur", function () 
    {
        //debugger;
        var stdCode = document.getElementById("PerOrRegAddressDialCode").value.trim();
        if (stdCode != "") 
        {

            if (stdCode.length < 2 || stdCode.length > 4) 
            {
                document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else
            {
                if (!stdCode.match(number))
                {
                    document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "Invalid Code";
                    return false;
                }
                else
                {
                    document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
                }
            }
        }
        else 
        {
            document.getElementById("PerOrRegAddressDialCode_error").innerHTML = "";
        }

  });

  $("#PerOrRegAddressPhoneNumber").on("blur", function () 
   {
        //debugger;
        var phno = document.getElementById("PerOrRegAddressPhoneNumber").value.trim();
        if (phno != "") 
        {
            if (phno.charAt(0) == "0") 
            {
                document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                return false;
            }
            else if (phno.length < 6 || phno.length > 8) 
            {
                document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                return false;
            }
            else
            {
                if (!phno.match(number))
                {
                    document.getElementById("perma_officePhone_error").innerHTML = "Invalid Phone Number";
                    return false;
                }
                else 
                {
                    document.getElementById("perma_officePhone_error").innerHTML = "";
                }
            }

        }
        else 
        {
            document.getElementById("perma_officePhone_error").innerHTML = "";
        }

  });

  $("#PermanentFaxCode").on("blur", function () 
   {
        //debugger;
    var faxCode = document.getElementById("PermanentFaxCode").value.trim();
    if (faxCode != "") {
        if (faxCode.length < 2 || faxCode.length > 4) {
            document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
            return false;
        }
        else
        {
            if (!faxCode.match(number))
            {
                document.getElementById("PermanentFaxCode_error").innerHTML = "Invalid Code";
                return false;
            }
            else {
                document.getElementById("PermanentFaxCode_error").innerHTML = "";
            }
        }

    }
    else {
        document.getElementById("PermanentFaxCode_error").innerHTML = "";
    }

  });

  $("#PermanentFaxPhoneNumber").on("blur", function () 
  {
        //debugger;
    var faxphno = document.getElementById("PermanentFaxPhoneNumber").value.trim();
    if (faxphno != "") {
        if (faxphno.charAt(0) == "0") {
            document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
            return false;
        }
        else if (faxphno.length < 6 || faxphno.length > 8) {
            document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
            return false;
        }
        else
        {
            if (!faxphno.match(number))
            {
                document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "Invalid Fax Number";
                return false;
            }
            else
            {
                document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "";
            }
        }

    }
    else
    {
        document.getElementById("PermanentFaxPhoneNumber_error").innerHTML = "";
    }

  });

</script>