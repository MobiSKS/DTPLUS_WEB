@model HPCL.Common.Models.ViewModel.Customer.UpdateCustomerAddress
@using HPCL.Common.Resources;
@{
    ViewData["Title"] = "Update Customer Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 p-4 p-md-4">
        <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="#" class="text_primary">Requests</a> </li>
            <li class="breadcrumb-item font-weight-light">Update Customer Details</li>
        </ul>
         @using (Html.BeginForm("UpdateCustomerAddress", "Customer", FormMethod.Post, new { @enctype = "multipart/form-data" }))
         {
            <div class="w-100">
            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                <div class="border-1 rounded border-grey pb-3">
                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Update Customer Details</p>
                <div class="col-lg-12 col-md-12 col-12 pt-3">
                    <div class="d-flex align-items-center flex-wrap">
                    <div class="col-lg-6 col-12">
                        <div class="d-flex align-items-center flex-wrap mb-0">
                        <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                        <div class="col-md-7 col-12">
                            <div class="custom_select">
                               @Html.TextBoxFor(m => m.CustomerId, new { @class = "form-control", @id = "CustomerId", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                               @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger", @id = "CustomerIdValErrMsg" })
                            </div>
                        </div>
					    <div class="col-lg-7 col-12">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="px-2">
                                            <button class="btn btn_primary" type="button" onclick="ViewCustomerDetails()" id="btnSearch">@Label.Search</button>
                                        </div>
                                        <div class="px-2">
                                            <button class="btn btn_primary px-4 py-2" type="button" id="btnReset">@Label.Reset</button>
                                        </div>
                                    </div>
                                </div>
						</div>
                    </div>
					</div> 
                    <div class="clearfix"></div>
				</div>
                <div class="clearfix"></div>
                </div>
            </div>
			<div id="dvNoData" style="background-color: #fee4e4;display:none;text-align:center;font-weight:bold">
			</div>
			<div id="dvAddress" style="display:none">

			<div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                <div class="border-1 rounded border-grey pb-0">
                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Communication Address</p>
                <div class="col-lg-12 col-md-12 col-12 pt-3">
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                       <span class="error" id="comm_address1_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									    @Html.TextBoxFor(m => m.CommunicationAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        <span class="error" id="comm_address2_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 3 </label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationAddress3, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                       <span class="error" id="comm_address3_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								@*<label class="font-weight-normal col-md-4 col-12">Address 4 <sup class="text-danger">*</sup></label>*@
								<div class="col-md-7 col-12">
									<div class="custom_select">
									@*<textarea class="form-control" id="exampleFormControlTextarea1" rows="2"></textarea>*@
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                       <span class="error" id="comm_city_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Pincode <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.CommunicationPinCode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                      <span class="error" id="comm_pincode_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.DropDownListFor(m => m.CommunicationStateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control stateType" })
									</div>
									<span class="error" id="comm_states_error"></span>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.DropDownListFor(m => m.CommunicationDistrictId, new SelectList(Model.CommunicationDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
									</div>
									<span class="error" id="comm_district_error"></span>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
								<div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.CommunicationDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationDialCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.CommunicationPhonePart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationPhonePart2_error"></span>
                                        </div>
                                    </div>

                                </div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Mobile <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationMobileNo, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                       <div class="error" id="comm_mobileNumber_error"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Fax </label>
								 <div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.CommunicationFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationFaxCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.CommunicationFaxPart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="CommunicationFaxPart2_error"></span>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                       <div class="error" id="comm_email_error"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Income Tax PAN <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.IncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off" })
                                      <span class="error" id="incomeTaxPan_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
                <div class="clearfix"></div>
                </div>
            </div>
				
			<div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                <div class="border-1 rounded border-grey pb-0">
                <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Permanent/Registered Office Address</p>
                <div class="col-lg-12 col-md-12 col-12 pt-3">
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 1 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                      <div class="error" id="perma_address1_error"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 2 <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentAddress2, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                      <div class="error" id="perma_address2_error"></div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Address 3 </label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.TextBoxFor(m => m.PermanentAddress3, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                      <div class="error" id="perma_address3_error"></div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								@*<label class="font-weight-normal col-md-4 col-12">Address 4 <sup class="text-danger">*</sup></label>*@
								<div class="col-md-7 col-12">
									<div class="custom_select">
									@*<textarea class="form-control" id="exampleFormControlTextarea1" rows="2"></textarea>*@
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.PermanentCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                       <span class="error" id="perma_city_error"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Pincode <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.TextBoxFor(m => m.PermanentPincode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                       <span class="error" id="perma_pincode_error"></span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									  @Html.DropDownListFor(m => m.PerOrRegAddressStateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
									</div>
									<span class="error" id="perma_state_error"></span>
								</div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">District <sup class="text-danger">*</sup></label>
								<div class="col-md-7 col-12">
									<div class="custom_select">
									   @Html.DropDownListFor(m => m.PermanentDistrictId, new SelectList(Model.PerOrRegAddressDistrictMdl, "districtID", "districtName"), new { @class = "form-control" })
									</div>
									<span class="error" id="perma_district_error"></span>
								</div>
							</div>
						</div>
					</div>
					<div class="d-flex align-items-center flex-wrap">
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
								<div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.PerOrRegAddressDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="PerOrRegAddressDialCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.PerOrRegAddressPhoneNumber, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="perma_officePhone_error"></span>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
						<div class="col-lg-6 col-12">
							<div class="d-flex align-items-center flex-wrap mb-3">
								<label class="font-weight-normal col-md-4 col-12">Fax </label>
								<div class="col-md-7 col-12">
                                    <div class="row">
                                        <div class="col-4">
                                            @Html.TextBoxFor(m => m.PermanentFaxCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="PermanentFaxCode_error"></span>
                                        </div>
                                        <div class="col-8 pl-0">
                                            @Html.TextBoxFor(m => m.PermanentFaxPhoneNumber, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                            <span class="error" id="PermanentFaxPhoneNumber_error"></span>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
					</div>
				</div>
                <div class="clearfix"></div>
				</div>
				<div class="d-flex align-items-center justify-content-center mt-3">
					<div class="px-2">
						<button class="btn btn_primary" type="button" data-toggle="modal" data-target="#panvalidation">Update</button>
					</div>
					<div class="px-2">
						<button class="btn btn_primary" type="button">Reset</button>
					</div>
					<div class="px-2">
						<button class="btn btn_primary" type="button" style="display:none">Skip</button>
					</div>
				</div>
            </div>
			</div>

			</div>
        }
        <div class="clearfix"></div>
        </div>
</div>
<div class="clearfix"></div>

<script>
	$(document).ready(function () 
	{

         //$('.AddressProofType').SumoSelect({
         //   placeholder: '-Select-',
         //   search: true,
         //   searchText: 'Enter Text here.'
         //});

         //if ($("#CustomerReferenceNoId").val() != "") {
         //    openSearchGrid();
         //    $("#btnSave").click();
         //}


  });

    $('select').SumoSelect({
        placeholder: '--Select--',
        search: true,
        searchText: 'Enter Text here.'
    }); 

    $("#btnReset").click(function () {
        location.reload();
    });

    $('#CustomerId').keypress(function (e) {
        if (e.keyCode == 13) {  // detect the enter key
            $('#btnSearch').click();
        }
    });

	$("#CustomerId").on("blur", function ()
    {
        if ($("#CustomerId").val().trim() == "")
        {
            $('#CustomerIdValErrMsg').html("Customer ID should not be Empty");
            return false;
        }
        else if (!$("#CustomerId").val().match(mappedCustomerId))
        {
            $("#CustomerIdValErrMsg").attr("style", "display:block");
            $("#CustomerIdValErrMsg").html("start with 2 and contains 10 digits");
            return false;
        }
        else
        {
           $('#CustomerIdValErrMsg').html("");
        }

    })

  function ViewCustomerDetails() 
  {
        debugger;
		if ($("#CustomerId").val().trim() == "")
        {
            $('#CustomerIdValErrMsg').html("Customer ID should not be Empty");
            return false;
        }
        else if (!$("#CustomerId").val().match(mappedCustomerId))
        {
            $("#CustomerIdValErrMsg").attr("style", "display:block");
            $("#CustomerIdValErrMsg").html("start with 2 and contains 10 digits");
            return false;
        }
        else
        {
           $('#CustomerIdValErrMsg').html("");
        }

        $.ajax({
            url: "@Url.Action("GetCustomerAddress", "Customer")",
            type: "POST",
            dataType: "JSON",
            data: { CustomerId: $("#CustomerId").val() },
            success: function (res) 
			{
                console.log("customer", res.customer);
			               
				if(res.customer.communicationAddress1!="")
				{
				  document.getElementById("dvAddress").style.display="block";
				  document.getElementById("dvNoData").style.display = "none";
				  document.getElementById("dvNoData").innerHTML="";
				}
				else
				{
					document.getElementById("dvAddress").style.display = "none";
					document.getElementById("dvNoData").style.display = "block";
					document.getElementById("dvNoData").innerHTML= res.customer.message;
				}
                //if(res.customer.typeOfBusinessEntityId==10)
                //{
                //     document.getElementById("lblPanCardRemarks").style.display = "none";
                //     document.getElementById("PanCardRemarks").style.display = "none";
                //     $('#lblPanText').text('');
                //     $('#lblPanText').append('Govt. Dept. Identification Details<sup class="text-danger">*</sup>');
                //}
                //else
                //{
                //    document.getElementById("lblPanCardRemarks").style.display = "block";
                //    document.getElementById("PanCardRemarks").style.display = "block";
                //    $('#lblPanText').text('');
                //    $('#lblPanText').append('Income Tax PAN<sup class="text-danger">*</sup>');
                //}
				               
                $('#IncomeTaxPan').val(res.customer.incomeTaxPan);
                //$('#PanCardRemarks').val(res.customer.panCardRemarks);

                //Address Tab
                $('#CommunicationAddress1').val(res.customer.communicationAddress1);
                $('#CommunicationAddress2').val(res.customer.communicationAddress2);
                $('#CommunicationAddress3').val(res.customer.communicationAddress3);
                $('#CommunicationCityName').val(res.customer.communicationCityName);
                $('#CommunicationPinCode').val(res.customer.communicationPinCode);

				$('#CommunicationStateID')[0].sumo.selectItem(res.customer.casid);
				$('#PerOrRegAddressStateID')[0].sumo.selectItem(res.customer.pasid);
				              

                $('#CommunicationDialCode').val(res.customer.communicationDialCode);
                $('#CommunicationPhonePart2').val(res.customer.communicationPhonePart2);
                $('#CommunicationFaxCode').val(res.customer.communicationFaxCode);
                $('#CommunicationFaxPart2').val(res.customer.communicationFaxPart2);
                $('#CommunicationMobileNo').val(res.customer.communicationMobileNo);
                $('#CommunicationEmailid').val(res.customer.communicationEmailid);


                $('#PermanentAddress1').val(res.customer.permanentAddress1);
                $('#PermanentAddress2').val(res.customer.permanentAddress2);
                $('#PermanentAddress3').val(res.customer.permanentAddress3);
                $('#PermanentCityName').val(res.customer.permanentCityName);
                $('#PermanentPincode').val(res.customer.permanentPincode);

                //var pDistrict = $('<option value="' + res.customer.permanentDistrictName + '">' + res.customer.permanentDistrictName + '</option>');
                //$('#PerOrRegAddressDistrict').append(pDistrict);
                //$("#PerOrRegAddressDistrict")[0].sumo.reload();

                $('#PerOrRegAddressDialCode').val(res.customer.perOrRegAddressDialCode);
                $('#PerOrRegAddressPhoneNumber').val(res.customer.perOrRegAddressPhoneNumber);
                $('#PermanentFaxCode').val(res.customer.permanentFaxCode);
                $('#PermanentFaxPhoneNumber').val(res.customer.permanentFaxPhoneNumber);

				 $.ajax({
					type: 'POST',  // http method
					url: '@Url.Action("GetDistrictDetails", "Customer")',
					data: { Stateid: res.customer.casid },  // data to submit
					dataType: "json",
					success: function (data, status, xhr) {
						var v = data;
						if (status == 'success') 
						{
							$("#CommunicationDistrictId").html("");
							$.each(data, function (i, data) { // bind the dropdown list using json result
								$('<option>',
									{
										value: data.districtID,
										text: data.districtName
									}).html(data.districtName).appendTo("#CommunicationDistrictId");
							});
							$("#CommunicationDistrictId")[0].sumo.reload();

							//setTimeout(function(){
						   //$('#CommunicationDistrictId')[0].sumo.selectItem($("#CommunicationDistrictId").val());
						   //},500);
						}
						else {
							console.log(v);
						}
					},
					error: function (jqXhr, textStatus, errorMessage) {
						alert("Error Populating District Data");
					}
				});


				 $.ajax({
					type: 'POST',  // http method
					url: '@Url.Action("GetDistrictDetails", "Customer")',
					data: { Stateid: res.customer.pasid },  // data to submit
					dataType: "json",
					success: function (data, status, xhr) {
						var v = data;
						if (status == 'success') 
						{
							$("#PermanentDistrictId").html("");
							$.each(data, function (i, data) { // bind the dropdown list using json result
								$('<option>',
									{
										value: data.districtID,
										text: data.districtName
									}).html(data.districtName).appendTo("#PermanentDistrictId");
							});
							$("#PermanentDistrictId")[0].sumo.reload();

							//setTimeout(function(){
						   //$('#PermanentDistrictId')[0].sumo.selectItem($("#PermanentDistrictId").val());
						   //},500);
						}
						else {
							console.log(v);
						}
					},
					error: function (jqXhr, textStatus, errorMessage) {
						alert("Error Populating District Data");
					}
				});


                },
                error: function (ex) 
				{
                    alert('Failed' + ex);
					document.getElementById("dvAddress").style.display = "none";
					document.getElementById("dvNoData").style.display = "block";
					document.getElementById("dvNoData").innerHTML= res.customer.message;
                }
        });
    };

</script>