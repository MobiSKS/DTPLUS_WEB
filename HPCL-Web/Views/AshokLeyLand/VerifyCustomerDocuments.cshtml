@model HPCL.Common.Models.ViewModel.AshokLeyLand.GetAlCustomerDetailForVerificationModel

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4" style="background: #edecec !important;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "AshokLeyLand")" class="text_primary">Ashok Leyland</a> </li>
            <li class="breadcrumb-item font-weight-light">Verify Customer Documents</li>
        </ul>
        @if (ViewBag.SuccessMessage != "" && ViewBag.SuccessMessage != null)
        {
            <div id="reason" class="mb-3 text-center alert alert-success">@ViewBag.SuccessMessage</div>
        }
        @if (ViewBag.ErrorMessage != "" && ViewBag.ErrorMessage != null)
        {
            <div id="reason" class="mb-3 text-center alert alert-danger">@ViewBag.ErrorMessage</div>
        }
        @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "formValid", @class = "toBeHiddenOnSuccess" }))
        {
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Verify Customers</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3 bg-white">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.StateID, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Form Number </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FormNumber, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="formNumber_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Customer Name </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", maxlength = "50",autocomplete = "off" })
                                                <span class="error" id="CustomerName_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Status <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.Status, new SelectList(Model.StatusResponseMdl, "StatusId", "StatusName"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary teamSearch" type="submit" id="btnSearch">SEARCH</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnReset" onclick="location.href='@Url.Action("VerifyCustomerDocuments", "AshokLeyLand", new { reset="Y" })'">RESET</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                </div>
                <div class="clearfix"></div>
                @if (ViewBag.Reset != "Y")
                {
                    @if (Model.Data.Count() > 0)
                    {

                        <table class="table table-striped table-bordered table-responsive d-md-table" style="width:100%;word-wrap:break-word;table-layout:fixed;" id="CustomerSearch">
                            <thead>
                                <tr>
                                    <th style="display:none">S.No.</th>
                                    <th>Form No.</th>
                                    <th>Customer ID</th>
                                    <th>Customer Name</th>
                                    <th>Customer Address</th>
                                    <th>Phone No</th>
                                    <th>Mobile No</th>
                                    <th>Edit</th>
                                    <th>View</th>
                                    <th>Download</th>
                                    <th>Action</th>
                                    <th>Approval Comment</th>
                                </tr>
                            </thead>
                            <tbody id="searchTableBody">
                                @{
                                    int i = 0;
                                }
                                @foreach (var item in Model.Data)
                                {
                                    i = i + 1;

                                    <tr>
                                        <td style="display:none">@i</td>
                                        <td id="tdFormNumber">@item.FormNumber</td>
                                        <td id="tdCustomerID">@item.CustomerID</td>
                                        <td id="tdCustomerName">@item.CustomerName</td>
                                        <td id="tdCustomerAddress">@item.CustomerAddress</td>
                                        <td id="tdPhoneNo">@item.PhoneNo</td>
                                        <td id="tdMobileNo">@item.MobileNo</td>
                                        <td>
                                            <a href="#">
                                                <i class="fa fa-edit text-primary"></i>
                                        </td>
                                        <td><a href="#"><i class="fa fa-eye text-primary"></i></td>
                                        <td><a href="#"><i class="fa fa-download text-primary"></i></td>
                                        <td class="editCell">
                                            <input type="text" maxlength="30" class="form-control remarks" onkeydown="return AlphaNumericWithSpace(event.keyCode)" name="Remarks_@i" id="Remarks_@i" style="display:none">
                                            <a class="Icons_sty" data-toggle="tooltip" title="" tooltip="Verify"><i class="fa fa-check text-success verify"></i></a>
                                            <a class="Icons_sty" data-toggle="tooltip" title="" tooltip="Reject Verification"><i class="fa fa-ban text-primary reject"></i></a>
                                            <a class="Icons_sty" data-toggle="tooltip" title="" tooltip="Cancel Reject"><i class="fa fa-remove cancel" aria-hidden="true" style="display:none"></i></a>
                                            <a class="Icons_sty" data-toggle="tooltip" title="" tooltip="Reject Verification"><i class="fa fa-floppy-o save" aria-hidden="true" style="display:none"></i></a>
                                        </td>
                                        <td>@item.Remarks</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="clearfix"></div>
                    }
                    else
                    {
                        <div class="mb-3 text-center alert alert-danger">
                            @Model.Message
                        </div>
                    }
                }
                <div class="clearfix"></div>
                <input type="hidden" id="Status">

            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>
<div class="clearfix"></div>
<script type="text/javascript">
    var pageStatus="@ViewBag.Reset";//ViewBag.Reset has value "Y" for reset click, "A" for Add button click
    var activeRow="";
    $(document).ready(function () {
         $('.table').DataTable({
            "lengthMenu": [10, 20, 50, 100, 200, 500],
            "oLanguage": {
                "sLengthMenu": "Display _MENU_ Records",
                "info": "Showing _START_ to _END_ of _TOTAL_ Records",
            }
        });

    });

     $("#CustomerSearch").on('click', '.reject', function ()
     {
        if(activeRow=="")
        {
            currentRow = $(this).closest("tr");
            activeRow=currentRow;

           currentRow.find('.verify').attr("style","display:none");
           currentRow.find('.reject').attr("style","display:none");
           currentRow.find('.save').attr("style","display:block");
           currentRow.find('.cancel').attr("style","display:block");
           currentRow.find('.remarks').attr("style","display:block");
       }
    });

     $("#CustomerSearch").on('click', '.cancel', function ()
     {
       currentRow = $(this).closest("tr");

       currentRow.find('.verify').attr("style","display:block");
       currentRow.find('.reject').attr("style","display:block");
       currentRow.find('.save').attr("style","display:none");
       currentRow.find('.cancel').attr("style","display:none");
       currentRow.find('.remarks').attr("style","display:none");
       currentRow.find('input[type="text"]').val('');
       activeRow="";
     });

     $("#CustomerSearch").on('click', '.verify', function () {
         debugger;
         var flag="Y";
          row = $(this).closest("tr");
          var i = row[0].cells[0].textContent;
    @*var remarks = $('#Remarks_'+i).val();*@
          var customerId = row[0].cells[2].textContent;
          var approveRejectStatus="1";
          //alert(customerId);
    @*if(remarks.trim()=="")
        {
        flag="N";
        alert("Comment is required to reject verification of a customer.");
        }*@

          var remarks="";

          if(flag=="Y")
          {
            if (confirm('Are you sure to approve verification of this customer?'))
            {
                console.log('Confirm');

                 $.ajax({
                    url: "@Url.Action("AproveRejectCustomer", "AshokLeyLand")",
                    type: "POST",
                    dataType: "JSON",
                    data: { CustomerID: customerId, Comments: remarks, Approvalstatus: approveRejectStatus },
                    success: function (res)
                    {
                        console.log(res);
                        console.log(res.customer.reason);
                        if(res.customer.status==1)
                        {
                            var successMsg="",errorMsg="";
                            if(res.customer.status==1)
                                successMsg=res.customer.reason;
                            else if(data[0].status==0)
                                errorMsg=res.customer.reason;
                            var url = '@Html.Raw(@Url.Action("VerifyCustomerDocuments", "AshokLeyLand",new { reset = "A", success = "mm", error = "ee", StateID="uuu", FormNumber="vvv",CustomerName="www",Status="xxx" }))';
                            url = url.replace("mm", encodeURIComponent(successMsg)).replace("ee", encodeURIComponent(errorMsg));
                            url = url.replace("uuu", encodeURIComponent($("#StateID").val())).replace("vvv", encodeURIComponent($("#FormNumber").val())).replace("www", encodeURIComponent($("#CustomerName").val())).replace("xxx", encodeURIComponent($("#Status").val()));
                           window.location.href=url;
                        }
                    },
                    error: function (ex)
                    {
                        alert('Failed' + ex);
                    }
                });
             }
             else
             {
                 console.log('Cancelled');
             }
         }

     });

     $("#CustomerSearch").on('click', '.save', function () {
         debugger;
         var flag="Y";
          row = $(this).closest("tr");
          var i = row[0].cells[0].textContent;
          var remarks = $('#Remarks_'+i).val();
          var customerId = row[0].cells[2].textContent;
          var approveRejectStatus="13";
          //alert(customerId);
          if(remarks.trim()=="")
          {
              flag="N";
              alert("Comment is required to reject verification of a customer.");
          }

          if(flag=="Y")
          {
            if (confirm('Are you sure to reject verification of this customer?'))
            {
                console.log('Confirm');

                 $.ajax({
                    url: "@Url.Action("AproveRejectCustomer", "AshokLeyLand")",
                    type: "POST",
                    dataType: "JSON",
                    data: { CustomerID: customerId, Comments: remarks, Approvalstatus: approveRejectStatus },
                    success: function (res)
                    {
                        console.log(res);
                        console.log(res.customer.reason);
                        if(res.customer.status==1)
                        {
                            var successMsg="",errorMsg="";
                            if(res.customer.status==1)
                                successMsg=res.customer.reason;
                            else if(data[0].status==0)
                                errorMsg=res.customer.reason;
                            var url = '@Html.Raw(@Url.Action("VerifyCustomerDocuments", "AshokLeyLand",new { reset = "A", success = "mm", error = "ee", StateID="uuu", FormNumber="vvv",CustomerName="www",Status="xxx" }))';
                            url = url.replace("mm", encodeURIComponent(successMsg)).replace("ee", encodeURIComponent(errorMsg));
                            url = url.replace("uuu", encodeURIComponent($("#StateID").val())).replace("vvv", encodeURIComponent($("#FormNumber").val())).replace("www", encodeURIComponent($("#CustomerName").val())).replace("xxx", encodeURIComponent($("#Status").val()));
                           window.location.href=url;
                        }
                    },
                    error: function (ex)
                    {
                        alert('Failed' + ex);
                    }
                });
             }
             else
             {
                 console.log('Cancelled');
             }
         }

     });

    $("#FormNumber").on("blur", function ()
    {
            debugger;
            var formNumber = document.getElementById("FormNumber").value.trim();
            if (formNumber != "")
            {
               if (document.getElementById("FormNumber").value.substring(0, 1) == "0")
               {
                 document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                 return false;
                }
                else if (document.getElementById("FormNumber").value.length < 10)
                {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    return false;
                }
                else if (!(document.getElementById("FormNumber").value.match(number)))
                {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    return false;
                }
                else
                    document.getElementById("formNumber_error").innerHTML = "";
            }
            else
            {
                document.getElementById("formNumber_error").innerHTML = "";
            }

    });

     $("#btnSearch").on("click", (function (e)
     {
            var flag = "Y";
            debugger;

            if (document.getElementById("FormNumber").value.trim() != "")
            {

                if (document.getElementById("FormNumber").value.substring(0, 1) == "0") {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    flag="N";
                }
                else if (document.getElementById("FormNumber").value.length < 10) {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    flag="N";
                }
                else if (!(document.getElementById("FormNumber").value).match(number)) {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    flag="N";
                }
                else
                {
                    document.getElementById("formNumber_error").innerHTML = "";
                }
            }
            else
            {
                document.getElementById("formNumber_error").innerHTML = "";
            }

            var customerName = document.getElementById("CustomerName").value.trim();
            if (customerName != "")
            {
                if (!isNaN(customerName))
                {
                    document.getElementById("CustomerName_error").innerHTML = "Invalid Customer Name";
                    flag="N";
                }
                else if (!customerName.match(nameWithSpaceCheck))
                {
                    document.getElementById("CustomerName_error").innerHTML = "Invalid Customer Name";
                    flag="N";
                }
                else
                {
                    document.getElementById("CustomerName_error").innerHTML = "";
                }
            }
            else
            {
                document.getElementById("CustomerName_error").innerHTML = "";
            }

            if (flag == "N")
                e.preventDefault();

        }));

     $("#CustomerName").on("blur", function ()
     {
        debugger;
        var customerName = document.getElementById("CustomerName").value.trim();
        if (customerName != "")
        {
            if (!isNaN(customerName))
            {
                document.getElementById("CustomerName_error").innerHTML = "Invalid Customer Name";
                return false;
            }
            else if (!customerName.match(nameWithSpaceCheck))
            {
                document.getElementById("CustomerName_error").innerHTML = "Invalid Customer Name";
                return false;
            }
            else
            {
                document.getElementById("CustomerName_error").innerHTML = "";
            }
        }
        else
        {
            document.getElementById("CustomerName_error").innerHTML = "";
        }

     });

</script>