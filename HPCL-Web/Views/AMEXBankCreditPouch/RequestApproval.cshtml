@model HPCL.Common.Models.ViewModel.AMEXBankCreditPouch.SearchRequestApproval

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index")" class="text_primary">AMEX Bank Credit Pouch</a> </li>
            <li class="breadcrumb-item font-weight-light">AMEX Bank Credit Pouch Request Approval</li>
        </ul>
        <form method="post" data-ajax="true" data-ajax-controller="AMEXBankCreditPouch" data-ajax-action="RequestApproval" data-ajax-method="POST" data-ajax-success="OnSuccess" data-ajax-failure="OnFailure">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mb-3">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">AMEX Bank Credit Pouch Request Approval</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div id="successUpdate" class="mb-3 text-center alert alert-success" style="display:none;"></div>
                            <div class="d-flex align-items-center flex-wrap">
                                 <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">SBU Type</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.SBUTypeId, new SelectList(Model.SBUTypes, "SBUId", "SBUName"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                             </div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Zonal Office</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.ZO, new SelectList(Model.ZoneMdl, "ZonalOfficeID", "ZonalOfficeName"), new { @class = "form-control", onchange = "getRegionalOfc()" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Regional Office</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.RO, new SelectList(Model.RegionMdl, "RegionalOfficeID", "RegionalOfficeName"), new { @class = "form-control" })   
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Customer ID</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerId, new { @id = "CustomerDefaultVal", @class = "form-control restrictPaste", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Status</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.Status, Enumerable.Empty<SelectListItem>(), new { @class = "form-control statusVal" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center justify-content-center mt-3">
                                <div class="px-md-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                    <button class="btn btn_primary" type="submit" id="btnSave" name="submit">Search</button>
                                </div>
                                <div class="px-md-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                    <a class="btn btn_primary" href="#" id="btnCancel" name="cancel" onclick="resetClick()">Reset</a>
                                </div>
                                <div class="px-md-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                      <button class="btn btn_primary" type="button" onclick="tableToCSV()">Export to Excel</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div id="noRecord" class="mt-3 mb-3 text-center alert alert-danger" style="display:none;"></div>

                        <div id="approvalRejectSection" style="display:none;">
                            <div class="table-responsive mt-3">
                                <table id="approvalAmexList" class="datatable table table-striped d-block table-bordered nowrap table-responsive mt-3" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Select</th>
                                            <th>Reference No.</th>
                                            <th>ZO</th>
                                            <th>RO</th>
                                            <th>Customer ID</th>
                                            <th>Customer Name</th>
                                            <th>Plan Name</th>
                                            <th>Requested By</th>
                                            <th>Requested On</th>
                                            <th>Status</th>
                                            <th>Approval Remarks</th>
                                            <th style="min-width:130px">Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                            <div class="d-flex align-items-center justify-content-center mt-3">
                                <div class="px-md-2 mb-3 col-sm-auto col-12 mb-sm-0 mb-2">
                                    <button class="btn btn_primary" type="button" onclick="requestApprovalSubmit()">Submit</button>
                                </div>
                            </div>
                        </div>
                </div>
            </div>
        </form>
        <div class="clearfix"></div>
    </div>
</div>

@using Microsoft.AspNetCore.Http;
<script src="https://rawgit.com/moment/moment/2.2.1/min/moment.min.js"></script>


<script type="text/javascript">

        function resetClick() {
            window.location.reload();
        }

        $('.restrictPaste').on('paste', function (event) {
            if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
                event.preventDefault();
            }
        });

        $(document).ready(function () {

           function isNumberKey(evt) {
                var charCode = (evt.which) ? evt.which : event.keyCode;
                if (charCode != 46 && charCode > 31
                    && (charCode < 48 || charCode > 57))
                    return false;

                return true;
            }

            $('select').SumoSelect({
                placeholder: '-Select-',
                search: true,
                searchText: 'Enter Text here.'
            });

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetCreditPouchStatus", "Common")',
                data: {pagename : "BankApproval"},
                dataType: "json",
                success: function (data, status, xhr) {

                    console.log(data);
                    $('<option>',{value: 0,text: "--All--"}).html("--All--").appendTo(".statusVal");
                    $.each(data.getStatus, function (i, option) {
                        $("<option/>").val(option.statusId).text(option.statusName).appendTo(".statusVal");
                    });
                    $(".statusVal")[0].sumo.reload();
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating Status Type");
                }
            });
        });



    $("#SBUTypeId").change(function () {
             var id = this.value;

             $.ajax({
                 type: 'POST',  // http method
                 url: '@Url.Action("GetZonalOfficebySBUType", "Common")',
                 data: { SBUTypeId: id },  // data to submit
                 dataType: "json",
                 success: function (data, status, xhr) {
                     var v = data;
                     if (status == 'success') {

                         $("#ZO").html("");
                         $('<option>',{
                                         value: 0, text: "--All--"
                                     }).html("--All--").appendTo("#ZO");
                         $.each(data, function (i, data) { // bind the dropdown list using json result
                                 
                                 $('<option>',
                                     {
                                         value: data.zonalOfficeID,
                                         text: data.zonalOfficeName
                                     }).html(data.zonalOfficeName).appendTo("#ZO");

                         });
                         $("#ZO")[0].sumo.reload();
                         $("#ZO").trigger("change");
                     }
                     else {
                         console.log(v);
                     }
                 },
                 error: function (jqXhr, textStatus, errorMessage) {
                     alert("Error Populating Customer Zone");
                 }
             });
         });

    function getRegionalOfc() {
        var id = $('#ZO :selected').val();
        if(id>0){
            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetRegionalOfcDetails", "Common")',
                data: { ZonalOfcID: id },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) {
                    var v = data;
                    if (status == 'success') {
                        $("#RO").html("");
                        $.each(data, function (i, data) { // bind the dropdown list using json result
                            if (i == 0) {
                                $('<option>',
                                    {
                                        value: 0,
                                        text: "-All-"
                                    }).html("--All--").appendTo("#RO");
                                $('<option>',
                                    {
                                        value: data.regionalOfficeID,
                                        text: data.regionalOfficeName
                                    }).html(data.regionalOfficeName).appendTo("#RO");
                            }
                            else {
                                $('<option>',
                                    {
                                        value: data.regionalOfficeID,
                                        text: data.regionalOfficeName
                                    }).html(data.regionalOfficeName).appendTo("#RO");
                            }

                        });
                        $("#RO")[0].sumo.reload();
                    }
                    else {
                        console.log(v);
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error");
                }
            });
        }
        else{
             $("#RO").html('');
            $("#RO")[0].sumo.reload();
        }
    };

    $("#RO").change(function () {
        var id = this.value;
        $("#RO").val(id);
    });



     $("#approvalAmexList").on('click', '.checkRow', function (e) {

        currentRow = $(this).closest("tr");

        if ($(this).is(':checked')) {

            currentRow.find('.remarksVal').attr("readonly", false);
            currentRow.find('.actionVal').attr("readonly", false);
            currentRow.find('.actionVal').attr("disabled", false);
        }
        if (!$(this).is(':checked')) {
            currentRow.find('.remarksVal').attr("readonly", true);
            currentRow.find('.actionVal').attr("readonly", true);
            currentRow.find('.actionVal').attr("disabled", true);
            currentRow.find('.errs').css("display", "none");
        }
    });


    function OnSuccess(res) {

        document.getElementById("successUpdate").style.display = "none";
        document.getElementById("noRecord").style.display = "none";

        console.log("data",res);

        if (res.searchList.success == true) {

            $('#approvalAmexList').DataTable().clear().destroy();

            var tbl = $('#approvalAmexList').DataTable({
                paging: true,
                searching: false,
                stateSave: true,
                "bDestroy": true,
                "lengthMenu": [10, 20, 50, 100, 200, 500, 1000, 2000],
                "autoWidth": false,
                "oLanguage": {
                    "sLengthMenu": "Display _MENU_ Records",
                    "info": "Showing _START_ to _END_ of _TOTAL_ Records",
                }
            });

            for (var i = 0; i < res.searchList.data.length; i++) {

                var isDts;
                if(((res.searchList.data[i].requestedDate) == "01-01-0001") || ((res.searchList.data[i].requestedDate) == "01-01-1900") || ((res.searchList.data[i].requestedDate) == null)){
                    isDts = "";
                }else{
                    isDts = moment(res.searchList.data[i].requestedDate, 'DD-MM-YYYY').format('DD-MM-YYYY');
                }

                var srNumber = (i + 1);
                var checkBx = "<input type='checkbox' class='checkRow' name='checkRowName'>";
                var referenceNo = (res.searchList.data[i].referenceNo || '');
                var zo = (res.searchList.data[i].zo || '');
                var ro =  (res.searchList.data[i].ro || '');
                var customerId = "<span class='custVal'>"+(res.searchList.data[i].customerId)+"</span>";
                var customerName = (res.searchList.data[i].customerName);
                var planName = (res.searchList.data[i].planName);
                var requestedBy = (res.searchList.data[i].requestedBy);
                var requestedDate = isDts;
                var status = (res.searchList.data[i].actionStatus);
                var remarks = "<div style='width:160px;'><textarea onchange='remarksChange(this," + (i) + ")' readonly='readonly' class='form-control remarksVal' maxlength = '250'></textarea><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle errs' id='remarks_error_"+i+"' aria-hidden='true'></i></div>";
                var action = "<select readonly='readonly' disabled='disabled' class='form-control actionVal'></select><span style='display:none;' class='reqId'>"+(res.searchList.data[i].requestNo)+"</span>";

                tbl.row.add([
                    srNumber,
                    checkBx,
                    referenceNo,
                    zo,
                    ro,
                    customerId,
                    customerName,
                    planName,
                    requestedBy,
                    requestedDate,
                    status,
                    remarks,
                    action
                ]).order( [ 1, 'asc' ] ).draw();
            }

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetCreditPouchStatus", "Common")',
                data: {pagename : "BankApprovalAction"},
                dataType: "json",
                success: function (data, status, xhr) {

                    console.log(data);
                    $.each(data.getStatus, function (i, option) {
                        $("<option/>").val(option.statusId).text(option.statusName).appendTo(".actionVal");
                    });
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error Populating Status Type");
                }
            });

            document.getElementById("approvalRejectSection").style.display = "grid";
        } else {
            document.getElementById("approvalRejectSection").style.display = "none";
            $("#noRecord").html("");
            $("#noRecord").append("<span>" + res.searchList.message + "</span>");
            document.getElementById("noRecord").style.display = "block";
        }
    }

    function requestApprovalSubmit(){

        document.getElementById("successUpdate").style.display = "none";
        document.getElementById("noRecord").style.display = "none";

        var updateArray = new Array();

        var flag = "Y";
        var CustomerId;

        $("#approvalAmexList input[type=checkbox]:checked").each(function () {
            
            var selectedRow = $(this).closest("tr")[0];
          
            var indexS = (selectedRow.rowIndex) - 1;

            console.log("indexS",indexS);

            var row = $(this).closest("tr");

            CustomerId = row.find('.custVal').text();
            var RequestId = row.find('.reqId').text();
            var BankRemark = row.find('.remarksVal').val();
            var ActionType = row.find('.actionVal option:selected').val();
            var ApprovedBy = row.find('.custVal').text();
            
            updateArray.push({
                CustomerId: CustomerId,
                RequestId: RequestId,
                BankRemark: BankRemark,
                ActionType: ActionType,
                ApprovedBy: ApprovedBy
            });

            if(BankRemark.trim() == ''){
                document.getElementById('remarks_error_'+indexS).title="Please enter Apporval Remarks.";
                document.getElementById('remarks_error_'+indexS).style.display = "block";
                flag = "N";
            }
            else{
             if(BankRemark.trim()!=''){
                if (!BankRemark.match(/^[A-Za-z0-9 ]+$/)){
                    document.getElementById('remarks_error_'+indexS).title="Special characters are not allowed";
                    document.getElementById('remarks_error_'+indexS).style.display = "block";
                    flag = "N";
                }
              }
            }
        });

        if (CustomerId == undefined) {
                alert("Please select at least one record");
                flag = "N";
        }
 
        if (flag == "N")
            e.preventDefault();

        if (flag == "Y") {
            
            if (confirm('Are you sure! You want to process the selected record(s)?')) {
                console.log('ok');

                $("#approvalAmexList input[type=checkbox]:checked").each(function () {
                    var selectedRow = $(this).closest("tr")[0];
                    console.log("index",selectedRow.rowIndex);
                    var indexS = (selectedRow.rowIndex) - 1;
                    document.getElementById('remarks_error_'+indexS).style.display = "none";
                    $(this).closest("tr").find(".checkRow").prop('checked',false);
                    $(this).closest("tr").find('.remarksVal').val('');
                    $(this).closest("tr").find('.remarksVal').attr("readonly", true);
                    $(this).closest("tr").find('.actionVal').attr("readonly", true);
                    $(this).closest("tr").find('.actionVal').attr("disabled", true);
                });

                $.ajax({
                    url: "@Url.Action("SubmitRequestApproval", "AMEXBankCreditPouch")",
                    type: "POST",
                    traditional: true,
                    data: { bankEntryDetail: JSON.stringify(updateArray) },
                    success: function (res) {

                        if(res.reasonList[0].status == 1){
                            document.getElementById("approvalRejectSection").style.display = "none";
                            $("#successUpdate").html('');
                            $("#successUpdate").append("<span>"+(res.reasonList[0].reason)+"</span>");
                            document.getElementById("successUpdate").style.display = "block";
                        }else{
                            $("#noRecord").html('');
                            $("#noRecord").append("<span>"+(res.reasonList[0].reason)+"</span>");
                            document.getElementById("noRecord").style.display = "block";
                        }
                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });

            } else {
                console.log('cancel')
            }
        }
    }

    function remarksChange(o, rowSelected){

       var BankRemark = o.value;
       
       if(BankRemark.trim() == ''){
                document.getElementById('remarks_error_'+rowSelected).title="Please enter Apporval Remarks.";
                document.getElementById('remarks_error_'+rowSelected).style.display = "block";
                flag = "N";
            }
        else{
            if(BankRemark.trim()!=''){
                if (!BankRemark.match(/^[A-Za-z0-9 ]+$/)){
                    document.getElementById('remarks_error_'+rowSelected).title="Special characters are not allowed";
                    document.getElementById('remarks_error_'+rowSelected).style.display = "block";
                    flag = "N";
                }else{
                    document.getElementById('remarks_error_'+rowSelected).title="";
                    document.getElementById('remarks_error_'+rowSelected).style.display = "none";
                }
            }
        }
    }

    function downloadCSVFile(csv_data,fileName) {

        CSVFile = new Blob([csv_data], {
            type: "text/csv"
        });

        var temp_link = document.createElement('a');

        temp_link.download = fileName;
        var url = window.URL.createObjectURL(CSVFile);
        temp_link.href = url;

        temp_link.style.display = "none";
        document.body.appendChild(temp_link);

        temp_link.click();
        document.body.removeChild(temp_link);
    }

    function tableToCSV(){
        var csv_data = [];
        var rows = document.getElementById("approvalAmexList").getElementsByTagName('tr');
        if (rows.length > 0) {
            for (var i = 0; i < rows.length; i++) {
                var cols = rows[i].querySelectorAll('td,th');
                var csvrow = [];
                for (var j = 0; j < cols.length; j++) {

                    if(j != 1 && j != 12){
                        console.log("cols[j]", cols[j]);

                        const checkBox = cols[j].querySelector('input[class="checkX"]');

                        const custVal = cols[j].querySelector('span');
                        const remarks = cols[j].querySelector('textarea');

                        if(!checkBox){
                            if(custVal){
                                csvrow.push(custVal.innerText);
                            }else if(remarks){
                                csvrow.push(remarks.value);
                            }else{
                                csvrow.push(cols[j].innerText);
                            } 
                        }
                    }
                }

                csv_data.push(csvrow.join(","));
            }
            csv_data = csv_data.join('\n');

            var fileName = "AMEXCreditPouchRequest.csv";

            downloadCSVFile(csv_data,fileName);
        }
    }
</script>

<style>
textarea {
   resize: none;
}
</style>