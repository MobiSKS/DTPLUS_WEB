@model HPCL.Common.Models.ViewModel.COMCOManager.RequestToSetCreditLimitModel
@using HPCL.Common.Resources

<div class="col-lg-12 p-4 p-md-4">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="#" class="text_primary">Credit Limit</a> </li>
            <li class="breadcrumb-item font-weight-light">Limit Set Request</li>
        </ul>
        <form name="Form1" id="Form1" method="post" asp-action="RequestToSetCreditLimit" class="w-100" autocomplete="off" enctype="multipart/form-data">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Limit Set Request</p>
                        <div class="alert alert-danger mt-3 text-center" id="dvRemarks" style="@(Model.Message=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Message)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 pt-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-12 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-0">
                                        <label class="font-weight-normal col-md-2 col-12">Select Mode <sup class="text-danger">*</sup></label>
                                        <div class="col-sm-3 col-md-3 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.LimitSetMode, new SelectList(Model.COMCOLimitModeMdl, "StatusId", "StatusName"), new { @class = "form-control" })
                                            </div>
                                            <span class="error" id="LimitSetMode_error"></span>
                                        </div>
                                        <div class="col-md-7 col-12">
                                            <div class="d-flex align-items-center flex-wrap">
                                                <div class="px-0">
                                                    <button class="btn btn_primary regrate_btn" type="button">View Mapped Customers</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3" id="dvDetails" style="display:none">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold" id="headerText">Without Security Deposit</p>
                        <div class="col-lg-12 col-md-12 col-12 pt-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerID, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerID, "", new { @class = "error", @id = "CustomerIdValErrMsg" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">Amount <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", maxlength="10", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="Amount_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="dvCautionAmountWOSD" style="display:none;">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Caution Amount <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CautionAmountWOSD, new { @class = "form-control", maxlength="10", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="CautionAmountWOSD_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">Scanned Reference Document <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ScannedReferenceDocumentWOSD, new { @id = "ScannedReferenceDocumentWOSD", @class = "form-control-file", Type = "file" })
                                                <span class="error" id="ScannedReferenceDocumentWOSD_error"></span>
                                            </div>
                                            <p class="mb-0">(In pdf/jpg/doc/docx format)</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>

                            <div id="dvCautionAmountWSD" style="display:none;">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Caution Amount <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CautionAmountWSD, new { @class = "form-control", maxlength="10", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="CautionAmountWSD_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">No. of cheque/ BDS /CR required <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NoOfCheques, new { @class = "form-control", maxlength="3", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="NoOfCheques_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                <button class="btn btn_primary" type="button" id="btnAdd" onclick="AddCardTbl()">ADD</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            </div>

                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Invoice Interval </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.InvoiceIntervalId, new SelectList(Model.COMCOLimitIntervalMdl, "StatusId", "StatusName"), new { @class = "form-control" })
                                                <span class="error" id="InvoiceIntervalId_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">COMCO Package ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.COMOCOPackageID, new { @class = "form-control", maxlength="10", onkeydown="return IsAlphaNumeric(event.keyCode)" })
                                                <span class="error" id="COMCOPackageID_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="dvFinanceCharges" style="display:none">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Finance Charges (%) <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FinanceCharges, new { @class = "form-control", maxlength="10", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="FinanceCharges_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>

                            <div id="dvServicesCharges" style="display:none;">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Service Charges (%) <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ServicesCharges, new { @class = "form-control", maxlength="10", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="ServicesCharges_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-5 col-12">Scanned Reference Document <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ScannedReferenceDocumentWSD, new { @id = "ScannedReferenceDocumentWSD", @class = "form-control-file", Type = "file" })
                                                <span class="error" id="ScannedReferenceDocumentWSD_error"></span>
                                            </div>
                                            <p class="mb-0">(In pdf/jpg/doc/docx format)</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>

                        </div>
                        <div class="clearfix"></div>
                        <div id="ViewNoOfCardsTbl" style="display:none;"></div>
                        <div class="d-flex align-items-center justify-content-center flex-wrap mb-3">
                            <div class="px-2">
                                <button class="btn btn_primary" type="submit" id="btnSubmit" onclick="return ValidateMandatoryFields()">@Label.Submit</button>
                            </div>
                            <div class="px-2">
                                <button class="btn btn_primary regrate_btn" type="button" id="btnReset">@Label.Reset</button>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

             <div style="display:none">
        <table id="OldVehicleDetails">
            <thead>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.lstChequeDetails)
                {
                    <tr>
                        <td>@item.ChequeBDSCRNumber</td>
                        <td>@item.ChequeBDSCRDate</td>
                    </tr>
                }
            </tbody>
        </table>
      </div>
      
        </form>
        <div class="clearfix"></div>
    </div>
</div>
<div class="clearfix"></div>
<script>
$("#LimitSetMode").change(function () {
    var id = this.value;
    if (id != 0) 
    {
        if(id==1)
        {
            $("#headerText").html("Without Security Deposit");
            document.getElementById("dvCautionAmountWSD").style.display="none";
            document.getElementById("dvCautionAmountWOSD").style.display="block";
            document.getElementById("dvDetails").style.display="block";
            document.getElementById("dvFinanceCharges").style.display="block";
            document.getElementById("dvServicesCharges").style.display="none";

            $("#ScannedReferenceDocumentWSD_error").html("");
            $("#ScannedReferenceDocumentWOSD_error").html("");
            document.getElementById("btnSubmit").style.display="block";
            $("#ViewNoOfCardsTbl").html("");
            $("#btnAdd").attr("disabled", false);
            $('#NoOfCheques').attr("readonly", false);
            $('#NoOfCheques').val("");
            $("#NoOfCheques_error").html("");

            $('#CustomerID').val("");
            $("#CustomerIdValErrMsg").html("");
            $('#Amount').val("");
            $("#Amount_error").html("");
            $('#CautionAmountWOSD').val("");
            $("#CautionAmountWOSD_error").html("");

            $('#CautionAmountWSD').val("");
            $("#CautionAmountWSD_error").html("");
            $('#COMOCOPackageID').val("");
            $("#COMCOPackageID_error").html("");
            $('#FinanceCharges').val("");
            $("#FinanceCharges_error").html("");
            $('#ServicesCharges').val("");
            $("#ServicesCharges_error").html("");
            $('#ScannedReferenceDocumentWSD').val("");
            $("#ScannedReferenceDocumentWSD_error").html("");
        }
        else
        {
            $("#headerText").html("Security Deposit");
            document.getElementById("dvCautionAmountWSD").style.display="block";
            document.getElementById("dvCautionAmountWOSD").style.display="none";
            document.getElementById("dvDetails").style.display="block";
            document.getElementById("dvFinanceCharges").style.display="none";
            document.getElementById("dvServicesCharges").style.display="block";

            $("#ScannedReferenceDocumentWSD_error").html("");
            $("#ScannedReferenceDocumentWOSD_error").html("");
            document.getElementById("btnSubmit").style.display="none";
            $("#ViewNoOfCardsTbl").html("");
            $("#btnAdd").attr("disabled", false);
            $('#NoOfCheques').attr("readonly", false);
            $('#NoOfCheques').val("");
            $("#NoOfCheques_error").html("");

            $('#CustomerID').val("");
            $("#CustomerIdValErrMsg").html("");
            $('#Amount').val("");
            $("#Amount_error").html("");
            $('#CautionAmountWOSD').val("");
            $("#CautionAmountWOSD_error").html("");

            $('#CautionAmountWSD').val("");
            $("#CautionAmountWSD_error").html("");
            $('#COMOCOPackageID').val("");
            $("#COMCOPackageID_error").html("");
            $('#FinanceCharges').val("");
            $("#FinanceCharges_error").html("");
            $('#ServicesCharges').val("");
            $("#ServicesCharges_error").html("");
            $('#ScannedReferenceDocumentWSD').val("");
            $("#ScannedReferenceDocumentWSD_error").html("");
        }
    }
    else
    {
        $("#headerText").html("Without Security Deposit");
        document.getElementById("dvDetails").style.display="none";
    }
    
});

$("#btnReset").click(function () {
        window.location.href = '@Url.Action("RequestToSetCreditLimit", "COMCOManager")';
    });

$("#ScannedReferenceDocumentWSD").on("blur", function () {
    //debugger;
    var addressProof = document.getElementById("ScannedReferenceDocumentWSD").value.trim();
    if (addressProof == "") {
        document.getElementById("ScannedReferenceDocumentWSD_error").innerHTML = "Please select valid file";
        return (false);
    }
    else {
        document.getElementById("ScannedReferenceDocumentWSD_error").innerHTML = "";
    }

});

$("#ScannedReferenceDocumentWOSD").on("blur", function () {
    //debugger;
    var addressProof = document.getElementById("ScannedReferenceDocumentWOSD").value.trim();
    if (addressProof == "") {
        document.getElementById("ScannedReferenceDocumentWOSD_error").innerHTML = "Please select valid file";
        return (false);
    }
    else {
        document.getElementById("ScannedReferenceDocumentWOSD_error").innerHTML = "";
    }

});

$("#ScannedReferenceDocumentWSD").change(function () 
{
    $("#ScannedReferenceDocumentWSD_error").html("");

    idFront = $(this).val().replace(/C:\\Fakepath\\/i, '');

    var regex = /(.*?)\.(pdf|jpeg|jpg|JPEG|doc|docx)$/;
    if (regex.test($(this).val()))
    {
        if (typeof (FileReader) != "undefined") 
        {
            if(this.files[0].size < 10485760)
            {
                var valueSize = (this.files[0].size) / 1024;
            }
            else
            {
                $("#ScannedReferenceDocumentWSD_error").text("");
                $('#ScannedReferenceDocumentWSD').val('');
                $("#ScannedReferenceDocumentWSD_error").text("File size should not exceeded from 10MB");
            } 

        } 
        else 
        {
            $('#ScannedReferenceDocumentWSD').val('');
        }
    }
    else 
    {
        $("#ScannedReferenceDocumentWSD_error").text("");
        $('#ScannedReferenceDocumentWSD').val('');
        $("#ScannedReferenceDocumentWSD_error").text("Invalid File Type");
    }
});

$("#ScannedReferenceDocumentWOSD").change(function () 
{
    $("#ScannedReferenceDocumentWOSD_error").html("");

    idFront = $(this).val().replace(/C:\\Fakepath\\/i, '');

    var regex = /(.*?)\.(pdf|jpeg|jpg|JPEG|doc|docx)$/;
    if (regex.test($(this).val()))
    {
        if (typeof (FileReader) != "undefined") 
        {
            if(this.files[0].size < 10485760)
            {
                var valueSize = (this.files[0].size) / 1024;
            }
            else
            {
                $("#ScannedReferenceDocumentWOSD_error").text("");
                $('#ScannedReferenceDocumentWOSD').val('');
                $("#ScannedReferenceDocumentWOSD_error").text("File size should not exceeded from 10MB");
            } 

        } 
        else 
        {
            $('#ScannedReferenceDocumentWOSD').val('');
        }
    }
    else 
    {
        $("#ScannedReferenceDocumentWOSD_error").text("");
        $('#ScannedReferenceDocumentWOSD').val('');
        $("#ScannedReferenceDocumentWOSD_error").text("Invalid File Type");
    }
});

$("#CustomerID").on("blur", function ()
{
    if ($("#CustomerID").val().trim() == "")
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $('#CustomerIdValErrMsg').html("Please enter Customer ID");
        return false;
    }
    else if (!$("#CustomerID").val().match(mappedCustomerId))
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $("#CustomerIdValErrMsg").html("Invalid Customer ID");
        return false;
    }
    else
    {
        $('#CustomerIdValErrMsg').html("");
    }
})

$("#Amount").on("blur", function ()
{
    if ($("#Amount").val().trim() == "")
    {
        $("#Amount_error").attr("style", "display:block");
        $('#Amount_error').html("Please enter Amount");
        return false;
    }
    else
    {
        $('#Amount_error').html("");
    }

})

$("#COMOCOPackageID").on("blur", function ()
{
    if (document.getElementById("COMOCOPackageID").value.trim() == "") 
    {
        document.getElementById("COMCOPackageID_error").innerHTML = "Please enter COMOCO Package ID";
    }
    else if (!(document.getElementById("COMOCOPackageID").value.match(forVehicleNo)))
    {
        document.getElementById("COMCOPackageID_error").innerHTML = "COMOCO Package ID should be alphanumeric";
    }
    else
    {
        document.getElementById("COMCOPackageID_error").innerHTML = "";
    }

})

$("#CautionAmountWOSD").on("blur", function ()
{
    if (document.getElementById("CautionAmountWOSD").value.trim() == "") 
    {
        document.getElementById("CautionAmountWOSD_error").innerHTML = "Please enter Caution Amount";
    }
    else
    {
        document.getElementById("CautionAmountWOSD_error").innerHTML = "";
    }

})

$("#CautionAmountWSD").on("blur", function ()
{
    if (document.getElementById("CautionAmountWSD").value.trim() == "") 
    {
        document.getElementById("CautionAmountWSD_error").innerHTML = "Please enter Caution Amount";
    }
    else
    {
        document.getElementById("CautionAmountWSD_error").innerHTML = "";
    }

})

$("#FinanceCharges").on("blur", function ()
{
    if ($("#FinanceCharges").val().trim() == "") 
    {
        document.getElementById("FinanceCharges_error").innerHTML = "Please enter Finance Charge";
        return false;
    }
    else if (!($("#FinanceCharges").val().match(number)))
    {
        document.getElementById("FinanceCharges_error").innerHTML = "Amount should be between 0 and 100";
        return false;
    }
    else if (Number($("#FinanceCharges").val())<0 || Number($("#FinanceCharges").val())>100)
    {
        document.getElementById("FinanceCharges_error").innerHTML = "Amount should be between 0 and 100";
        return false;
    }
    else
    {
        document.getElementById("FinanceCharges_error").innerHTML = "";
    }

})

$("#ServicesCharges").on("blur", function ()
{
    if ($("#ServicesCharges").val().trim() == "") 
    {
        document.getElementById("ServicesCharges_error").innerHTML = "Please enter Service Charge";
        return false;
    }
    else if (!($("#ServicesCharges").val().match(number)))
    {
        document.getElementById("ServicesCharges_error").innerHTML = "Amount should be between 0 and 100";
        return false;
    }
    else if (Number($("#ServicesCharges").val())<0 || Number($("#ServicesCharges").val())>100)
    {
        document.getElementById("ServicesCharges_error").innerHTML = "Amount should be between 0 and 100";
        return false;
    }
    else
    {
        document.getElementById("ServicesCharges_error").innerHTML = "";
    }

})

$("#NoOfCheques").on("blur", function ()
{
    if ($("#NoOfCheques").val().trim() == "") 
    {
        document.getElementById("NoOfCheques_error").innerHTML = "Please enter No. of cheque/ BDS /CR required";
        return false;
    }
    else if (!($("#NoOfCheques").val().match(number)))
    {
        document.getElementById("NoOfCheques_error").innerHTML = "Number should be between 1 and 100";
        return false;
    }
    else if (Number($("#NoOfCheques").val())<1 || Number($("#NoOfCheques").val())>100)
    {
        document.getElementById("NoOfCheques_error").innerHTML = "Number should be between 1 and 100";
        return false;
    }
    else
    {
        document.getElementById("NoOfCheques_error").innerHTML = "";
    }

})

function ValidateMandatoryFields() 
{
    debugger;

    var ret = true;

    if ($("#CustomerID").val().trim() == "")
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $('#CustomerIdValErrMsg').html("Please enter Customer ID");
        ret = false;
    }
    else if (!$("#CustomerID").val().match(mappedCustomerId))
    {
        $("#CustomerIdValErrMsg").attr("style", "display:block");
        $("#CustomerIdValErrMsg").html("Invalid Customer ID");
        ret = false;
    }
    else
    {
        $('#CustomerIdValErrMsg').html("");
    }

    if (document.getElementById("Amount").value.trim() == "") 
    {
        document.getElementById("Amount_error").innerHTML = "Please enter Amount";
        ret = false;
    }
    else
    {
        document.getElementById("Amount_error").innerHTML = "";
    }

    if (document.getElementById("COMOCOPackageID").value.trim() == "") 
    {
        document.getElementById("COMCOPackageID_error").innerHTML = "Please enter COMOCO Package ID";
        ret = false;
    }
    else if (!(document.getElementById("COMOCOPackageID").value.match(forVehicleNo)))
    {
        document.getElementById("COMCOPackageID_error").innerHTML = "COMOCO Package ID should be alphanumeric";
        ret = false;
    }
    else
    {
        document.getElementById("COMCOPackageID_error").innerHTML = "";
    }

    if ($("#LimitSetMode").val() == "1")//WithOutSecurityDeposit
    {
        if (document.getElementById("CautionAmountWOSD").value.trim() == "") 
        {
            document.getElementById("CautionAmountWOSD_error").innerHTML = "Please enter Caution Amount";
            ret = false;
        }
        else
        {
            document.getElementById("CautionAmountWOSD_error").innerHTML = "";
        }

        if (document.getElementById("ScannedReferenceDocumentWOSD").value.trim() == "") 
        {
            document.getElementById("ScannedReferenceDocumentWOSD_error").innerHTML = "Please select valid file";
            ret = false;
        }
        else 
        {
            document.getElementById("ScannedReferenceDocumentWOSD_error").innerHTML = "";
        }

        if (document.getElementById("FinanceCharges").value.trim() == "") 
        {
            document.getElementById("FinanceCharges_error").innerHTML = "Please enter Finance Charge";
            ret = false;
        }
        else if (!($("#FinanceCharges").val().match(number)))
        {
            document.getElementById("FinanceCharges_error").innerHTML = "Amount should be between 0 and 100";
            ret = false;
        }
        else if (Number($("#FinanceCharges").val())<0 || Number($("#FinanceCharges").val())>100)
        {
            document.getElementById("FinanceCharges_error").innerHTML = "Amount should be between 0 and 100";
            ret = false;
        }
        else
        {
            document.getElementById("FinanceCharges_error").innerHTML = "";
        }

    }
    else if ($("#LimitSetMode").val() == "2")//SecurityDeposit
    {
        if (document.getElementById("CautionAmountWSD").value.trim() == "") 
        {
            document.getElementById("CautionAmountWSD_error").innerHTML = "Please enter Caution Amount";
            ret = false;
        }
        else
        {
            document.getElementById("CautionAmountWSD_error").innerHTML = "";
        }

        if (document.getElementById("ScannedReferenceDocumentWSD").value.trim() == "") 
        {
            document.getElementById("ScannedReferenceDocumentWSD_error").innerHTML = "Please select valid file";
            ret = false;
        }
        else 
        {
            document.getElementById("ScannedReferenceDocumentWSD_error").innerHTML = "";
        }

        if ($("#NoOfCheques").val().trim() == "") 
        {
            document.getElementById("NoOfCheques_error").innerHTML = "Please enter No. of cheque/ BDS /CR required";
            ret = false;
        }
        else if (!($("#NoOfCheques").val().match(number)))
        {
            document.getElementById("NoOfCheques_error").innerHTML = "Number should be between 1 and 100";
            ret = false;
        }
        else if (Number($("#NoOfCheques").val())<1 || Number($("#NoOfCheques").val())>100)
        {
            document.getElementById("NoOfCheques_error").innerHTML = "Number should be between 1 and 100";
            ret = false;
        }
        else
        {
            document.getElementById("NoOfCheques_error").innerHTML = "";
        }

        if (document.getElementById("ServicesCharges").value.trim() == "") 
        {
            document.getElementById("ServicesCharges_error").innerHTML = "Please enter Service Charge";
            ret = false;
        }
        else if (!($("#ServicesCharges").val().match(number)))
        {
            document.getElementById("ServicesCharges_error").innerHTML = "Amount should be between 0 and 100";
            ret = false;
        }
        else if (Number($("#ServicesCharges").val())<0 || Number($("#ServicesCharges").val())>100)
        {
            document.getElementById("ServicesCharges_error").innerHTML = "Amount should be between 0 and 100";
            ret = false;
        }
        else
        {
            document.getElementById("ServicesCharges_error").innerHTML = "";
        }

            var cnt=0;
            $("#NoOfCardsTbl tbody tr").each(function ()
            {
                var row = $(this);

                var chequeBDSCRNumber = row.find("td:eq(1) input[type='text']").val();
                var chequeDate = row.find("td:eq(2) input[type='text']").val();

                if(chequeBDSCRNumber.trim()=='')
                {
                    document.getElementById('ChequeBDSCRNumber_error_'+cnt).innerHTML="This field cannot be left blank";
                    ret=false;
                }
                else
                {
                    if(!(chequeBDSCRNumber.match(forVehicleNo)))
                    {
                        document.getElementById('ChequeBDSCRNumber_error_'+cnt).innerHTML ="Invalid format for Cheque/ BDS/CR No.";
                        ret=false;
                    }
                    else
                    {
                        document.getElementById('ChequeBDSCRNumber_error_'+cnt).innerHTML="";
                    }
                }

                if(chequeDate.trim()=='')
                {
                    document.getElementById('ChequeBDSCRDate_error_'+cnt).innerHTML="This field cannot be left blank";
                    ret=false;
                }
                else
                {
                    document.getElementById('ChequeBDSCRDate_error_'+cnt).innerHTML="";
                }
                                      
                cnt=cnt+1;

            });

    }


    return ret;
}

function AddCardTbl()
{
          var ret=true;
          console.log('Inside AddCardTbl()');
           var cardsCount = $("#NoOfCheques").val();

            if ($("#NoOfCheques").val().trim() == "") 
            {
                document.getElementById("NoOfCheques_error").innerHTML = "Please enter No. of cheque/ BDS /CR required";
                ret=false;
            }
            else if (!($("#NoOfCheques").val().match(number)))
            {
                document.getElementById("NoOfCheques_error").innerHTML = "Number should be between 1 and 100";
                ret=false;
            }
            else if (Number($("#NoOfCheques").val())<1 || Number($("#NoOfCheques").val())>100)
            {
                document.getElementById("NoOfCheques_error").innerHTML = "Number should be between 1 and 100";
                ret=false;
            }
            else
            {
                document.getElementById("NoOfCheques_error").innerHTML = "";
            }


            if ($("#CustomerID").val().trim() == "")
            {
                $("#CustomerIdValErrMsg").attr("style", "display:block");
                $('#CustomerIdValErrMsg').html("Please enter Customer ID");
                ret=false;
            }
            else if (!$("#CustomerID").val().match(mappedCustomerId))
            {
                $("#CustomerIdValErrMsg").attr("style", "display:block");
                $("#CustomerIdValErrMsg").html("Invalid Customer ID");
                ret=false;
            }
            else
            {
                $('#CustomerIdValErrMsg').html("");
            }


           if(ret==false)
           {
              return ret;
           }

           var vehicles = [];

           if($("#dvRemarks").html().trim()!="")
           {
                   $("#OldVehicleDetails TBODY TR").each(function () {
                       var row = $(this);
                       vehicles.push({
                           CustomerID: document.getElementById("CustomerID").value.trim(),
                           Message: $("#Message").val(),
                           ChequeBDSCRNumber: row.find("TD").eq(0).html(),
                           ChequeBDSCRDate: row.find("TD").eq(1).html(),
                           NoOfCheques: cardsCount
                       })
                   });
              }
              else
              {
                   vehicles.push({
                               CustomerID: document.getElementById("CustomerID").value.trim(),
                               Message: $("#Message").val(),
                               ChequeBDSCRNumber: "",
                               ChequeBDSCRDate: "",
                               NoOfCheques: cardsCount
                           });
              }

               console.log(vehicles);


            $.ajax({
               type: 'POST',
               url: '@Url.Action("GetSetCreditLimitChequeDetailsPartialView", "COMCOManager")',
               contentType: "application/json; charset=utf-8",
               data: JSON.stringify(vehicles),
               dataType: "html",
               success: function (data, status, xhr) 
               {
                       var v = data;
                       if (status == 'success') 
                       {
                           document.getElementById("ViewNoOfCardsTbl").style.display = "block";
                           $("#ViewNoOfCardsTbl").html(data);
                           $('html, body').animate({
                               scrollTop: $("#ViewNoOfCardsTbl").offset().top
                           }, 2000);

                           $('#NoOfCheques').attr("readonly", true);
                           $("#btnAdd").attr("disabled", true);
                           document.getElementById("NoOfCardsTbl").className="datatable table table-striped table-bordered w-50 d-md-table b-block text-nowrap display table-responsive";
                           document.getElementById("btnSubmit").style.display="block";
                       }
                   },
               error: function (jqXhr, textStatus, errorMessage) 
               {
                   $("#ViewNoOfCardsTbl").html("");
                   $("#btnAdd").attr("disabled", false);
               }
           });
}

</script>