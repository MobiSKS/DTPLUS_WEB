@model HPCL.Common.Models.ViewModel.COMCOManager.COMCOCustomerMappingViewModel

<div class="col-lg-12 p-4 p-md-4">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Profile","COMCOManager")" class="text_primary">Map Customer</a></li>
            <li class="breadcrumb-item font-weight-light">Map Customer</li>
        </ul>
        @if (ViewBag.ErrorMessage != "" && ViewBag.ErrorMessage != null)
        {
            <div id="reason" class="mb-0 mt-3 text-center alert alert-danger">@ViewBag.ErrorMessage</div>
        }
        @if (ViewBag.SuccessMessage != "" && ViewBag.SuccessMessage != null)
        {
            <div id="reason" class="mb-0 mt-3 text-center alert alert-success">@ViewBag.SuccessMessage</div>
        }
        <div id="dvSuccess" class="mb-3 text-center alert alert-success mt-3" style="display:none;"></div>
        <div id="dvFailure" style="display:none;" class="alert alert-danger mt-3 text-center ml-3 mr-3"></div>
        @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "formValid", @class = "toBeHiddenOnSuccess" }))
        {
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Map Customer</p>
                        <div class="col-lg-12 col-md-12 col-12 pt-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">COMCO Merchant ID <sup class="text-danger">*</sup></label>
                                        <div class="col-sm-7 col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantID, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.MerchantID, "", new { @class = "error", @id = "MerchantIDValErrMsg" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Customer ID </label>
                                        <div class="col-sm-7 col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerID, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerID, "", new { @class = "error", @id = "CustomerIdValErrMsg" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center justify-content-center flex-wrap">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="submit" id="btnSearch" onclick="return SubmitValidations()">Search</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnReset" onclick="location.href='@Url.Action("COMCOCustomerMapping", "COMCOManager", new { reset="Y" })'">RESET</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">

                    @if (ViewBag.Reset != "Y")
                    {
                        @if (Model.Data.CustomerDetails.Count() > 0)
                        {
                            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-0 mb-3">
                                <div class="d-flex align-items-center flex-wrap mt-3">
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-5 col-12 mb-0">Zonal Office: </label>
                                            <div class="col-sm-6 col-md-6 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.ZonalOfficeName, new { @class = "form-control", @readonly="readonly" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-4 col-12 mb-0">Regional Office: </label>
                                            <div class="col-sm-7 col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.RegionalOfficeName, new { @class = "form-control", @readonly="readonly" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <label class="font-weight-normal col-md-4 col-12 mb-0">Outlet Name: </label>
                                            <div class="col-sm-7 col-md-7 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.RetailOutletName, new { @class = "form-control", @readonly="readonly" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <table class="table table-striped table-bordered table-responsive d-md-table" style="width:100%;word-wrap:break-word;table-layout:fixed;" id="CardEdit">
                                <thead style="background-color:lightgray;">
                                    <tr>
                                        <th style="display:none">S.No.</th>
                                        <th><input type="checkbox" id="checkAll" /></th>
                                        <th>Zonal Office</th>
                                        <th>Regional Office</th>
                                        <th>Customer ID</th>
                                        <th>Customer Name</th>
                                        <th>Name on Card</th>
                                        <th>Customer Address</th>
                                        <th>PIN Code</th>
                                    </tr>
                                </thead>
                                <tbody id="searchTableBody">
                                    @{
                                        int i = 0;
                                    }
                                    @foreach (var item in Model.Data.CustomerDetails)
                                    {
                                        i = i + 1;

                                        <tr>
                                            <td style="display:none">@i</td>
                                            <td><input type="checkbox" id="check_@i" /></td>
                                            <td class='cardNo'>@item.ZonalOfficeName</td>
                                            <td class='vechileNo'>@item.RegionalOfficeName</td>
                                            <td class='customerID'>@item.CustomerID</td>
                                            <td>@item.IndividualOrgName</td>
                                            <td>@item.NameOnCard</td>
                                            <td>@item.CustomerAddress</td>
                                            <td>@item.CommunicationPincode</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-3">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="MAPCustomers();">MAP CUSTOMERS</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="UnselectAllRows();">CANCEL</button>
                                </div>
                            </div>
                        }
                        else
                        {
                            if (Model.MerchantID != "")
                            {
                                <div class="alert alert-danger mt-3 text-center">
                                    @Model.Message
                                </div>
                            }
                        }

                    }

                </div>
            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>
<div class="clearfix"></div>
<script>
    var pageStatus="@ViewBag.Reset";//ViewBag.Reset has value "Y" for reset click, "A" for Add button click
    var activeRow="";
    $(document).ready(function ()
    {
         $('.table').DataTable({
            "lengthMenu": [10, 20, 50, 100, 200, 500],
            "oLanguage": {
                "sLengthMenu": "Display _MENU_ Records",
                "info": "Showing _START_ to _END_ of _TOTAL_ Records",
            }
        });

        var count = $('#CardEdit tr').length;
        //alert(count);

        if (count > 0)
        {
            $("#MerchantID").attr("readonly",true);
        }
        else
        {
            $("#MerchantID").removeAttr("readonly");
        }

    });

    $("#checkAll").click(function ()
    {
        $('input:checkbox').not(this).prop('checked', this.checked);
    });

    function SubmitValidations()
    {
        debugger;
        var ret=true;

        if (document.getElementById("MerchantID").value.trim() == "")
        {
            $("#MerchantIDValErrMsg").attr("style", "display:block");
            $("#MerchantIDValErrMsg").html("Please enter Merchant ID");
            ret=false;
        }
        else if (!$("#MerchantID").val().match(mappedMerchantID))
        {
            $("#MerchantIDValErrMsg").attr("style", "display:block");
            $("#MerchantIDValErrMsg").html("Invalid Merchant ID");
            ret=false;
        }
        else
        {
            $("#MerchantIDValErrMsg").html("");
        }

        if (document.getElementById("CustomerID").value.trim() != "")
        {
            if (!$("#CustomerID").val().match(mappedCustomerId))
            {
                $("#CustomerIdValErrMsg").attr("style", "display:block");
                $("#CustomerIdValErrMsg").html("Invalid Customer ID");
                ret=false;
            }
            else
            {
                $("#CustomerIdValErrMsg").html("");
            }
        }
        else
        {
            $("#CustomerIdValErrMsg").html("");
        }

        console.log(ret);
        return ret;
    }

    $("#CustomerID").on("blur", function ()
    {
        //debugger;
        if (document.getElementById("CustomerID").value.trim() != "")
        {
            if (!$("#CustomerID").val().match(mappedCustomerId))
            {
                $("#CustomerIdValErrMsg").attr("style", "display:block");
                $("#CustomerIdValErrMsg").html("Invalid Customer ID");
            }
            else
            {
                $("#CustomerIdValErrMsg").html("");
            }
        }
        else
        {
            $("#CustomerIdValErrMsg").html("");
        }

    });

    $("#MerchantID").on("blur", function ()
    {
        //debugger;
        if (document.getElementById("MerchantID").value.trim() == "")
        {
            $("#MerchantIDValErrMsg").attr("style", "display:block");
            $("#MerchantIDValErrMsg").html("Please enter Merchant ID");
        }
        else if (!$("#MerchantID").val().match(mappedMerchantID))
        {
            $("#MerchantIDValErrMsg").attr("style", "display:block");
            $("#MerchantIDValErrMsg").html("Invalid Merchant ID");
        }
        else
        {
            $("#MerchantIDValErrMsg").html("");
        }

    });

    function UnselectAllRows()
    {
        $('input:checkbox').prop('checked', false);
    }

    function MAPCustomers()
    {
        //alert("inside submit");
        var flag = "Y";
        typeCOMCOMapCustomer = [];
        var count=0;
         $("#CardEdit tbody tr").each(function () {
             //debugger;

            var row = $(this);
            if (row.find('input[type="checkbox"]').is(":checked"))
            {
                 var i = row[0].cells[0].textContent;
                 var customerID = row.find("td.customerID").text();

                 count=count+1;

                 typeCOMCOMapCustomer.push({ CustomerID: customerID });
            }
         });

         if(count==0)
         {
             alert("Please select at least one customer to Map.");
         }

        if (typeCOMCOMapCustomer.length > 0 && flag == "Y") {
            if (confirm('Are you sure you want to map selected customer(s) with this merchant?')) {
                $("#reason_error").html("");
                var updateReqmodel = { MerchantID: $("#MerchantID").val(), TypeCOMCOMapCustomer: typeCOMCOMapCustomer };
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("UpdateCOMCOMapCustomer", "COMCOManager")',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(updateReqmodel),
                    success: function (res)
                    {
                        console.log(res);
                        console.log(res.customer.reason);
                        if(res.customer.internel_Status_Code == 1000)
                        {
                            $("#dvSuccess").html(res.customer.reason);
                            $(".toBeHiddenOnSuccess").hide();
                            document.getElementById("dvSuccess").style.display = "block";
                            document.getElementById("dvFailure").style.display = "none";
                        }
                        else
                        {
                            $("#dvFailure").html(res.customer.reason);
                            document.getElementById("dvFailure").style.display = "block";
                            document.getElementById("dvSuccess").style.display = "none";
                        }

                    },
                    error: function (ex) {
                        alert('Error.' + ex);
                    }
                });
            }
        }


    };
</script>