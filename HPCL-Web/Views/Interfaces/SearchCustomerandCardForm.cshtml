@model HPCL.Common.Models.ViewModel.Interface.SearchCustomerandCardFormModel
@using Microsoft.AspNetCore.Http;

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Enrollments")" class="text_primary">Enrollments</a> </li>
            <li class="breadcrumb-item font-weight-light">Search Customer and Card Form</li>
        </ul>

        <form id="reportForm">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Search Customer and Card Form</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label id="lblRecordType" class="font-weight-normal col-md-3 col-12">Record Type<sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.RecordTypeId, new SelectList(Model.RecordTypeList, "entityId", "entityName"), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RecordTypeId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-3 col-12">Form Number</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.FormNumber, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.FormNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-3 col-12">State</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.StateID, new SelectList(Model.States, "StateID", "StateName"), new { @class = "form-control" })

                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-3 col-12">City</label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CityName, new { @class = "form-control", maxlength = "20" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnSearch">SEARCH</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnReset">RESET</button>
                                </div>

                            </div>
                        </div>
                        <div class="clearfix"></div>

                    </div>
                </div>

            </div>
        </form>
        <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3 toBeHiddenOnSuccess" id="customerandCardDetails">

        </div>
       
        <div class="clearfix"></div>
    </div>
</div>
<script type="text/javascript">

    $("#btnReset").click(function () {
        location.reload();

    });
    $("#btnSearch").click(function () {
        $("#reportForm").validate("submit");
        if ($("#reportForm").valid()) {
            var entityId = $("#RecordTypeId :selected").val();
            var formNumber = $("#FormNumber").val();
            var stateID = $("#StateID :selected").val();
            var cityName = $("#CityName").val();
           // var model = { EntityId: entityId, FormNumber: formNumber, StateID: stateID, CityName: cityName };
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetCustomerandCardFormDetails", "Interfaces")',
                contentType: "application/json; charset=utf-8",
                dataType: 'text',
                data: { EntityId: entityId, FormNumber: formNumber, StateID: stateID, CityName: cityName },
                success: function (data, status, xhr) {
                    console.log(data);
                    if (status == 'success') {
                       // debugger;
                        $("#customerandCardDetails").html(data);
                        $('html, body').animate({
                            scrollTop: $("#customerandCardDetails").offset().top
                        }, 2000);


                    }
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    alert("Error " + errorMessage);
                }
            });
        }
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
