@model HPCL.Common.Models.ViewModel.ParentCustomer.ParentCustomerTransactionViewModel
@using HPCL.Common.Resources


<div class="col-lg-12 px-0">
    <div class="bg-white p-2 p-md-4" style="overflow: hidden;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Financial","ParentCustomer")" class="text_primary">Financials</a> </li>
            <li class="breadcrumb-item font-weight-light">Transaction Details</li>
        </ul>
        <form>
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Transaction Details</p>

                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Parent Customer ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12 offset-md-1">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ParentCustomerID, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="parentCustomerId_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Customer ID </label>
                                        <div class="col-md-7 col-12 offset-md-1">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.ChildCustomerId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="childCustomerId_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="submit" id="btnSearch">@Label.Search</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnReset">@Label.Reset</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                </div>
                <div class="clearfix"></div>

            </div>
        </form>
        @if (Model.Data.Count() > 0)
        {
            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3" id="dvParentCustomerBalance" style="width:100%;">
                <table id="CustTransactionTbl" class="datatable table table-striped d-md-table d-block table-bordered table-responsive mt-3" style="width:100%;">
                    <thead>
                        <tr>
                            <th style="width:5%;"><input type="checkbox" id="checkAll" /></th>
                            <th>Child Customer ID</th>
                            <th>Child Customer Name</th>
                            <th>Control Card Number</th>
                            <th>Name on Card</th>
                            <th>Regional Office</th>
                            <th>Status</th>

                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 0;

                        }
                        @foreach (var item in Model.Data)
                        {
                            i = i + 1;
                            <tr>
                                <td><input type="checkbox" id="check_@i" onchange="checkChanged(this)" /></td>
                                <td>@item.ChildId</td>
                                <td>@item.ChildCustomerName</td>
                                <td>@item.ControlCardNo</td>
                                <td>@item.NameonCard</td>
                                <td>@item.RegionalOfficeName</td>
                                <td>@item.StatusName</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <div class="clearfix"></div>
            <div class="d-flex align-items-center justify-content-center mt-0">
                <div class="px-2">
                    <button class="btn btn_primary" type="button" id="btnView">VIEW</button>
                </div>

            </div>
        }

        else
        {
            @if (Model.Message != null)
            {
                <div class="mb-3 text-center alert alert-danger">
                    @Model.Message
                </div>
            }


        }
    </div>
    <div class="clearfix"></div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

    });
    $("#checkAll").click(function () {
        $('input:checkbox').not(this).prop('checked', this.checked);
    });
    function checkChanged(o){

        var chkStatus=o.checked;
        var chkAllStatus= $("#checkAll")[0].checked;
        if(!chkStatus && chkAllStatus)
            $("#checkAll")[0].checked=false;
    }
    $("#btnReset").click(function ()
    {
        window.location.href = '@Url.Action("ParentCustomerTransactionDetails", "ParentCustomer")';
    });

    $("#btnSearch").click(function () {

        //debugger;
        var parentCustomerID = document.getElementById("ParentCustomerID").value.trim();
        var childCustomerId = document.getElementById("ChildCustomerId").value.trim();
        if (parentCustomerID == "") {
            document.getElementById("parentCustomerId_error").innerHTML = "Parent Customer ID is required";
            $("#ParentCustomerID").focus;
            return (false);
        }
        else {
            if (!parentCustomerID.match(mappedCustomerId)) {
                $("#parentCustomerId_error").attr("style", "display:block");
                $("#parentCustomerId_error").html("Invalid Parent Customer ID");
                return (false);
            }
            else {
                document.getElementById("parentCustomerId_error").innerHTML = "";
            }

        }

        if (childCustomerId != "") {
            if (!childCustomerId.match(mappedCustomerId)) {
                $("#childCustomerId_error").attr("style", "display:block");
                $("#childCustomerId_error").html("Invalid Customer ID");
                return (false);
            }
            else {
                document.getElementById("childCustomerId_error").innerHTML = "";
            }

        }

    });
    $("#btnView").click(function () {
        var parentCustomerID = document.getElementById("ParentCustomerID").value.trim();
        objCustomerIds=[];
         $("#CustTransactionTbl tbody tr").each(function () {
             //debugger;

                 var row = $(this);
                 if (row.find('input[type="checkbox"]').is(":checked")) {

                 var customerId = row[0].cells[1].textContent;
                 objCustomerIds.push(customerId);

            }
         });
         debugger;
         

        var url = '@Html.Raw(@Url.Action("ViewParentChildTransactionDetails", "ParentCustomer",new { ParentCustomerID = "zzXXyyZZZZZZZzz", ChildCustomerIds="MNO"}))';
        url = url.replace("zzXXyyZZZZZZZzz", encodeURIComponent(parentCustomerID)).replace("MNO",objCustomerIds);
        window.location.href=url;
    });
    $("#ParentCustomerID").on("blur", function ()
    {
          //debugger;
          if (document.getElementById("ParentCustomerID").value.trim() == "")
          {
              $("#parentCustomerId_error").attr("style", "display:block");
              $("#parentCustomerId_error").html("Parent Customer ID is required");
              return false;
          }
          else if (!$("#ParentCustomerID").val().match(mappedCustomerId))
          {
              $("#parentCustomerId_error").attr("style", "display:block");
              $("#parentCustomerId_error").html("Invalid Parent Customer ID");
              return false;
          }
          else
          {
              $("#parentCustomerId_error").html("");
          }

    });
    $("#ChildCustomerId").on("blur", function ()
    {

          if(document.getElementById("ChildCustomerId").value.trim() != ""){
              if (!$("#ChildCustomerId").val().match(mappedCustomerId))
              {
                  $("#childCustomerId_error").attr("style", "display:block");
                  $("#childCustomerId_error").html("Invalid Customer ID");
                  return false;
              }
              else
              {
                  $("#childCustomerId_error").html("");
              }
          }
           else
              {
                  $("#childCustomerId_error").html("");
              }

    });

</script>