@model HPCL.Common.Models.ViewModel.DriverCardCustomer.DealerWiseDriverCardRequestModel
@using HPCL.Common.Resources

@{
    ViewData["Title"] = "Dealer wise Driver Card Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 px-0">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "DriverCardCustomer")" class="text_primary">Driver Card Customer</a> </li>
            <li class="breadcrumb-item font-weight-light">Dealer wise Driver Card Request</li>
        </ul>
        <form name="DealerDriverCardRequestsForm" method="post" asp-action="DealerDriverCardRequests" class="w-100">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-3">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Dealer wise Driver Card Request</p>
                        <div class="alert alert-danger alert-cust-success" id="dvRemarks" style="@(Model.Remarks=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Remarks)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Merchant ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="MerchantId_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">No. of Cards <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NoofCards, new { @class = "form-control", maxlength = "3", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="NoofCards_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="submit" onclick="return CheckValidations();" id="btnSave">@Label.ProcessRequest</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="ResetFields();">@Label.Reset</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </form>
        <div class="clearfix"></div>
    </div>
</div>

<script type="text/javascript">
    $('#NoofCards').on("cut copy paste",function(e) {
      e.preventDefault();
    });
    function ResetFields() {

        $("#NoofCards").val("");
        $("#MerchantId").val("");
        document.getElementById("NoofCards_error").innerHTML = "";
        document.getElementById("MerchantId_error").innerHTML = "";
    };

    $("#MerchantId").focus(function(){
       $("#btnSave").attr("disabled", true);
    });

    $("#MerchantId").on("blur", function () {
        debugger;
        var ret=true;
        localStorage.setItem("MERCHANTIDFOUND", "0");
        localStorage.setItem("MERCHANTHOTLISTED", "1");
        localStorage.setItem("MERCHANTHOTLISTEDREASON", "");
        $("#btnSave").attr("disabled", true);

        var merchantId = document.getElementById("MerchantId").value;
        if (merchantId == "") 
        {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            ret=false;
        }
        else 
        {
            if (document.getElementById("MerchantId").value.substring(0, 1) != "3") 
            {
                document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                ret=false;
            }
            else
            {
                if (document.getElementById("MerchantId").value.length < 10) 
                {
                    document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                    ret=false;
                }
                else
                {
                    if(!(document.getElementById('MerchantId').value).match(number))
                    {
                        document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                        ret=false;
                    }
                    else
                    {
                        document.getElementById("MerchantId_error").innerHTML = "";
                    }
                }
            }
        }
        

        if(ret==true)
        {

            $.ajax({
                type: 'POST',  // http method
                url: '@Url.Action("GetMerchantDetailsByMerchantId", "MyHpOTCCardCustomer")',
                data: { MerchantID: merchantId },  // data to submit
                dataType: "json",
                success: function (data, status, xhr) 
                {
                    console.log(data);
                    console.log(status);

                    if (status == 'success') 
                    {
                        if (data == "Failed to load Merchant Details") 
                        {
                            document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                            localStorage.setItem("MERCHANTIDFOUND", "0");
                        }
                        else if(data.status==1)
                        {
                            document.getElementById("MerchantId_error").innerHTML = "";
                            localStorage.setItem("MERCHANTIDFOUND", "1");
                        }
                        else
                        {
                            document.getElementById("MerchantId_error").innerHTML = data.reason;
                            localStorage.setItem("MERCHANTHOTLISTED", "0");
                            localStorage.setItem("MERCHANTIDFOUND", "0");
                            localStorage.setItem("MERCHANTHOTLISTEDREASON", data.reason);
                        }
                    }
                    else 
                    {
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                        localStorage.setItem("MERCHANTIDFOUND", "0");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) 
                {
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    localStorage.setItem("MERCHANTIDFOUND", "0");
                },
                statusCode: 
                {
                    1024: function () {
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                        localStorage.setItem("MERCHANTIDFOUND", "0");
                    }
                }
            });

        }

        $("#btnSave").attr("disabled", false);

    });
    
    function CheckValidations() {
        debugger;

        var ret = true;

        if (document.getElementById('MerchantId').value == "") 
        {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            ret = false;
        }
        else 
        {
            if (document.getElementById("MerchantId").value.substring(0, 1) != "3") 
            {
                document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                ret = false;
            }
            else 
            {
                if (document.getElementById("MerchantId").value.length < 10) 
                {
                   document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                   ret = false;
                }
                else 
                {
                    if(!(document.getElementById('MerchantId').value).match(number))
                    {
                        document.getElementById("NoofCards_error").innerHTML = "Invalid Merchant ID";
                        ret = false;
                    }
                    else
                    {
                        if (localStorage.getItem("MERCHANTHOTLISTED") == 0) 
                        {
                            if(localStorage.getItem("MERCHANTHOTLISTEDREASON")=="")
                            {
                               document.getElementById("MerchantId_error").innerHTML = "Merchant ID Hotlisted";
                               ret = false;
                            }
                            else
                            {
                                document.getElementById("MerchantId_error").innerHTML = localStorage.getItem("MERCHANTHOTLISTEDREASON");
                                ret = false;
                            }
                        }
                        else if (localStorage.getItem("MERCHANTIDFOUND") == 0)
                        {
                            document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("MerchantId_error").innerHTML = "";
                        }
                    }
                }
            }

         }


        if (document.getElementById('NoofCards').value.trim() == "") 
        {
            document.getElementById("NoofCards_error").innerHTML = "No. of Cards cannot be left blank";
            ret = false;
        }
        else 
        {
            if (Number(document.getElementById('NoofCards').value) < 10 || Number(document.getElementById('NoofCards').value) > 999) 
            {
                document.getElementById("NoofCards_error").innerHTML = "No. Of Driver Cards should be 10 to 999";
                ret = false;
            }
            else 
            {
                document.getElementById("NoofCards_error").innerHTML = "";
            }
        }

        return ret;
    }

    $("#NoofCards").on("blur", function () 
    {
        //debugger;
        if (document.getElementById('NoofCards').value.trim() == "") 
        {
            document.getElementById("NoofCards_error").innerHTML = "No. of Cards cannot be left blank";
        }
        else 
        {
            if (Number(document.getElementById('NoofCards').value) < 10 || Number(document.getElementById('NoofCards').value) > 999) 
            {
                document.getElementById("NoofCards_error").innerHTML = "No. Of Driver Cards should be 10 to 999";
            }
            else 
            {
                document.getElementById("NoofCards_error").innerHTML = "";
            }
        }

    });
</script>