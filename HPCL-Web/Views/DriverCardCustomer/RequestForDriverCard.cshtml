@model HPCL.Common.Models.ViewModel.DriverCardCustomer.RequestForDriverCardModel
@using HPCL.Common.Resources;
@{
    ViewData["Title"] = "Request for Driver Cards";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 px-0">
    <div class="bg-white p-2 p-md-4" style="background: #edecec !important;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "DriverCardCustomer")" class="text_primary">Driver Card Customer</a> </li>
            <li class="breadcrumb-item font-weight-light">Request for Driver Cards</li>
        </ul>
        <form name="addRequestForDriverCardForm" method="post" asp-action="RequestForDriverCard" class="w-100">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">Request for Driver Cards</p>
                        <div class="alert alert-danger mt-3 text-center" id="dvRemarks" style="@(Model.Remarks=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Remarks)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-3 bg-white">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Region Name <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.DropDownListFor(m => m.CustomerRegionID, new SelectList(Model.RegionMdl, "RegionalOfficeID", "RegionalOfficeName"), new { @class = "form-control" })
                                                <span class="error" id="CustomerRegionID_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">No. of Driver Cards <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.NoofCards, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="NoofCards_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="submit" onclick="return CheckValidations();">@Label.ProcessRequest</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="ResetFields();">@Label.Reset</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </form>
        <div class="clearfix"></div>
    </div>
</div>

@*@if (Model.Remarks!="")
    {
        dvRemarks.style = "display:block";
    }*@

<script type="text/javascript">
    $('#NoofCards').on("cut copy paste",function(e) {
      e.preventDefault();
    });
    function ResetFields() 
    {
       window.location.href = '@Url.Action("RequestForDriverCard", "DriverCardCustomer")';
    };


    $("#CustomerRegionID").change(function () {
        var id = this.value;
        if (id != 0) {
            document.getElementById("CustomerRegionID_error").innerHTML = "";
        }
    });

    $('select').SumoSelect({
     placeholder: '--Select--',
     search: true,
     searchText: 'Enter Text here.'
    });

    function CheckValidations() {
        debugger;

        var ret = true;

        if (document.getElementById('CustomerRegionID').value == "" || document.getElementById('CustomerRegionID').value == "0") {
            document.getElementById("CustomerRegionID_error").innerHTML = "Select Region Name";
            ret = false;
        }
        else {
            document.getElementById("CustomerRegionID_error").innerHTML = "";
        }


        if (document.getElementById('NoofCards').value.trim() == "") {
            document.getElementById("NoofCards_error").innerHTML = "Enter Number of Driver Cards need to be created";
            ret = false;
        }
        else {
            if (Number(document.getElementById('NoofCards').value) < 1 || Number(document.getElementById('NoofCards').value) > 1000) {
                document.getElementById("NoofCards_error").innerHTML = "No. of Driver Cards should be 1 to 1000";
                ret = false;
            }
            else if(!(document.getElementById('NoofCards').value).match(number)){
                document.getElementById("NoofCards_error").innerHTML = "Invalid Number of Cards";
                ret = false;
            }
            else {
                document.getElementById("NoofCards_error").innerHTML = "";
            }
        }

        return ret;
    }
    
    $("#NoofCards").on("blur", function () {
        //debugger;
        if (document.getElementById('NoofCards').value.trim() == "") 
        {
            document.getElementById("NoofCards_error").innerHTML = "Enter Number of Driver Cards need to be created";
            return false;
        }
        else 
        {
            if(!(document.getElementById('NoofCards').value).match(number))
            {
                document.getElementById("NoofCards_error").innerHTML = "Invalid Number of Cards";
                ret = false;
            }
            else if (Number(document.getElementById('NoofCards').value) < 1 || Number(document.getElementById('NoofCards').value) > 1000) 
            {
                document.getElementById("NoofCards_error").innerHTML = "No. of Driver Cards should be 1 to 1000";
                return false;
            }
            else 
            {
                document.getElementById("NoofCards_error").innerHTML = "";
            }
        }

    });
</script>