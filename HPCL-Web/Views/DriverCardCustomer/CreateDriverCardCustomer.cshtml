@model HPCL.Common.Models.ViewModel.DriverCardCustomer.DriverCardCustomerModel
@using HPCL.Common.Resources
<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "DriverCardCustomer")" class="text_primary">Driver Card Customer</a> </li>
            <li class="breadcrumb-item font-weight-light">Create Driver Card Customer </li>
        </ul>
        <form name="DriverCardCustomerCreationForm" id="DriverCardCustomerCreationForm" method="post" asp-action="CreateDriverCardCustomer" class="w-100" autocomplete="off" enctype="multipart/form-data">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Create Driver Card Customer</p>
                        <div class="alert alert-danger alert-cust-success" id="dvRemarks" style="@(Model.Remarks=="" ? "display:none":"display:block")">
                            @Html.DisplayFor(m => m.Remarks)
                        </div>
                        <div class="col-lg-12 col-md-12 col-12 py-3">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-12 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-2 col-12">Merchant ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-3 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="MerchantId_error"></span>
                                            </div>
                                        </div>
                                        <div class="col-lg-7 col-12 px-0">
                                            <div class="d-flex align-items-center flex-wrap">
                                                <div class="px-2">
                                                    <button class="btn btn_primary" type="button" id="btnSearch">@Label.Search</button>
                                                </div>
                                                <div class="px-2">
                                                    <button class="btn btn_primary" type="button" id="btnReset">@Label.Reset</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">

                            </div>
                            <div id="dvHeaderDetails" style="@(Model.LoggedInAs=="MERCHANT" ? "display:block":"display:none")">
                                <div class="d-flex align-items-center flex-wrap pt-3">
                                    <div class="col-lg-4 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-4 col-12 text-right px-0">
                                                Retail Outlet Name
                                            </div>
                                            <div class="col-md-8 col-12">
                                                @Html.TextBoxFor(m => m.OutletName, new { @class ="form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-4 col-12 text-right px-0">
                                                Zonal Office
                                            </div>
                                            <div class="col-md-8 col-12 col-12">
                                                @Html.TextBoxFor(m => m.Zone, new { @class ="form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12 px-0">
                                        <div class="d-flex align-items-center flex-wrap">
                                            <div class="font-weight-bold col-md-4 col-12 text-right px-0">
                                                Regional Office
                                            </div>
                                            <div class="col-md-8 col-12 col-12">
                                                @Html.TextBoxFor(m => m.RegionalOffice, new { @class ="form-control", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div id="dvOtherDetails" style="@(Model.LoggedInAs=="MERCHANT" ? "display:block":"display:none")">
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Application Details</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Form Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.FormNumber, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="formNumber_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Card Number <sup class="text-danger">*</sup></label>
                                            <div class="col-md-6 col-12 pr-0">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control", @readonly = "readonly" })
                                                    <span class="error" id="CardNo_error"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <button class="btn btn_primary" type="button" id="btnCard1" style="height:30px;" data-toggle="modal" data-target="#myModalCard1" onclick="LoadCard1Deatils()">ADD</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Driver Name <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        <div class="custom_select">
                                                            @Html.DropDownListFor(x => x.IndividualOrgNameTitle, new[]{
                                                               new SelectListItem(){ Text = "Title", Value = "0" },
                                                               new SelectListItem(){ Text = "Mr", Value = "Mr"},
                                                               new SelectListItem(){ Text = "Ms", Value = "Ms"},
                                                               new SelectListItem(){ Text = "M/s", Value = "M/s"},
                                                               }, null, new { @class = "form-control px-0" })
                                                        </div>
                                                        <span class="error" id="salutaion_error"></span>
                                                    </div>
                                                    <div class="col-8">
                                                        @Html.TextBoxFor(m => m.IndividualOrgName, new { @class = "form-control", autocomplete = "off", maxlength = "80" })
                                                        <span class="error" id="IndividualOrgName_error"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Income Tax PAN <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.IncomeTaxPan, new { @class = "form-control", @style = "text-transform:uppercase", autocomplete = "off", maxlength = "10" })
                                                    <span class="error" id="incomeTaxPan_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Communication Address</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">City <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationCityName, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                                    <span class="error" id="communicationCityName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Pin Code <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationPincode, new { @class = "form-control", maxlength = "6", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="communicationPincode_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">State <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.CommunicationStateId, new SelectList(Model.CustomerStateMdl, "StateID", "StateName"), new { @class = "form-control" })
                                                    <span class="error" id="comm_states_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Email <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationEmailid, new { @class = "form-control", @style = "text-transform:lowercase", autocomplete = "off", maxlength = "50" })
                                                    <div class="error" id="comm_email_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Ph (Off) </label>
                                            <div class="col-md-8 col-12">
                                                <div class="row">
                                                    <div class="col-4">
                                                        @Html.TextBoxFor(m => m.CommunicationDialCode, new { @class = "form-control", maxlength = "4", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <div class="error" id="CommunicationDialCode_error"></div>
                                                    </div>
                                                    <div class="col-8 pl-0">
                                                        @Html.TextBoxFor(m => m.CommunicationPhonePart2, new { @class = "form-control", maxlength = "8", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                        <div class="error" id="CommunicationPhonePart2_error"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Mobile <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CommunicationMobileNo, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <div class="error" id="comm_mobileNumber_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Driving License <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.DrivingLicence, new { @class = "form-control", maxlength = "20", autocomplete = "off", @style = "text-transform:uppercase" })
                                                    <div class="error" id="DrivingLicence_error"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Address <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @*<textarea class="form-control" id="Textarea2" rows="3"></textarea>*@
                                                    @Html.TextBoxFor(m => m.CommunicationAddress1, new { @class = "form-control", autocomplete = "off", maxlength = "100" })
                                                    <span class="error" id="comm_address1_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0 pt-1">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Address Proof Upload</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Document Type <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.DropDownListFor(m => m.AddressProofType, new SelectList(Model.DocumentTypeMdl, "ProofTypeId", "ProofTypeName"), new { @class = "form-control" })
                                                    <span class="error" id="AddressProofType_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                     <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">File Name <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.AddressProofDocumentNo, new { @class = "form-control", autocomplete = "off", maxlength = "80" })
                                                    <span class="error" id="AddressProofDocumentNo_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="d-flex align-items-center flex-wrap">
                                   <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-start flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12 pt-2">Address Proof <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @*<input type="file" class="form-control-file" id="exampleFormControlFile1">
                                                        <span class="error" id="DocumentType_error"></span>*@
                                                    @Html.TextBoxFor(m => m.AddressProof, new { @id = "AddressProof", @class = "form-control-file", Type = "file" })
                                                    <span class="error" id="AddressProof_error"></span>
                                                    @*@Html.ValidationMessageFor(m => m.AddressProof, "", new { @class = "text-danger" })*@
                                                </div>
                                                <p class="mb-0">Only pdf,gif,png,jpeg,jpg,doc,docx file supported. <br />File size should not be greater than 10 MB.</p>
                                            </div>
                                        </div> 
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">DTPlus Customer Details</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-12 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-1">
                                            <label class="font-weight-normal col-md-2 col-12">If DTP Customer <sup class="text-danger">*</sup></label>
                                            <div class="col-md-10 col-12">
                                                <div class="form-check form-check-inline">
                                                    @*<input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">*@
                                                    @Html.RadioButtonFor(m => m.IfDTPCustomer, "Yes", new { @id = "rbtnDTPCustomerYes" })
                                                    <label class="form-check-label ml-2" for="inlineRadio1">Yes</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    @*<input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">*@
                                                    @Html.RadioButtonFor(m => m.IfDTPCustomer, "No", new { @id = "rbtnDTPCustomerNo" })
                                                    <label class="form-check-label ml-2" for="inlineRadio2">No</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.ExistingCustomerId, new { @class = "form-control", autocomplete = "off", maxlength = "10", onkeypress = "return isNumberKey(event)" })
                                                    <span class="error" id="CustomerId_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Customer Name <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                                    <span class="error" id="CustomerName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3">
                        <div class="border-1 rounded border-grey pb-0">
                            <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Beneficiary Details</p>
                            <div class="col-lg-12 col-md-12 col-12 pt-2 pb-0">
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Beneficiary Name <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.BeneficiaryName, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                                    <span class="error" id="BeneficiaryName_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Relation with Beneficiary <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.RelationWithBeneficiary, new { @class = "form-control", autocomplete = "off" })
                                                    <span class="error" id="RelationWithBeneficiary_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center flex-wrap">
                                    <div class="col-lg-6 col-12">
                                        <div class="d-flex align-items-center flex-wrap mb-3">
                                            <label class="font-weight-normal col-md-4 col-12">Beneficiary Mobile <sup class="text-danger">*</sup></label>
                                            <div class="col-md-8 col-12">
                                                <div class="custom_select">
                                                    @Html.TextBoxFor(m => m.BeneficiaryMobile, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                    <span class="error" id="BeneficiaryMobile_error"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="d-flex align-items-center justify-content-center mt-3 mb-0">
                        <div class="px-2">
                            <button class="btn btn_primary" type="submit" onclick="return ValidateMandatoryFields()">@Label.Submit</button>
                        </div>
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" id="btnFooterReset">@Label.Reset</button>
                        </div>
                    </div>
                </div>
                <div style="display:none;">@Html.TextBoxFor(m => m.RegionalOfficeId, new { id = "RegionalOfficeId" })</div>
                <div style="display:none;">@Html.TextBoxFor(m => m.LoggedInAs, new { id = "LoggedInAs" })</div>
            </div>

            <!-- Modal : Card1 -->
            <div class="modal fade" id="myModalCard1" role="dialog">
                <div class="modal-dialog modal-lg">
                    
                    <!-- Modal content-->
                    <div class="modal-content" style='overflow:scroll; height:400px;'>
                        <div class="modal-header">
                            <h5 class="modal-title">Driver Cards</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                         </div>
                        <div class="modal-body">
                            <input type='text' id='txt_searchCard' placeholder='Search Card Number' class="form-control mb-3" onkeypress='return isNumberKey(event)' onkeyup='SearchCardFunction()'>
                            <table class="table table-bordered text-nowrap" id="CardsTable1">
                                @*style="display: none"*@
                                <thead>
                                    <tr>
                                        <th>S.No</th>
                                        <th>Card Number</th>
                                    </tr>
                                </thead>
                                <tbody id="cardDetails">
                                </tbody>
                            </table>
                        </div>
                       <!--<div class="modal-footer">
                            <button type="button" class="btn btn_primary" data-dismiss="modal">Close</button>
                        </div>-->
                    </div>

                </div>
            </div>
            <!-- Modal : Card1 -->

        </form>
        <div class="clearfix"></div>
    </div>
</div>

<script type="text/javascript">
    var dlFormat = /(?=[a-zA-Z0-9]{4,9}$)(?=^..[0-9]{2})(?=(.*[0-9]){4})(?=(.*[A-Za-z]){0,2})(^(?!0{9}))/;

    $(document).ready(function () {
        $("#DriverCardCustomerCreationForm").on("keypress", function (event) {
            var keyPressed = event.keyCode || event.which;
            if (keyPressed === 13) {
                console.log("You pressed the Enter key!!");
                event.preventDefault();
                return false;
            }
        });

        if (document.getElementById("LoggedInAs").value == "MERCHANT") {
            $('#MerchantId').attr('readonly', 'true');
        }

        if (!document.getElementById("rbtnDTPCustomerYes").checked && !document.getElementById("rbtnDTPCustomerNo").checked) {
            document.getElementById("rbtnDTPCustomerYes").checked = true;
            document.getElementById("ExistingCustomerId").readOnly = false;
        }
        else if (document.getElementById("rbtnDTPCustomerYes").checked)
        {
            document.getElementById("ExistingCustomerId").readOnly = false;
        }
        else if (document.getElementById("rbtnDTPCustomerNo").checked) {
            $('#ExistingCustomerId').attr('readonly', 'true');
            document.getElementById("ExistingCustomerId").value = "";
            document.getElementById("CustomerName").value = "";
        }


        $('input[name="IfDTPCustomer"]:radio').change(function () {

            var selected = $("input[name='IfDTPCustomer']:checked").val()
            //alert(selected);
            if (selected == "Yes") {
                document.getElementById("ExistingCustomerId").readOnly = false;
            }
            else if (selected == "No") {
                document.getElementById("ExistingCustomerId").readOnly = true;
                document.getElementById("ExistingCustomerId").value = "";
                document.getElementById("CustomerName").value = "";
            }

            document.getElementById("CustomerId_error").value = "";
        });

        if($("#dvRemarks").html().trim()!="")
        {
             $("#btnSearch").click();
        }

    });

    $("#btnReset").click(function () {
        document.getElementById("Zone").value = "";
        document.getElementById("RegionalOffice").value = "";
        document.getElementById("OutletName").value = "";
        document.getElementById("RegionalOfficeId").value = "";
        dvOtherDetails.style.display = "none";
        dvHeaderDetails.style.display = "none";
        document.getElementById("MerchantId_error").innerHTML = "";
        if (document.getElementById("LoggedInAs").value == "MERCHANT") {
            $("#MerchantId").prop('readonly', true);
        }
        else {
            $("#MerchantId").prop('readonly', false);
            document.getElementById("MerchantId").value = "";
        }
        ClearFields();
    });

    $("#btnFooterReset").click(function () {
        ClearFields();
    });

    $('#MerchantId').keypress(function (e) {
        if (e.keyCode == 13) {  // detect the enter key
            $('#btnSearch').click();
        }
    });

    $("#btnSearch").click(function () {
        //debugger;
        var merchantId = document.getElementById("MerchantId").value;
        if (merchantId == "") {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            //$("#merchantId").focus;
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("MerchantId").value.substring(0, 1) != "3") {
            document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
            document.getElementById("MerchantId").focus();
            return (false);
        }

        if (document.getElementById("MerchantId").value.length < 10) {
            document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
            document.getElementById("MerchantId").focus();
            return (false);
        }

        //var found = false;

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetMerchantDetailsByMerchantId", "DriverCardCustomer")',
            data: { MerchantID: merchantId },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {
                    document.getElementById("Zone").value = data.zonalOfficeName;
                    document.getElementById("RegionalOffice").value = data.regionalOfficeName;
                    document.getElementById("OutletName").value = data.retailOutletName;
                    document.getElementById("RegionalOfficeId").value = data.regionalOfficeId;
                    $("#MerchantId").prop('readonly', true);
                    dvOtherDetails.style.display = "block";
                    dvHeaderDetails.style.display = "block";
                    document.getElementById("MerchantId_error").innerHTML = "";

                    if (data == "Failed to load Merchant Details") {
                        document.getElementById("Zone").value = "";
                        document.getElementById("RegionalOffice").value = "";
                        document.getElementById("OutletName").value = "";
                        document.getElementById("RegionalOfficeId").value = "";
                        $("#MerchantId").prop('readonly', false);
                        dvOtherDetails.style.display = "none";
                        dvHeaderDetails.style.display = "none";
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    }
                }
                else {
                    $("#MerchantId_error").html("");
                    document.getElementById("Zone").value = "";
                    document.getElementById("RegionalOffice").value = "";
                    document.getElementById("OutletName").value = "";
                    $("#MerchantId").prop('readonly', false);
                    document.getElementById("RegionalOfficeId").value = "";
                    dvOtherDetails.style.display = "none";
                    dvHeaderDetails.style.display = "none";
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("Zone").value = "";
                document.getElementById("RegionalOffice").value = "";
                document.getElementById("OutletName").value = "";
                $("#MerchantId").prop('readonly', false);
                document.getElementById("RegionalOfficeId").value = "";
                dvOtherDetails.style.display = "none";
                dvHeaderDetails.style.display = "none";
                document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("Zone").value = "";
                    document.getElementById("RegionalOffice").value = "";
                    document.getElementById("OutletName").value = "";
                    $("#MerchantId").prop('readonly', false);
                    document.getElementById("RegionalOfficeId").value = "";
                    dvOtherDetails.style.display = "none";
                    dvHeaderDetails.style.display = "none";
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                }
            }
        });


    });

    $("#FormNumber").on("blur", function () {
        //debugger;
        var formNumber = document.getElementById("FormNumber").value.trim();
        if (formNumber == "") {
            document.getElementById("formNumber_error").innerHTML = "Form Number field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }

        if (document.getElementById("FormNumber").value.substring(0, 1) == "0") {
            document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
            return false;
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }

        if (document.getElementById("FormNumber").value.length < 10) {
            document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
            return false;
        }
        else {
            document.getElementById("formNumber_error").innerHTML = "";
        }

        localStorage.setItem("FORMNOALREADYUSED", "1");

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckformnumberDuplication", "DriverCardCustomer")',
            data: { FormNumber: formNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {

                    if (data.status == "0") {

                        document.getElementById("formNumber_error").innerHTML = "Form Number already exists";
                        localStorage.setItem("FORMNOALREADYUSED", "0");
                    }
                    else {
                        document.getElementById("formNumber_error").innerHTML = "";
                    }
                }
                else {

                }
            },
            error: function (xhr, ajaxOptions, thrownError) {

            },
            statusCode: {
                1024: function () {
                    
                }
            }
        });

    });

    function LoadCard1Deatils() {
        debugger;

        if (document.getElementById("MerchantId").value.trim() == "") {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            //$("#MerchantId").focus;
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("RegionalOfficeId").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Region Id is required";
            return (false);
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }


        var regionalOfficeId = document.getElementById("RegionalOfficeId").value;
        var merchantId = document.getElementById("MerchantId").value;


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetAvailableDriverCardByRegionalId", "DriverCardCustomer")',
            data: { RegionalId: regionalOfficeId, MerchantID : merchantId},
            dataType: "json",
            success: function (data, status, xhr) {
                //debugger;
                console.log(data);
                $("#CardsTable1 td").parent().remove();
                //console.log('Praveen');

                //document.getElementById("NoOfCardsTbl").deleteTHead();
                //console.log(data.lstCardDetails);

                for (var i = 0; i < data.lstCardDetails.length; i++) {

                    var rows = "<tbody><tr>"
                        + "<td><span class='rowData'>" + (i + 1) + "</span></td>"
                        + "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='GetCard1Details(this)' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"
                    //+ "<td><span class='rowData CustReferenceNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></td>"
                    //+ "<td class='nav-item'><a class='CardNumber' data-toggle='tab' href='#BasicInformation' onclick='ViewCardDetails(this," + s + ")' role='tab'><span class='rowCardNo'>" + (data.lstCardDetails[i].cardNo || '') + "</span></a></td></tr></tbody>"


                    $('#CardsTable1').append(rows);

                    //console.log(rows);
                }


            },
            error: function (jqXhr, textStatus, errorMessage) {
                alert("Error Populating card Data");
            }


        });


    }
    function GetCard1Details(o) {
        debugger;
        var cardNo = o.innerText;

        console.log(cardNo);

        $('#CardNo').val(cardNo);
        $('#txt_searchCard').val('');
        document.getElementById("CardNo_error").innerHTML = "";
        $('#myModalCard1').modal('hide');
    }

    $("#CommunicationEmailid").on("blur", function () {
        //debugger;
        var communicationEmail = document.getElementById("CommunicationEmailid").value.trim();
        if (communicationEmail == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "";
        }

        if (communicationEmail.match(email)) {
            document.getElementById("comm_email_error").innerHTML = "";
            //return true
        }
        else {
            document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
            return (false);
        }

        var emailUsed = false;
        localStorage.setItem("EMAILIDALREADYUSED", "1");

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckEmailDuplication", "DriverCardCustomer")',
            data: { Emailid: communicationEmail },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                if (status == 'success') {

                    //if (data == "Failed to load Customer Details")
                    //console.log('Test');
                    //console.log(data.status);
                    //console.log(data.reason);
                    if (data.status == "0") {
                        emailUsed = true;
                        document.getElementById("comm_email_error").innerHTML = "Email already exists";
                        localStorage.setItem("EMAILIDALREADYUSED", "0");
                    }
                    else {
                        emailUsed = false;
                        document.getElementById("comm_email_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    document.getElementById("comm_email_error").innerHTML = "Email already exists";
                    emailUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("comm_email_error").innerHTML = "Email already exists";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("comm_email_error").innerHTML = "Email already exists";
                }
            }
        });*@


    });

    function ValidateMandatoryFields() {
        debugger;

        var ret = true;

        if (document.getElementById("MerchantId").value.trim() == "") {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            //document.getElementById("MerchantId").focus();
            ret = false;
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("Zone").value == "") {
            document.getElementById("MerchantId_error").innerHTML = "Click search button to load merchant details";
            ret = false;
        }
        else {
            document.getElementById("MerchantId_error").innerHTML = "";
        }

        if (document.getElementById("FormNumber").value.trim() == "") 
        {
            document.getElementById("formNumber_error").innerHTML = "Form Number field cannot be left blank";
            ret = false;
        }
        else 
        {
            
            if (document.getElementById("FormNumber").value.substring(0, 1) == "0") 
            {
                document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                ret = false;
            }
            else 
            {
                if (document.getElementById("FormNumber").value.length < 10) 
                {
                    document.getElementById("formNumber_error").innerHTML = "Invalid Form Number. Min-Max 10 digits";
                    ret = false;
                }
                else 
                {
                    if (localStorage.getItem("FORMNOALREADYUSED") == 0) 
                    {
                        document.getElementById("formNumber_error").innerHTML = "Form Number already exists";
                        ret = false;
                    }
                    else 
                    {
                        document.getElementById("formNumber_error").innerHTML = "";
                    }
                }
            }
                        
        }                       

        if (document.getElementById("CardNo").value.trim() == "") {
            document.getElementById("CardNo_error").innerHTML = "Card Number field cannot be left blank";
            ret = false;
        }
        else {
            document.getElementById("CardNo_error").innerHTML = "";
        }

        if (document.getElementById("IndividualOrgNameTitle").value == "0") {
            document.getElementById("salutaion_error").innerHTML = "Select Title";
            ret = false;
        }
        else {
            document.getElementById("salutaion_error").innerHTML = "";
        }


        if (document.getElementById("IndividualOrgName").value.trim() == "") {
            document.getElementById("IndividualOrgName_error").innerHTML = "Driver Name field cannot be left blank";
            ret = false;
        }
        else {

            if (!isNaN(document.getElementById("IndividualOrgName").value.trim())) {
                document.getElementById("IndividualOrgName_error").innerHTML = "Driver Name is not valid";
                ret = false;
            }
            else {
                if (!document.getElementById("IndividualOrgName").value.match(nameWithSpaceCheck)) {
                    document.getElementById("IndividualOrgName_error").innerHTML = "Driver Name is not valid";
                    ret = false;
                }
                else {
                    document.getElementById("IndividualOrgName_error").innerHTML = "";
                }
            }            
        }


        if (document.getElementById("IncomeTaxPan").value.trim() == "") 
        {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            document.getElementById("incomeTaxPan_error").className = "error";
            ret = false;
        }
        else 
        {
             document.getElementById("IncomeTaxPan").value = document.getElementById("IncomeTaxPan").value.trim().toUpperCase();

             let forthdigitPan = document.getElementById("IncomeTaxPan").value.substr(3, 1);
            console.log(forthdigitPan);
            if (forthdigitPan != 'P') 
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN";
                document.getElementById("incomeTaxPan_error").className = "error";
                ret = false;
            }
            else 
            {
               if ($('#IncomeTaxPan').val().match(pancard)) 
               {
                    if (localStorage.getItem("PANNOALREADYUSED") == 0) 
                    {
                        document.getElementById("incomeTaxPan_error").innerHTML = "PAN Number already exists";
                        document.getElementById("incomeTaxPan_error").className = "error";
                        ret = false;
                    }
                    else 
                    {
                        if (localStorage.getItem("PANNOANDNAMEMATCHING") == 0) 
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Your pan card name not match with pan card name";
                            document.getElementById("incomeTaxPan_error").className = "error";
                            ret = false;
                        }
                        else 
                        {
                            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN is valid";
                            document.getElementById("incomeTaxPan_error").className = "error text-success";
                        }
                    }
                }
                else 
                {
                    document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN";
                    document.getElementById("incomeTaxPan_error").className = "error";
                    ret = false;
                }
            }

         }

        if (document.getElementById("CommunicationCityName").value.trim() == "") {
            document.getElementById("communicationCityName_error").innerHTML = "The City field cannot be left blank";
            ret = false;
        }
        else {
            if (!isNaN(document.getElementById("CommunicationCityName").value.trim())) {
                document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
                ret = false;
            }
            else {
                if (!document.getElementById("CommunicationCityName").value.match(nameWithSpaceCheck)) {
                    document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
                    ret = false;
                }
                else {
                    document.getElementById("communicationCityName_error").innerHTML = "";
                }
            }            
        }

        if (document.getElementById("CommunicationPincode").value.trim() == "") {
            document.getElementById("communicationPincode_error").innerHTML = "The Pin Code field cannot be left blank";
            ret = false;
        }
        else {
            if (document.getElementById("CommunicationPincode").value.match(pincode)) {
                document.getElementById("communicationPincode_error").innerHTML = "";
            }
            else {
                document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code";
                ret = false;
            }
        }


        if (document.getElementById("CommunicationStateId").value == "0") {
            document.getElementById("comm_states_error").innerHTML = "State field cannot be left blank";
            ret = false;
        }
        else {
            document.getElementById("comm_states_error").innerHTML = "";
        }


        if (document.getElementById("CommunicationEmailid").value.trim() == "") {
            document.getElementById("comm_email_error").innerHTML = "Email field cannot be left blank";
            ret = false;
        }
        else {
             if (document.getElementById("CommunicationEmailid").value.match(email)) {
                document.getElementById("comm_email_error").innerHTML = "";
            }
            else {
                document.getElementById("comm_email_error").innerHTML = "Invalid email id (e.g.: abc@gmail.com)";
                ret = false;
            }
        }

        var stdCode = document.getElementById("CommunicationDialCode").value.trim();
        if (stdCode != "") {

            if (stdCode.length < 2 || stdCode.length > 4) {
                document.getElementById("CommunicationDialCode_error").innerHTML = "Length 2 to 4 digits";
                ret = false;
            }
            else {
                document.getElementById("CommunicationDialCode_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("CommunicationDialCode_error").innerHTML = "";
        }

        var phno = document.getElementById("CommunicationPhonePart2").value.trim();
        if (phno != "") {
            if (phno.charAt(0) == "0") {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Phone no can not start with 0";
                ret = false;
            }
            else {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
            }

            if (phno.length < 6 || phno.length > 8) {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "Phone no length 6 to 8 digits";
                ret = false;
            }
            else {
                document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
            }

        }
        else {
            document.getElementById("CommunicationPhonePart2_error").innerHTML = "";
        }

        if (document.getElementById("CommunicationMobileNo").value.trim() == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            ret = false;
        }
        else {
            if(!document.getElementById("CommunicationMobileNo").value.match(phoneno)) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number";
                 ret = false;
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }
        }

        //if (localStorage.getItem("MOBILENUMBERREADYUSED") == 0) {
        //    document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
        //    ret = false;
        //}
        //else {
        //    document.getElementById("comm_mobileNumber_error").innerHTML = "";
        //}

        //if (localStorage.getItem("EMAILIDALREADYUSED") == 0) {
        //    document.getElementById("comm_email_error").innerHTML = "Email already exists";
        //    return (false);
        //}
        //else {
        //    document.getElementById("comm_email_error").innerHTML = "";
        //}

        if (document.getElementById("DrivingLicence").value.trim() == "") {
            document.getElementById("DrivingLicence_error").innerHTML = "The Driving Licence field cannot be left blank";
            ret = false;
        }
        else {
            if (!document.getElementById("DrivingLicence").value.match(atLeastOneAlphabet)) {
                document.getElementById("DrivingLicence_error").innerHTML = "Invalid Driving License";
                return false;
            }
            else {
                document.getElementById("DrivingLicence_error").innerHTML = "";
            }
        }

        if (document.getElementById("CommunicationAddress1").value.trim() == "") {
            document.getElementById("comm_address1_error").innerHTML = "The Address field cannot be left blank";
            ret = false;
        }
        else {
            if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
               ret = false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
               ret = false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }
        }


        if (document.getElementById("AddressProofType").value == "0") {
            document.getElementById("AddressProofType_error").innerHTML = "Please select Document Type";
            ret = false;
        }
        else {
            document.getElementById("AddressProofType_error").innerHTML = "";
        }

        if (document.getElementById("AddressProof").value.trim() == "") {
            document.getElementById("AddressProof_error").innerHTML = "Please select valid file";
            ret = false;
        }
        else {
            document.getElementById("AddressProof_error").innerHTML = "";
        }

        if (document.getElementById("AddressProofDocumentNo").value.trim() == "") {
            document.getElementById("AddressProofDocumentNo_error").innerHTML = "Please enter valid file name";
            ret = false;
        }
        else {
            if (!isNaN(document.getElementById("AddressProofDocumentNo").value.trim())) {
                document.getElementById("AddressProofDocumentNo_error").innerHTML = "Invalid File Name";
                return false;
            }
            else {
                document.getElementById("AddressProofDocumentNo_error").innerHTML = "";
            }
        }

        var selected = $("input[name='IfDTPCustomer']:checked").val()

        if (selected == "Yes") {
            if (document.getElementById("ExistingCustomerId").value == "") {
                document.getElementById("CustomerId_error").innerHTML = "The DTP Customer ID field cannot be left blank";
                ret = false;
            }
            else {
                if (document.getElementById("ExistingCustomerId").value.substring(0, 1) != "2") {
                    document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                     ret = false;
                }
                else {
                    document.getElementById("CustomerId_error").innerHTML = "";
                }

                if (document.getElementById("ExistingCustomerId").value.length < 10) {
                    document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                    ret = false;
                }
                else {
                    document.getElementById("CustomerId_error").innerHTML = "";
                }
            }

            if (document.getElementById("ExistingCustomerId").value != "") {
                if (document.getElementById("CustomerName").value == "") {
                    document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                    ret = false;
                }
                else {
                    document.getElementById("CustomerId_error").innerHTML = "";
                }
            }
        }
        else {
            document.getElementById("CustomerId_error").innerHTML = "";
            document.getElementById("CustomerName_error").innerHTML = "";
        }


        //if (document.getElementById("VehicleNo2").value != "") { //Vehicle length min-6 max 10
        //    if ($("#VehicleNo2").val().length < 6 || $("#VehicleNo2").val().length > 10) {
        //        document.getElementById("VehicleNo2_error").innerHTML = "Vehicle No length is not valid";
        //        document.getElementById("VehicleNo2").focus();
        //        return ret;
        //    }
        //    else {
        //        document.getElementById("VehicleNo2_error").innerHTML = "";
        //    }
        //}
        //else {
        //    document.getElementById("VehicleNo2_error").innerHTML = "";
        //}

        if (document.getElementById("BeneficiaryName").value.trim() == "") {
            document.getElementById("BeneficiaryName_error").innerHTML = "Please enter Beneficiary Name";
            ret = false;
        }
        else {
             if (!isNaN(document.getElementById("BeneficiaryName").value.trim())) {
                document.getElementById("BeneficiaryName_error").innerHTML = "Please enter only alphabets";
                ret = false;
            }
            else {
                document.getElementById("BeneficiaryName_error").innerHTML = "";
            }

            if (!document.getElementById("BeneficiaryName").value.match(nameWithSpaceCheck)) {
                document.getElementById("BeneficiaryName_error").innerHTML = "Please enter only alphabets";
                ret = false;
            }
            else {
                document.getElementById("BeneficiaryName_error").innerHTML = "";
            }
        }

        if (document.getElementById("RelationWithBeneficiary").value.trim() == "") {
            document.getElementById("RelationWithBeneficiary_error").innerHTML = "Please enter Relation with Beneficiary";
            ret = false;
        }
        else {
             if (!isNaN(document.getElementById("RelationWithBeneficiary").value.trim())) {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "Please enter only alphabets";
                ret = false;
            }
            else {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "";
            }

            if (!document.getElementById("RelationWithBeneficiary").value.match(nameWithSpaceCheck)) {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "Please enter only alphabets";
               ret = false;
            }
            else {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "";
            }
        }

        if (document.getElementById("BeneficiaryMobile").value.trim() == "") {
            document.getElementById("BeneficiaryMobile_error").innerHTML = "Please enter Beneficiary Mobile";
            ret = false;
        }
        else {
            if(!document.getElementById("BeneficiaryMobile").value.match(phoneno)) {
                document.getElementById("BeneficiaryMobile_error").innerHTML = "Invalid Mobile Number";
                ret = false;
            }
            else {
                document.getElementById("BeneficiaryMobile_error").innerHTML = "";
            }
        }
        

        return ret;
    }

    $("#ExistingCustomerId").on("blur", function () {
        //debugger;
        var customerId = document.getElementById("ExistingCustomerId").value;
        if (customerId == "") {
            document.getElementById("CustomerId_error").innerHTML = "The DTP Customer ID field cannot be left blank";
            return (false);
        }
        else {

            if (document.getElementById("ExistingCustomerId").value.substring(0, 1) != "2") {
                document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                return (false);
            }
            else {
                document.getElementById("CustomerId_error").innerHTML = "";
            }

            if (document.getElementById("ExistingCustomerId").value.length < 10) {
                document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                return false;
            }
            else {
                document.getElementById("CustomerId_error").innerHTML = "";
            }
        }


        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetCustomerNameByCustomerId", "DriverCardCustomer")',
            data: { CustomerID: customerId },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') {
                    document.getElementById("CustomerName").value = data.customerName;

                    if (data.customerName.trim() == "") {
                        document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                    }
                    else {
                        document.getElementById("CustomerId_error").innerHTML = "";
                    }

                    if (data == "Failed to load Customer Details") {
                        document.getElementById("CustomerName").value = "";
                        document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                    }
                }
                else {
                    $("#CustomerId_error").html("");
                    document.getElementById("CustomerName").value = "";
                    document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("CustomerName").value = "";
                document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("CustomerName").value = "";
                    document.getElementById("CustomerId_error").innerHTML = "Invalid Customer ID";
                }
            }
        });

    });

    $("#IncomeTaxPan").keydown(function (e) {
        var k = e.keyCode || e.which;
        var ok = k >= 65 && k <= 90 || // A-Z
            k >= 96 && k <= 105 || // a-z
            k >= 35 && k <= 40 || // arrows
            k == 9 || //tab
            k == 46 || //del
            k == 8 || // backspaces
            (!e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)

        if (!ok || (e.ctrlKey && e.altKey)) {
            e.preventDefault();
        }
    });

    $("#IncomeTaxPan").on("blur", function () {
        //debugger;
        var panNumber = document.getElementById("IncomeTaxPan").value.trim();

        if (panNumber == "") {
            document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN field cannot be left blank";
            document.getElementById("incomeTaxPan_error").className = "error";
            return (false);
        }
        else {
            document.getElementById("incomeTaxPan_error").innerHTML = "";
        }

        document.getElementById("IncomeTaxPan").value = document.getElementById("IncomeTaxPan").value.trim().toUpperCase();
               

        let forthdigitPan = document.getElementById("IncomeTaxPan").value.substr(3, 1);
        console.log(forthdigitPan);
        if (forthdigitPan != 'P') {
            document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN";
            document.getElementById("incomeTaxPan_error").className = "error";
            return;
        }
        else {
            
            if ($('#IncomeTaxPan').val().match(pancard)) 
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Income Tax PAN is valid";
                document.getElementById("incomeTaxPan_error").className = "error text-success";
            }
            else 
            {
                document.getElementById("incomeTaxPan_error").innerHTML = "Invalid Income Tax PAN";
                document.getElementById("incomeTaxPan_error").className = "error";
                return (false);
            }
        }

        var panNumberUsed = false;
        localStorage.setItem("PANNOALREADYUSED", "1");

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckPanNoDuplication", "Common")',
            data: { PanNo: panNumber },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                var v = data;
                if (status == 'success') {

                    if (data.status == "0") {
                        panNumberUsed = true;
                        document.getElementById("incomeTaxPan_error").innerHTML = "PAN Number already exists";
                        localStorage.setItem("PANNOALREADYUSED", "0");
                    }
                    else {
                        panNumberUsed = false;
                        document.getElementById("incomeTaxPan_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    panNumberUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //document.getElementById("RBEName").value = "";
            },
            statusCode: {
                1024: function () {
                    //document.getElementById("RBEName").value = "";
                }
            }
        });*@


    });

    $("#CommunicationPincode").on("blur", function () {
        //debugger;
        var communicationPinCode = document.getElementById("CommunicationPincode").value.trim();
        if (communicationPinCode == "") {
            document.getElementById("communicationPincode_error").innerHTML = "The Pin Code field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("communicationPincode_error").innerHTML = "";
        }
                
        if (document.getElementById("CommunicationPincode").value.match(pincode)) {
            document.getElementById("communicationPincode_error").innerHTML = "";
        }
        else {
            document.getElementById("communicationPincode_error").innerHTML = "Invalid Pin Code";
            document.getElementById("CommunicationPincode").focus();
            return (false);
        }

    });

    $("#CommunicationMobileNo").on("blur", function () {
        //debugger;
        var communicationMobile = document.getElementById("CommunicationMobileNo").value.trim();
        if (communicationMobile == "") {
            document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number field cannot be left blank";
            return (false);
        }
        else {
            
            if(!document.getElementById("CommunicationMobileNo").value.match(phoneno)) {
                document.getElementById("comm_mobileNumber_error").innerHTML = "Invalid Mobile Number";
                return false;
            }
            else {
                document.getElementById("comm_mobileNumber_error").innerHTML = "";
            }
        }     

        var mobileNoUsed = false;
        localStorage.setItem("MOBILENUMBERREADYUSED", "1");

        @*$.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("CheckMobilNoDuplication", "Common")',
            data: { MobileNo: communicationMobile },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);
                var v = data;
                if (status == 'success') {

                    //if (data == "Failed to load Customer Details")
                    //    document.getElementById("RBEName").value = "";
                    //console.log('Test');
                    //console.log(data.status);
                    //console.log(data.reason);
                    if (data.status == "0") {
                        mobileNoUsed = true;
                        document.getElementById("comm_mobileNumber_error").innerHTML = "Mobile Number already exists";
                        localStorage.setItem("MOBILENUMBERREADYUSED", "0");
                    }
                    else {
                        mobileNoUsed = false;
                        document.getElementById("comm_mobileNumber_error").innerHTML = "";
                    }
                }
                else {
                    //console.log(v);
                    mobileNoUsed = true;
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //document.getElementById("RBEName").value = "";
            },
            statusCode: {
                1024: function () {
                    //document.getElementById("RBEName").value = "";
                }
            }
        });
        *@

    });

    $("#BeneficiaryMobile").on("blur", function () {
        //debugger;
        var communicationMobile = document.getElementById("BeneficiaryMobile").value.trim();
        if (communicationMobile == "") {
            document.getElementById("BeneficiaryMobile_error").innerHTML = "Please enter Beneficiary Mobile";
            return (false);
        }
        else {
            document.getElementById("BeneficiaryMobile_error").innerHTML = "";
        }

        if(!document.getElementById("BeneficiaryMobile").value.match(phoneno)) {
            document.getElementById("BeneficiaryMobile_error").innerHTML = "Invalid Mobile Number";
            return false;
        }
        else {
            document.getElementById("BeneficiaryMobile_error").innerHTML = "";
        }

    });

    function SearchCardFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("txt_searchCard");
        filter = input.value.toUpperCase();
        table = document.getElementById("CardsTable1");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    $("#BeneficiaryName").on("blur", function () {
        //debugger;
        var beneficiaryName = document.getElementById("BeneficiaryName").value.trim();
        if (beneficiaryName == "") {
            document.getElementById("BeneficiaryName_error").innerHTML = "Please enter Beneficiary Name";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("BeneficiaryName").value.trim())) {
                document.getElementById("BeneficiaryName_error").innerHTML = "Please enter only alphabets";
                return false;
            }
            else {
                document.getElementById("BeneficiaryName_error").innerHTML = "";
            }

            if (!document.getElementById("BeneficiaryName").value.match(nameWithSpaceCheck)) {
                document.getElementById("BeneficiaryName_error").innerHTML = "Please enter only alphabets";
                return false;
            }
            else {
                document.getElementById("BeneficiaryName_error").innerHTML = "";
            }
        }
        
    });

    $("#CommunicationCityName").on("blur", function () {
        //debugger;
        var cityName = document.getElementById("CommunicationCityName").value.trim();
        if (cityName == "") {
            document.getElementById("communicationCityName_error").innerHTML = "The City field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationCityName").value.trim())) {
                document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
                return false;
            }
            else {
                document.getElementById("communicationCityName_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationCityName").value.match(nameWithSpaceCheck)) {
                document.getElementById("communicationCityName_error").innerHTML = "Invalid City Name";
                return false;
            }
            else {
                document.getElementById("communicationCityName_error").innerHTML = "";
            }
        }       

    });

    $("#DrivingLicence").on("blur", function () {
        //debugger;
        var drivingLicence = document.getElementById("DrivingLicence").value.trim();
        if (drivingLicence == "") {
            document.getElementById("DrivingLicence_error").innerHTML = "The Driving License field cannot be left blank";
            return (false);
        }
        else {
            document.getElementById("DrivingLicence_error").innerHTML = "";
        }

         if (!document.getElementById("DrivingLicence").value.match(atLeastOneAlphabet)) {
            document.getElementById("DrivingLicence_error").innerHTML = "Invalid Driving License";
            return false;
        }
        else {
            document.getElementById("DrivingLicence_error").innerHTML = "";
        }

    });

    $("#CommunicationAddress1").on("blur", function () {
        //debugger;
        var Address = document.getElementById("CommunicationAddress1").value.trim();
        if (Address == "") {
            document.getElementById("comm_address1_error").innerHTML = "The Address field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("CommunicationAddress1").value.trim())) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }

            if (!document.getElementById("CommunicationAddress1").value.match(atLeastOneAlphabet)) {
                document.getElementById("comm_address1_error").innerHTML = "Invalid Address";
                return false;
            }
            else {
                document.getElementById("comm_address1_error").innerHTML = "";
            }
        }       
   
    });

    $("#RelationWithBeneficiary").on("blur", function () {
        //debugger;
        var relationWithBeneficiary = document.getElementById("RelationWithBeneficiary").value.trim();
        if (relationWithBeneficiary == "") {
            document.getElementById("RelationWithBeneficiary_error").innerHTML = "Please enter Relation with Beneficiary";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("RelationWithBeneficiary").value.trim())) {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "Please enter only alphabets";
                return false;
            }
            else {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "";
            }

            if (!document.getElementById("RelationWithBeneficiary").value.match(nameWithSpaceCheck)) {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "Please enter only alphabets";
                return false;
            }
            else {
                document.getElementById("RelationWithBeneficiary_error").innerHTML = "";
            }
        }
                
    });

    function ClearFields() {
        document.getElementById("MerchantId_error").innerHTML = "";

        document.getElementById("FormNumber").value = "";
        document.getElementById("formNumber_error").innerHTML = "";

        document.getElementById("CardNo").value = "";
        document.getElementById("CardNo_error").innerHTML = "";


        document.getElementById("IndividualOrgNameTitle").value = "0";
        document.getElementById("salutaion_error").innerHTML = "";

        document.getElementById("IndividualOrgName").value = "";
        document.getElementById("IndividualOrgName_error").innerHTML = "";

        document.getElementById("CommunicationCityName").value = "";
        document.getElementById("communicationCityName_error").innerHTML = "";

        document.getElementById("CommunicationPincode").value = "";
        document.getElementById("communicationPincode_error").innerHTML = "";

        document.getElementById("CommunicationStateId").value = "0";
        document.getElementById("comm_states_error").innerHTML = "";

        document.getElementById("CommunicationEmailid").value = "";
        document.getElementById("comm_email_error").innerHTML = "";

        document.getElementById("CommunicationMobileNo").value = "";
        document.getElementById("comm_mobileNumber_error").innerHTML = "";

        localStorage.setItem("MOBILENUMBERREADYUSED", "1");
        document.getElementById("comm_mobileNumber_error").innerHTML = "";

        localStorage.setItem("EMAILIDALREADYUSED", "1");
        document.getElementById("comm_email_error").innerHTML = "";

        document.getElementById("DrivingLicence").value = "";
        document.getElementById("DrivingLicence_error").innerHTML = "";

        document.getElementById("CommunicationAddress1").value = "";
        document.getElementById("comm_address1_error").innerHTML = "";

        document.getElementById("AddressProofType").value = "0"
        document.getElementById("AddressProofType_error").innerHTML = "";


        document.getElementById("AddressProof").value = ""
        document.getElementById("AddressProof_error").innerHTML = "";

        document.getElementById("AddressProofDocumentNo").value = "";
        document.getElementById("AddressProofDocumentNo_error").innerHTML = "";

        document.getElementById("ExistingCustomerId").value = "";
        document.getElementById("CustomerId_error").innerHTML = "";

        document.getElementById("IncomeTaxPan").value = "";
        document.getElementById("incomeTaxPan_error").innerHTML = "";

        document.getElementById("BeneficiaryName").value = "";
        document.getElementById("BeneficiaryName_error").innerHTML = "";

        document.getElementById("RelationWithBeneficiary").value = "";
        document.getElementById("RelationWithBeneficiary_error").innerHTML = "";

        document.getElementById("BeneficiaryMobile").value = "";
        document.getElementById("BeneficiaryMobile_error").innerHTML = "";

        localStorage.setItem("FORMNOALREADYUSED", "1");
        document.getElementById("formNumber_error").innerHTML = "";

        localStorage.setItem("PANNOALREADYUSED", "1");
        localStorage.setItem("PANNOANDNAMEMATCHING", "1");

        document.getElementById("incomeTaxPan_error").innerHTML = "";
        document.getElementById("IncomeTaxPan").value = "";
    }

    $("#IndividualOrgName").on("blur", function () {
        //debugger;
        var driverName = document.getElementById("IndividualOrgName").value.trim();
        if (driverName == "") {
            document.getElementById("IndividualOrgName_error").innerHTML = "Driver Name field cannot be left blank";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("IndividualOrgName").value.trim())) {
                document.getElementById("IndividualOrgName_error").innerHTML = "Invalid Driver Name";
                return false;
            }
            else {
                document.getElementById("IndividualOrgName_error").innerHTML = "";
            }

            if (!document.getElementById("IndividualOrgName").value.match(nameWithSpaceCheck)) {
                document.getElementById("IndividualOrgName_error").innerHTML = "Invalid Driver Name";
                return false;
            }
            else {
                document.getElementById("IndividualOrgName_error").innerHTML = "";
            }
        }

    });

    $("#CommunicationStateId").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#comm_states_error").html("");
        }
    });

    $("#IndividualOrgNameTitle").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#salutaion_error").html("");
        }
    });

    $("#AddressProofType").change(function () {
        var id = this.value;

        if (id != 0) {
            $("#AddressProofType_error").html("");
        }
    });

    $("#AddressProofDocumentNo").on("blur", function () {
        //debugger;
        var addressProofDocumentNo = document.getElementById("AddressProofDocumentNo").value.trim();
        if (addressProofDocumentNo == "") {
            document.getElementById("AddressProofDocumentNo_error").innerHTML = "Please enter valid file name";
            return (false);
        }
        else {
            if (!isNaN(document.getElementById("AddressProofDocumentNo").value.trim())) {
                document.getElementById("AddressProofDocumentNo_error").innerHTML = "Invalid File Name";
                return false;
            }
            else {
                document.getElementById("AddressProofDocumentNo_error").innerHTML = "";
            }

            if (!document.getElementById("AddressProofDocumentNo").value.match(atLeastOneAlphabet)) {
                document.getElementById("AddressProofDocumentNo_error").innerHTML = "Invalid File Name";
                return false;
            }
            else {
                document.getElementById("AddressProofDocumentNo_error").innerHTML = "";
            }
        }
    });

    $("#AddressProof").on("blur", function () {
        //debugger;
        var addressProof = document.getElementById("AddressProof").value.trim();
        if (addressProof == "") {
            document.getElementById("AddressProof_error").innerHTML = "Please select valid file";
            return (false);
        }
        else {
            document.getElementById("AddressProof_error").innerHTML = "";
        }

    });
        

</script>