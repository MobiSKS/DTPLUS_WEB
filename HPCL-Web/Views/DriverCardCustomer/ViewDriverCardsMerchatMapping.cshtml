@model HPCL.Common.Models.ViewModel.DriverCardCustomer.ViewDriverCardMerchatMappingModel
@using HPCL.Common.Resources;
<div class="col-lg-12 px-0">
    <div class="bg-white p-2 p-md-4" style="background: #edecec !important;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "DriverCardCustomer")" class="text_primary">Driver Card Customer</a> </li>
            <li class="breadcrumb-item font-weight-light">View Driver Cards Merchant Allocation</li>
        </ul>
        <form>
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">View Driver Cards Merchant Allocation</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3 bg-white">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal col-md-4 col-12">Merchant ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MerchantId, new { @class = "form-control", maxlength = "10", onkeypress = "return isNumberKey(event)", autocomplete = "off" })
                                                <span class="error" id="MerchantId_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap mb-3">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12">Card Number </label>
                                        <div class="col-md-7 col-12">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CardNumber, new { @class = "form-control", autocomplete = "off", maxlength = "16", onkeypress = "return isNumberKey(event)" })
                                                <span class="error" id="CardNumber_error"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnSearch">@Label.Search</button>
                                </div>
                                @*<div class="px-2">
                                        <button class="btn btn_primary" type="button" id="btnExport">Export to Excel</button>
                                    </div>*@
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" id="btnReset">@Label.Reset</button>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </form>
        <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-0 toBeHiddenOnSuccess" id="viewDriverCardMerchantAllocationTbl">
        </div>
        <div class="clearfix"></div>
    </div>
</div>

<script type="text/javascript">

    $("#btnReset").click(function () {
        window.location.href = '@Url.Action("ViewDriverCardsMerchatMapping", "DriverCardCustomer")';
    });

    $("#btnSearch").click(function () {
        //debugger;
        var ret=true;
        var merchantId = document.getElementById("MerchantId").value.trim();
        if (merchantId == "") 
        {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            return (false);
        }
        else 
        {
            if (document.getElementById("MerchantId").value.substring(0, 1) != "3") 
            {
                document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                return (false);
            }
            else if (document.getElementById("MerchantId").value.length < 10) 
            {
                document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                return (false);
            }
            else
            {
                if(!(document.getElementById('MerchantId').value).match(number))
                {
                    document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                    return (false);
                }
                else
                {
                    document.getElementById("MerchantId_error").innerHTML = "";
                }
            }
            
        }
                

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetMerchantDetailsByMerchantId", "DriverCardCustomer")',
            data: { MerchantID: merchantId },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') 
                {
                    
                    if (data == "Failed to load Merchant Details") 
                    {
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                        viewDriverCardMerchantAllocationTbl.style.display = "none";
                    }
                    else if(data.status==1)
                    {
                        document.getElementById("MerchantId_error").innerHTML = "";
                        viewDriverCardMerchantAllocationTbl.style.display = "block";

                        var cardNumber = document.getElementById("CardNumber").value.trim();

                        if (cardNumber != "") 
                        {
                            if(!(document.getElementById('CardNumber').value).match(number))
                            {
                                document.getElementById("CardNumber_error").innerHTML = "Invalid Card Number";
                                ret=false;
                            }
                            else if (cardNumber.length < 16) 
                            {
                                document.getElementById("CardNumber_error").innerHTML = "Invalid Card Number";
                                ret=false;
                            }
                            else 
                            {
                                document.getElementById("CardNumber_error").innerHTML = "";
                            }
                        }
                        else 
                        {
                            document.getElementById("CardNumber_error").innerHTML = "";
                        }

                        if(ret==true)
                        {

                             $.ajax({
                                    type: 'GET',  // http method
                                    url: '@Url.Action("GetViewOTCCardMerchantAllocation", "DriverCardCustomer")',
                                    contentType: "application/json; charset=utf-8",
                                    data: { MerchantId: merchantId, CardNo: cardNumber },
                                    dataType: "text",
                                    success: function (data, status, xhr) {
                                        var v = data;
                                        if (status == 'success') {
                                            $("#viewDriverCardMerchantAllocationTbl").html(data);
                                            $('html, body').animate({
                                                scrollTop: $("#viewDriverCardMerchantAllocationTbl").offset().top
                                            }, 2000);
                                        }
                                        else {
                                            console.log(v);
                                        }
                                    },
                                    error: function (jqXhr, textStatus, errorMessage) {
                                        alert("Error");
                                    }
                                });

                          }

                    }
                    else
                    {
                        document.getElementById("MerchantId_error").innerHTML = data.reason;
                        viewDriverCardMerchantAllocationTbl.style.display = "none";
                    }
                }
                else 
                {
                    $("#MerchantId_error").html("");
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    viewDriverCardMerchantAllocationTbl.style.display = "none";
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                viewDriverCardMerchantAllocationTbl.style.display = "none";
            },
            statusCode: {
                1024: function () {
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    viewDriverCardMerchantAllocationTbl.style.display = "none";
                }
            }
        });


    });

   $("#MerchantId").on("blur", function () 
   {
        //debugger;
        var merchantId = document.getElementById("MerchantId").value.trim();
        if (merchantId == "") 
        {
            document.getElementById("MerchantId_error").innerHTML = "Merchant ID field cannot be left blank";
            return (false);
        }
        else 
        {
            if (document.getElementById("MerchantId").value.substring(0, 1) != "3") 
            {
                document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                return (false);
            }
            else if (document.getElementById("MerchantId").value.length < 10) 
            {
                document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                return (false);
            }
            else
            {
                if(!(document.getElementById('MerchantId').value).match(number))
                {
                    document.getElementById("MerchantId_error").innerHTML = "Invalid Merchant ID";
                    return (false);
                }
                else
                {
                    document.getElementById("MerchantId_error").innerHTML = "";
                }
            }
            
        }

        $.ajax({
            type: 'POST',  // http method
            url: '@Url.Action("GetMerchantDetailsByMerchantId", "DriverCardCustomer")',
            data: { MerchantID: merchantId },  // data to submit
            dataType: "json",
            success: function (data, status, xhr) {
                console.log(data);
                console.log(status);

                if (status == 'success') 
                {
                    document.getElementById("MerchantId_error").innerHTML = "";
   
                    if (data == "Failed to load Merchant Details") 
                    {
                        document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                    }
                }
                else 
                {
                    $("#MerchantId_error").html("");
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                }
            },
            error: function (xhr, ajaxOptions, thrownError) 
            {
                document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
            },
            statusCode: 
            {
                1024: function () 
                {
                    document.getElementById("MerchantId_error").innerHTML = "Merchant ID does not exist";
                }
            }
        });

  });

 $("#CardNumber").on("blur", function () 
 {
     var cardNumber = document.getElementById("CardNumber").value.trim();

    if (cardNumber != "") 
    {
        if(!(document.getElementById('CardNumber').value).match(number))
        {
            document.getElementById("CardNumber_error").innerHTML = "Invalid Card Number";
            return (false);
        }
        else if (cardNumber.length < 16) 
        {
            document.getElementById("CardNumber_error").innerHTML = "Invalid Card Number";
            return (false);
        }
        else 
        {
            document.getElementById("CardNumber_error").innerHTML = "";
        }
    }
    else 
    {
        document.getElementById("CardNumber_error").innerHTML = "";
    }

 });

</script>