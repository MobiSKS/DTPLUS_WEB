@model HPCL.Common.Models.ResponseModel.CustomerFinancial.CustomerTransactionResponseModel
@using HPCL.Common.Resources
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js"></script>
@if (Model != null && Model.GetTransactionsSaleSummary.Count() > 0)
{
    <p class="font-12 font-weight-bold d-inline-block w-auto ml-3 mb-0 px-2">Summary of Transactions</p>
    <table id="CustTransactionSummary" class="table d-md-table table-bordered" style="width:100%;">
        <thead>
            <tr>
                <th>Account Number</th>
                <th>Customer Name</th>
                <th>Sale</th>
                <th>Reload(CCMS & Cash)</th>
                <th>CCMS Recharge</th>
            </tr>
        </thead>
        @if (Model != null && Model.GetTransactionsSaleSummary.Count() > 0)
        {
            <tbody>

                @foreach (var item in Model.GetTransactionsSaleSummary)
                {
                    <tr>
                        <td>@item.AccountNumber</td>
                        <td>@item.CustomerName</td>
                        <td>@item.Sale</td>
                        <td>@item.ReloadCcmsCash</td>
                        <td>@item.CcmsRecharge</td>
                    </tr>
                }
            </tbody>
        }
    </table>
}
<div class="clearfix"></div>

@if (Model != null && Model.GetTransactionsDetailSummary.Count() > 0)
{
     <p class="font-12 font-weight-bold d-inline-block w-auto ml-3 mb-0 px-2">** Service tax included in service charge.</p>
    <div>
        <table id="CustTransactionDetails" class="datatable table table-striped table-bordered table-responsive" style="width:100%;">
            <thead>
                <tr>
                    <th>S.No.</th>
                    <th>Terminal ID</th>
                    <th>Merchant ID</th>
                    <th>Retail Outlet Name</th>
                    <th>Account Number</th>
                    <th>Vehicle No./Card Identifier</th>
                    <th>Txn Date</th>
                    <th>Txn Type</th>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Volume(Ltr.)</th>
                    <th>Service Charge</th>
                    <th>Amount</th>
                    <th>Discount</th>
                    <th>Odometer Reading</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int Sno = 0;
                }
                @foreach (var item in Model.GetTransactionsDetailSummary)
                {
                    Sno++;
                    <tr>
                        <td>@Sno</td>
                        <td>@item.TerminalId</td>
                        <td>@item.MerchantId</td>
                        <td>@item.RetailOutletName</td>
                        <td>@item.AccountNumber</td>
                        <td>@item.VechileNo</td>
                        <td>@item.TxnDate</td>
                        <td>@item.TxnType</td>
                        <td>@item.ProductName</td>
                        <td>@item.Price</td>
                        <td>@item.Volume</td>
                        <td>@item.ServiceCharge</td>
                        <td>@item.Amount.ToString("0.00")</td>
                        <td>@item.Discount</td>
                        <td>@item.OdometerReading</td>
                        <td>@item.Status</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="clearfix"></div>
}
@if (Model.GetTransactionsDetailSummary.Count() == 0 && Model.GetTransactionsSaleSummary.Count() == 0)
{
    <div class="alert alert-danger text-center">
        @Model.Message
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#CustTransactionDetails').DataTable({
            "lengthMenu": [10, 20, 50, 100, 200, 500],
            "oLanguage": {
                "sLengthMenu": "Display _MENU_ Records",
                "info": "Showing _START_ to _END_ of _TOTAL_ Records",
            }
        });
    });
    function tableToCSV() {

        // Variable to store the final csv data
        var csv_data = [];

        // Get each row data
        //var rows = document.getElementsByTagName('tr');
        $("#CustTransactionSummary tr").each(function () {
            var row = $(this);
            //debugger;
            //for (var i = 0; i < rows.length; i++) {

                // Get each column data
                var cols = row[0].querySelectorAll('td,th');

                // Stores each csv row data
                var csvrow = [];
                for (var j = 0; j < cols.length; j++) {

                    // Get the text data of each cell
                    // of a row and push it to csvrow
                    
                        if(j==0)
                            csvrow.push("'"+cols[j].innerHTML.toString());
                        else
                            csvrow.push(cols[j].innerHTML.toString());
                    
                }

                // Combine each column value with comma
                csv_data.push(csvrow.join(","));
            //}
        });
          $("#CustTransactionDetails tr").each(function () {
            var row = $(this);
            //debugger;
            //for (var i = 0; i < rows.length; i++) {

                // Get each column data
                var cols = row[0].querySelectorAll('td,th');

                // Stores each csv row data
                var csvrow = [];
                for (var j = 0; j < cols.length; j++) {

                    // Get the text data of each cell
                    // of a row and push it to csvrow
                    
                        if(j==1 ||j==2 ||j==4 ||j==6)
                            csvrow.push("'"+cols[j].innerHTML.toString());
                        else
                            csvrow.push(cols[j].innerHTML.toString());
                    
                }

                // Combine each column value with comma
                csv_data.push(csvrow.join(","));
            //}
        });
        // Combine each row data with new line character
        csv_data = csv_data.join('\n');

        // Call this function to download csv file
        downloadCSVFile(csv_data);

    }

    function downloadCSVFile(csv_data) {

        // Create CSV file object and feed
        // our csv_data into it
        CSVFile = new Blob([csv_data], {
            type: "text/csv"
        });

        // Create to temporary link to initiate
        // download process
        var temp_link = document.createElement('a');

        // Download csv file
        temp_link.download = "CustomerTransactionDetails.csv";
        var url = window.URL.createObjectURL(CSVFile);
        temp_link.href = url;

        // This link should not be displayed
        temp_link.style.display = "none";
        document.body.appendChild(temp_link);

        // Automatically click the link to
        // trigger download
        temp_link.click();
        document.body.removeChild(temp_link);
    }
   function generatePDF() {
     var doc = new jsPDF({
        orientation: 'l', // landscape
        unit: 'pt', // points, pixels won't work properly
        format: [612, 792] // set needed dimensions for any element
    })
  //create jsPDF object
     var htmlstring = '';  
     var tempVarToCheckPageHeight = 0;  
     var pageHeight = 0;  
     pageHeight = doc.internal.pageSize.height;  
     margins = {  
        top: 50,  
        bottom: 60,  
        left: 10,  
        right: 10,  
        width: 10  
     };  
     var y = 20;  
     doc.setLineWidth(2);  
     
     doc.text(40, y = y + 20, "Customer Transaction Details");  

     doc.autoTable({  
        html: '#CustTransactionSummary',  
        startY: 50,  
       tableWidth: 'auto',
        margin: {right:0,left:0},
        theme: 'striped',
        columnStyles: {  
            0: {  
                columnWidth: 'auto' 
            },  
            1: {  
               columnWidth: 'auto'
            },  
            2: {  
                columnWidth: 'auto'  
            },
            3: {  
                columnWidth: 'auto' 
            },
            4: {  
                columnWidth: 'auto'
            }
        },  
        styles: {  
            minCellHeight: 10  
        }  
     })  
     doc.autoTable({  
        html: '#CustTransactionDetails',  
        startY: 100, 
        tableWidth: 'auto',
        margin: {right:0,left:0},
        theme: 'striped',
        columnStyles: {  
            0: {  
                columnWidth: 'auto'
            },  
            1: {  
                columnWidth: 'auto'
            },  
            2: {  
                columnWidth: 'auto'
            },
            3: {  
                columnWidth: 'auto' 
            },
            4: {  
                columnWidth: 'auto' 
            },
            5: {  
               columnWidth: 'auto'
            },  
            6: {  
                columnWidth: 'auto' 
            },
            7: {  
               columnWidth: 'auto'
            },
            8: {  
                columnWidth: 'auto' 
            },
              
            9: {  
               columnWidth: 'auto'
            },
            10: {  
               columnWidth: 'auto'
            },
            11: {  
                columnWidth: 'auto'  
            },  
            12: {  
                columnWidth: 'auto'
            },
            13: {  
                columnWidth: 'auto' 
            },
            14: {  
                columnWidth: 'auto'
            },
            15: {  
                columnWidth: 'auto'  
            }

        },  
        styles: {  
            minCellHeight: 10  
        }  
     })  
     doc.save('CustomerTransactionDetails.pdf');  
     
}
</script>