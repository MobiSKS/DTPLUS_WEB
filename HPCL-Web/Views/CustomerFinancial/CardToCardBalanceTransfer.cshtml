@model HPCL.Common.Models.ViewModel.CustomerFinancial.BalanceTransferSearchModel
@using Microsoft.AspNetCore.Http;

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>

<div class="col-lg-12">
<div class="bg-white p-2 p-md-4">
    <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","CustomerFinancial")" class="text_primary">Financial</a> </li>
        <li class="breadcrumb-item font-weight-light">Card To Card Balance Transfer</li>
    </ul>
     
   <div id="successUpdate" class="mb-3 text-center alert alert-success" style="display:none;"></div>

    <form id="formVal" method="post" data-ajax="true" data-ajax-controller="CustomerFinancial" data-ajax-action="CardToCardBalanceTransfer" data-ajax-method="POST" data-ajax-success="OnSuccess" data-ajax-failure="OnFailure">
        <div class="w-100">
            <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                <div class="border-1 rounded border-grey pb-0">
                    <p class="text_primary px-3 py-2 bg-grey m-0 font-weight-bold">Card To Card Balance Transfer</p>
                    <div class="col-lg-12 col-md-12 col-12 py-3">
                        @*<p class="text-dark px-0 pb-2 mb-3 font-weight-bold" style="border-bottom:1px solid #ccc;">Search Cards</p>*@
                        <div class="d-flex align-items-center flex-wrap">
                            <div class="col-lg-6 col-12">
                                <div class="d-flex align-items-center flex-wrap mb-3">
                                    <label class="font-weight-normal col-md-4 col-12">Customer ID <sup class="text-danger">*</sup></label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.TextBoxFor(m => m.CustomerID, new { @id = "custIdVal", @class = "form-control", onkeypress = "return isNumberKey(event)" })
                                            @Html.ValidationMessageFor(m => m.CustomerID, "", new {@id="CustomerIdErr", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-12">
                                <div class="d-flex align-items-center flex-wrap mb-3">
                                    <label class="font-weight-normal offset-md-1 col-md-4 col-12">Card Number </label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control", onkeypress = "return isNumberKey(event)" })
                                            @Html.ValidationMessageFor(m => m.CardNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex align-items-center flex-wrap">
                            <div class="col-lg-6 col-12">
                                <div class="d-flex align-items-center flex-wrap mb-3">
                                    <label class="font-weight-normal col-md-4 col-12">Mobile No.</label>
                                    <div class="col-md-7 col-12">
                                        <div class="custom_select">
                                            @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", onkeypress = "return isNumberKey(event)" })
                                            @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="d-flex align-items-center justify-content-center mt-0">
                            <div class="px-2">
                                <button class="btn btn_primary" type="submit">Search</button>
                            </div>
                            <div class="px-2">
                                <button class="btn btn_primary" type="button" onclick="resetClick()">Reset</button>
                            </div>
                            <div class="px-2">
                                <a class="btn btn_primary" href="#aa" id="btnUploadExcel">UPLOAD EXCEL</a>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div id="noRecord" class="mt-3 text-center alert alert-danger" style="display:none;"></div>

                <div class="clearfix"></div>

                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0 mt-3" id="searchResult" style="display:none;">
                    <table id="CardToCardSearchRes" class="table table-striped d-md-table d-block table-bordered table-responsive nowrap mt-3" style="width:100%;">
                        <thead>
                            <tr>
                                <th>S.No.</th>
                                <th>&nbsp;</th>
                                <th>Card Number</th>
                                <th>Vehicle No.</th>
                                <th>Mobile No.</th>
                                <th>Issue Date</th>
                                @*<th>Expiry Date</th>*@
                                <th>Status</th>
                                <th>Balance</th>
                                <th>Card Number</th>
                                <th>Amount To Transfer</th>
                            </tr>
                        </thead>
                    </table>
                    <div class="clearfix"></div>
                    <div class="d-flex align-items-center justify-content-center mt-0">
                        <div class="px-2">
                            <button class="btn btn_primary" type="button" onclick="transferAmount()">Transfer Amount</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="clearfix"></div>
</div>
</div>

<script src="https://rawgit.com/moment/moment/2.2.1/min/moment.min.js"></script>

<script type="text/javascript">

    function resetClick() {
        window.location.reload(true);
    }

    $('input').on('paste', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
    });

    $("#CardToCardSearchRes").on('keydown', '.txnAmt', function (event) {
        if (event.shiftKey == true) {
            event.preventDefault();
        }
        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190|| event.keyCode == 110) {

        } else {
            event.preventDefault();
        }
        if($(this).val().indexOf('.') !== -1 && (event.keyCode == 190|| event.keyCode == 110))
            event.preventDefault();
    });

      $(document).ready(function () {

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        var loginType = '@Context.Session.GetString("LoginType")';

        if (loginType == "Customer") {

            $.ajax({
                url: "@Url.Action("CardToCardBalanceTransfer", "CustomerFinancial")",
                type: "POST",
                dataType: "JSON",
                success: function (data) {

                    OnSuccess(data);

                    $("#custIdVal").val('@Context.Session.GetString("UserId")');
                    $("#custIdVal").attr("readonly", true);

                },
                error: function (ex) {
                    alert('Failed' + ex);
                }
            });
        }
      });

    var fromCardNoArr = [];
    var fromCardNo;

    function OnSuccess(res) {

        console.log(res);

        if (res.searchList.success == true) {

            var girdList = res.searchList.data;

            document.getElementById("noRecord").style.display = "none";

            $('#CardToCardSearchRes').DataTable().clear().destroy();

            var tbl = $('#CardToCardSearchRes').DataTable({
                paging: true,
                searching: false,
                stateSave: true,
                "lengthMenu": [5, 10, 20, 50, 100, 200, 500, 1000, 2000],
                "autoWidth": false,
                "oLanguage": {
                    "sLengthMenu": "Display _MENU_ Records",
                    "info": "Showing _START_ to _END_ of _TOTAL_ Records",
                }
            });
             var m = 0;
             for (var i = 0; i < girdList.length; i++) {
                 m++;
                    if(girdList[i].status == "Active"){
                        
                        var isDts;
                        var expDts;

                        if(((girdList[i].issueDate) == "01-01-0001 00:00:00") || ((girdList[i].issueDate) == "01-01-1900 00:00:00") || ((girdList[i].issueDate) == null)){
                            isDts = "";
                        }else{
                            isDts = moment(girdList[i].issueDate, 'DD-MM-YYYY').format('DD-MM-YYYY');
                        }

                        //if(((girdList[i].expiryDate) == "01-01-0001 00:00:00") || ((girdList[i].expiryDate) == "01-01-1900 00:00:00") || ((girdList[i].expiryDate) == null)){
                        //    expDts = "";
                        //}else{
                        //    expDts = moment(girdList[i].expiryDate, 'DD-MM-YYYY').format('DD-MM-YYYY');
                        //}

                        var checkBoxValid;

                        if(girdList[i].cardBalance == 0){
                            checkBoxValid = "<input type='checkbox' class='checkEnable' name='enableRow' disabled='disabled'>";
                        }else{
                            checkBoxValid = "<input type='checkbox' class='checkEnable' name='enableRow'>";
                        }

                        var srNumber = m;
                        var pressCheck = checkBoxValid;
                        var cardNumber = "<span class='cdn' id='fromCardNoId_"+i+"'>" + (girdList[i].cardNumber || '') + "</span>";
                        var vechileNo = (girdList[i].vechileNo || '');
                        var mobileno = (girdList[i].mobileno || '');
                        var issueDate = isDts;
                        var status = (girdList[i].status || '');
                        var cardBalance = "<span class='balanceAmt' id='balanceId_"+i+"'>"+(girdList[i].cardBalance)+"</span>";
                        var ToCardNumber = "<div style='width:160px;display:flex;'><input onkeypress='return isNumberKey(event)' maxlength='16' onblur='toCardNoChange(this," + (i) + ")' class='form-control newCardNo cgl' id='toCardNoId_"+i+"' name='ToCardNumber' type='text' value='' readonly='readonly'><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle errs' id='toCardNo_error_"+i+"' aria-hidden='true'></i></div>";
                        var transAmt = "<div style='width:160px;display:flex;'><input maxlength='10' onblur='amtToTransChange(this," + (i) + ")' class='form-control txnAmt cgl' id='amtTotransId_"+i+"' name='AmountToTransfer' type='text' readonly='readonly'><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle errss' id='amtToTrans_error_"+i+"' aria-hidden='true'></i></div>";

                        tbl.row.add([
                            srNumber,
                            pressCheck,
                            cardNumber,
                            vechileNo,
                            mobileno,
                            issueDate,
                            status,
                            cardBalance,
                            ToCardNumber,
                            transAmt
                        ]).draw();

                        fromCardNoArr.push({fromCardNo:girdList[i].cardNumber});
                    }
            }

            document.getElementById('searchResult').style.display = 'block';

            console.log("fromCardNoArr",fromCardNoArr);
        } else {
            document.getElementById("searchResult").style.display = "none";
            $("#noRecord").html("");
            $("#noRecord").append("<span>" + res.searchList.message + "</span>");
            document.getElementById("noRecord").style.display = "block";
        }
    }

    $("#CardToCardSearchRes").on('click', '.checkEnable', function (e) {
        currentRow = $(this).closest("tr");
        if ($(this).is(':checked')) {
            currentRow.find('input:text').attr("readonly", false);
        }
        if (!$(this).is(':checked')) {
            currentRow.find('input:text').attr("readonly", true);
            currentRow.find('.errs').css("display", "none");
            currentRow.find('.errss').css("display", "none");
        }
    });

     $("#CardToCardSearchRes").on('paste', '.cgl', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
    });

    function OnFailure(data) {
        alert('HTTP Status Code: ' + data + '  Error Message: ' + data);
    }



    function transferAmount(){

        var updateArray = new Array();

        var customerId = $("#custIdVal").val();

        var flag = "Y";
        var FromCardNo;
        var TransferAmount;
        $("#CardToCardSearchRes input[type=checkbox]:checked").each(function () {

            var selectedRow = $(this).closest("tr")[0];
            console.log("index",selectedRow.rowIndex);
            
            var indexS = (selectedRow.rowIndex) - 1;

            var row = $(this).closest("tr");

            FromCardNo = row.find('.cdn').text();
            TransferAmount = row.find('.txnAmt').val();
            var balance = row.find('.balanceAmt').text();
            var ToCardNo = row.find('.newCardNo').val();
            var FromMobileNo = "";
            var ToMobileNo = "";


            updateArray.push({
                FromCardNo: FromCardNo,
                ToCardNo:ToCardNo,
                TransferAmount: TransferAmount,
                FromMobileNo:FromMobileNo,
                ToMobileNo:ToMobileNo
            });

            if(ToCardNo.trim() == ''){
                document.getElementById('toCardNo_error_'+indexS).title="Please Enter Card Number";
                document.getElementById('toCardNo_error_'+indexS).style.display = "block";
                flag = "N";
            }

            if(ToCardNo.trim() != ''){
                if(!ToCardNo.match(/^\d{16}$/)){
                    document.getElementById('toCardNo_error_'+indexS).title="Card Number is a 16 digit number";
                    document.getElementById('toCardNo_error_'+indexS).style.display = "block";
                    flag = "N";
                }else if(!fromCardNoArr.find(o => o.fromCardNo == ToCardNo)){
                    document.getElementById('toCardNo_error_'+indexS).title="Either Card(s) Hotlisted, Expired OR not belong to this Customer.";
                    document.getElementById('toCardNo_error_'+indexS).style.display = "block";
                    flag = "N";
                }else if(ToCardNo == FromCardNo){
                    document.getElementById('toCardNo_error_'+indexS).title="Duplicate Card Number";
                    document.getElementById('toCardNo_error_'+indexS).style.display = "block";
                    flag = "N";
                }
            }

            if(TransferAmount.trim() == ''){
                document.getElementById('amtToTrans_error_'+indexS).title="Please Enter Card Number First";
                document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                flag = "N";
            }

            if(TransferAmount.trim()==''){
                document.getElementById('amtToTrans_error_'+indexS).title="Please Enter Amount";
                document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                flag = "N";
            }

            if(TransferAmount.trim() != ''){
                if(!(parseFloat(TransferAmount) <= parseFloat(balance))){
                    document.getElementById('amtToTrans_error_'+indexS).title="Amount should be less than or equal to Card Balance";
                    document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                    flag = "N";
                }else if(TransferAmount.trim() == 0){
                    document.getElementById('amtToTrans_error_'+indexS).title="Please Enter Value greater than 0";
                    document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                    flag = "N";
                }
            }
        });

        
        if (FromCardNo == undefined) {
            alert("Please select atleast one record");
            flag = "N";
        }

        console.log("updt", updateArray);

        if (flag == "N")
            e.preventDefault();

        if (flag == "Y") {
             $("#CardToCardSearchRes input[type=checkbox]:checked").each(function () {
                var selectedRow = $(this).closest("tr")[0];
                console.log("index",selectedRow.rowIndex);
                var indexS = (selectedRow.rowIndex) - 1;
                document.getElementById('toCardNo_error_'+indexS).style.display = "none";
                document.getElementById('amtToTrans_error_'+indexS).style.display = "none";
            });

            if (confirm('Do you want to process the selected record, confirm once')) {
                console.log('ok');

                $.ajax({
                    url: "@Url.Action("CardToCardBalanceTransferAmount", "CustomerFinancial")",
                    type: "POST",
                    traditional: true,
                    data: { customerId: customerId, cardToCardTransfer: JSON.stringify(updateArray) },
                    success: function (res) {
                        console.log("res",res);
                        $("#formVal").hide();
                        for(var i = 0; i < res.reasonList.data.length; i++){
                             var bindRes = "<span>"+(res.reasonList.data[i].reason)+"</span><br>";

                             $("#successUpdate").append(bindRes);
                        }
                        document.getElementById('successUpdate').style.display = "block";
                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });
        
            } else {
                console.log('cancel')
            }
        }
    }



    function toCardNoChange(o, rowSelected){
        debugger;
        var toCardNo = o.value;
        var chkEnable=o.closest('td').closest('tr').cells[1].firstChild;
        
        if (chkEnable.checked) {
            var fromCardNo = $('#fromCardNoId_'+rowSelected).text();

            if(toCardNo.trim() == ''){
                document.getElementById('toCardNo_error_'+rowSelected).title="Please Enter Card Number";
                document.getElementById('toCardNo_error_'+rowSelected).style.display = "block";
                return false;
            }

            if(toCardNo.trim() != ''){
                if(!toCardNo.match(/^\d{16}$/)){
                    document.getElementById('toCardNo_error_'+rowSelected).title="Card Number is a 16 digit number";
                    document.getElementById('toCardNo_error_'+rowSelected).style.display = "block";
                    return false;
                }else if(!fromCardNoArr.find(o => o.fromCardNo == toCardNo)){
                    document.getElementById('toCardNo_error_'+rowSelected).title="Either Card(s) Hotlisted, Expired OR not belong to this Customer.";
                    document.getElementById('toCardNo_error_'+rowSelected).style.display = "block";
                    return false;
                }else if(toCardNo == fromCardNo){
                    document.getElementById('toCardNo_error_'+rowSelected).title="Duplicate Card Number";
                    document.getElementById('toCardNo_error_'+rowSelected).style.display = "block";
                    return false;
                }else{
                    document.getElementById('toCardNo_error_'+rowSelected).style.display = "none";
                    document.getElementById('amtToTrans_error_'+rowSelected).title="";
                    document.getElementById('amtToTrans_error_'+rowSelected).style.display = "none";
                }
            }
        }
    }

    function amtToTransChange(o, rowSelected){
       var chkEnable=o.closest('td').closest('tr').cells[1].firstChild;
        
        if (chkEnable.checked) {
            var amountVal = o.value;
            var balance = $('#balanceId_'+rowSelected).text();
            var toCardNo = $('#toCardNoId_'+rowSelected).val();

            if(toCardNo.trim() == ''){
                document.getElementById('amtToTrans_error_'+rowSelected).title="Please Enter Card Number First";
                document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                return false;
            }

            if(amountVal.trim()==''){
                document.getElementById('amtToTrans_error_'+rowSelected).title="Please Enter Amount";
                document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                return false;   
            }

            if(amountVal.trim() != ''){
                if(!(parseFloat(amountVal) <= parseFloat(balance))){
                    document.getElementById('amtToTrans_error_'+rowSelected).title="Amount should be less than or equal to Card Balance";
                    document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                    return false;
                }else if(amountVal.trim() == 0){
                    document.getElementById('amtToTrans_error_'+rowSelected).title="Please Enter Value greater than 0";
                    document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                    return false;
                }else{
                    document.getElementById('amtToTrans_error_'+rowSelected).title="";
                    document.getElementById('amtToTrans_error_'+rowSelected).style.display = "none";
                }
            }
        }
    }


    $("#btnUploadExcel").on('click', function (e) {

        var custId = $("#custIdVal").val();

        var flag = "Y";
        if(custId.trim()==''){
            $("#CustomerIdErr").attr("style", "display:block");
            $("#CustomerIdErr").html("Customer ID should not be left empty");
            flag = "N";
        }
        else{
            if(custId.trim()!=''){
                if (!custId.match(mappedCustomerId)){
                    $("#CustomerIdErr").attr("style", "display:block");
                    $("#CustomerIdErr").html("Invalid Customer ID");
                    flag = "N";
                }
            }
        }

        if (flag == "N")
            e.preventDefault();

        if(flag == "Y"){
            var url = '@Html.Raw(@Url.Action("CardToCardAmountTransferViaExcel", new { customerId = "dd" }))';
            url = url.replace("dd", encodeURIComponent(custId));
            $(this).attr('href', url);
        }
    });

</script>

<style>
    .cgl {
        width: 80%;
    }
</style>