@model HPCL.Common.Models.ViewModel.CustomerFinancial.BalanceTransferSearchModel
@using Microsoft.AspNetCore.Http;
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>

<div class="col-lg-12">
    <div class="bg-white p-2 p-md-4" style="background: #edecec !important;">
        <ul class="breadcrumb bread_custom bg-transparent m-0 pb-1 py-0 px-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","CustomerFinancial")" class="text_primary">Financial</a> </li>
            <li class="breadcrumb-item font-weight-light">CCMS to Card Balance Transfer</li>
        </ul>        
        <div id="successUpdate" class="mb-3 text-center alert alert-success" style="display:none;"></div>

        <div id="ErrorResponse" class="mt-3 text-center alert alert-danger" style="display:none;"></div>

        <form id="formVal" method="post" data-ajax="true" data-ajax-controller="CustomerFinancial" data-ajax-action="CCMSToCardBalanceTransfer" data-ajax-method="POST" data-ajax-success="OnSuccess" data-ajax-failure="OnFailure">
            <div class="w-100">
                <div class="col-lg-12 col-md-12 col-12 pl-0 pr-0">
                    <div class="border-1 rounded border-grey pb-0">
                        <p class="text-white px-3 py-2 m-0 font-weight-bold" style="background: #084693;">CCMS to Card Balance Transfer</p>
                        <div class="col-lg-12 col-md-12 col-12 py-3 bg-white">
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12 mb-3">Customer ID <sup class="text-danger">*</sup></label>
                                        <div class="col-md-7 col-12 mb-3">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CustomerID, new { @id = "custIdVal", @class = "form-control", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CustomerID, "", new {@id="CustomerIdErr", @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal offset-md-1 col-md-4 col-12 mb-3">Card Number</label>
                                        <div class="col-md-7 col-12 mb-3">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.CardNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center flex-wrap">
                                <div class="col-lg-6 col-12">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <label class="font-weight-normal col-md-4 col-12 mb-3">Mobile No.</label>
                                        <div class="col-md-7 col-12 mb-3">
                                            <div class="custom_select">
                                                @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", onkeypress = "return isNumberKey(event)" })
                                                @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="d-flex align-items-center justify-content-center mt-0">
                                <div class="px-2">
                                    <button class="btn btn_primary" type="submit">Search</button>
                                </div>
                                <div class="px-2">
                                    <button class="btn btn_primary" type="button" onclick="resetClick()">Reset</button>
                                </div>
                                <div class="px-2">
                                    <a class="btn btn_primary" href="#aa" id="btnUploadExcel"><i class="fa fa-file-excel-o" aria-hidden="true">&nbsp;</i> UPLOAD EXCEL</a>
                                </div>
                            </div>
                        </div>
                    <div class="clearfix"></div>

                    </div>

                    <div id="noRecord" class="mt-3 text-center alert alert-danger" style="display:none;"></div>

                    <div id="searchResSection" style="display:none;">

                        <div class="d-flex align-items-center justify-content-center flex-wrap mt-3">
                            <div class="col-12 col-md-6">
                                <div id="avalLimit" class="alert alert-warning mb-0" role="alert" style="width:100%;"> </div>
                            </div>
                        </div>

                        <div id="respTbl">
                            <table id="CCMSToCardSearch" class="table table-striped nowrap d-md-table d-block table-bordered table-responsive mt-3" style="width:100%;">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th></th>
                                        <th>Card Number</th>
                                        <th>Vehicle No.</th>
                                        <th>Mobile No.</th>
                                        <th>Issue Date</th>
                                        @*<th>Expiry Date</th>*@
                                        <th>Status</th>
                                        <th>Balance</th>
                                        <th>Cash Purse Limit</th>
                                        <th>CCMS Limit</th>
                                        <th>Amount To Transfer</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                        <div class="clearfix"></div>
                        <div class="d-flex align-items-center justify-content-center mt-0">
                            <div class="px-2">
                                <button class="btn btn_primary" type="button" onclick="transferAmount()">Transfer Amount</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="clearfix"></div>
    </div> 
</div>

<script src="https://rawgit.com/moment/moment/2.2.1/min/moment.min.js"></script>

<script type="text/javascript">

    var loginType = '@Context.Session.GetString("LoginType")';

    function resetClick() {

        window.location.reload(true);

        if (loginType == "Customer") {
            $("#custIdVal").attr("readonly", true);
            $("#CardNo").attr("readonly", false);
            $("#MobileNo").attr("readonly", false);
        }else{
            $("#custIdVal").attr("readonly", false);
            $("#CardNo").attr("readonly", false);
            $("#MobileNo").attr("readonly", false);
        }

    }

    $('input').on('paste', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
    });

    $("#CCMSToCardSearch").on('keydown', '.txnAmt', function (event) {
        if (event.shiftKey == true) {
            event.preventDefault();
        }
        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190|| event.keyCode == 110) {

        } else {
            event.preventDefault();
        }
        if($(this).val().indexOf('.') !== -1 && (event.keyCode == 190|| event.keyCode == 110))
            event.preventDefault();
    });

        $(document).ready(function () {

            function isNumberKey(evt) {
                var charCode = (evt.which) ? evt.which : event.keyCode;
                if (charCode != 46 && charCode > 31
                    && (charCode < 48 || charCode > 57))
                    return false;

                return true;
            }

            $("#custIdVal").val('@Context.Session.GetString("UserId")');
            $("#custIdVal").attr("readonly", true);

            if (loginType == "Customer") {

                $.ajax({
                    url: "@Url.Action("CCMSToCardBalanceTransfer", "CustomerFinancial")",
                    type: "POST",
                    dataType: "JSON",
                    success: function (data) {

                        OnSuccess(data);

                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });
            }
      });


    var RestBal=0; 
    function OnSuccess(res) {

        console.log(res);

        $("#custIdVal").attr("readonly", true);
        $("#CardNo").attr("readonly", true);
        $("#MobileNo").attr("readonly", true);

        if (res.searchList.success == true) {

            if (res.searchList.data.getCcmsToCardBalanceTransferDetailModelOutput[0].status == "1") {

                var girdList = res.searchList.data.getCcmsToCardBalanceTransferDetailModelOutput;

                document.getElementById("noRecord").style.display = "none";
             
                RestBal = res.searchList.data.availableCcmsBalanceModelOutput[0].availableCcmsBalance.toFixed(2);

                $("#avalLimit").html("");
                $("#avalLimit").append("<p class='mb-0 text-center font-weight-bold'>Available CCMS Balance : " + RestBal + "</p>");
                document.getElementById("avalLimit").style.display = "block";

                $('#CCMSToCardSearch').DataTable().clear().destroy();

                var tbl = $('#CCMSToCardSearch').DataTable({
                    paging: true,
                    searching: false,
                    stateSave: true,
                    "lengthMenu": [10, 20, 50, 100, 200, 500, 1000, 2000],
                    "autoWidth": false,
                    "oLanguage": {
                        "sLengthMenu": "Display _MENU_ Records",
                        "info": "Showing _START_ to _END_ of _TOTAL_ Records",
                    }
                });
            
                for (var i = 0; i < girdList.length; i++) {
               
                    var isDts;
                    var expDts;

                    if(((girdList[i].issueDate) == "01-01-0001 00:00:00") || ((girdList[i].issueDate) == "01-01-1900 00:00:00") || ((girdList[i].issueDate) == null)){
                        isDts = "";
                    }else{
                        isDts = moment(girdList[i].issueDate, 'DD-MM-YYYY').format('DD-MM-YYYY');
                    }

                    var checkBoxValid;

                    if(girdList[i].cardStatus != "Active"){
                        checkBoxValid = "<input type='checkbox' class='checkEnable' name='enableRow' disabled='disabled'>";
                    }else{
                        checkBoxValid = "<input type='checkbox' class='checkEnable' name='enableRow'>";
                    }

                    var srNumber = (i+1);
                    var pressCheck = checkBoxValid;
                    var cardNo = "<span class='cdn'>" + (girdList[i].cardNo || '') + "</span>";
                    var vechileNo = (girdList[i].vechileNo || '');
                    var mobileno = "<span class='mobN'>" + (girdList[i].mobileno || '') + "</span>";
                    var issueDate = isDts;
                    var status = (girdList[i].cardStatus || '');
                    var balance = "<span class='balanceAmt' id='balanceId_"+i+"'>"+(girdList[i].balance.toFixed(2))+"</span>";
                    var cashPurseLimit = "<span class='cashPurseLimit' id='cashPurseLimitId_"+i+"'>"+(girdList[i].cashPurseLimit.toFixed(2))+"</span>";
                    var ccmsLimit = (girdList[i].ccmsLimitValue.toFixed(2));
                    var transAmt = "<div style='width:160px;display:flex;'><input maxlength='10' onblur='amtToTransChange(this," + (i) + ")' class='form-control txnAmt cgl' id='amtTotransId_"+i+"' name='AmountToTransfer' type='text' readonly='readonly'><i style='display:none;margin-top:10px;' class='fa fa-exclamation-triangle errss' id='amtToTrans_error_"+i+"' aria-hidden='true'></i></div>";

                    tbl.row.add([
                        srNumber,
                        pressCheck,
                        cardNo,
                        vechileNo,
                        mobileno,
                        issueDate,
                        status,
                        balance,
                        cashPurseLimit,
                        ccmsLimit,
                        transAmt
                    ]).draw();
                
                    document.getElementById('searchResSection').style.display = 'block';
                }

            } else {
                document.getElementById("searchResSection").style.display = "none";
                document.getElementById("avalLimit").style.display = "none";
                $("#noRecord").html("");
                $("#noRecord").append("<span>" + res.searchList.message + "</span>");
                document.getElementById("noRecord").style.display = "block";
            }

        } else {
            document.getElementById("searchResSection").style.display = "none";
            document.getElementById("avalLimit").style.display = "none";
            $("#noRecord").html("");
            $("#noRecord").append("<span>" + res.searchList.message + "</span>");
            document.getElementById("noRecord").style.display = "block";
        }
    }

    $("#CCMSToCardSearch").on('click', '.checkEnable', function (e) {
        currentRow = $(this).closest("tr");
        if ($(this).is(':checked')) {
            currentRow.find('input:text').attr("readonly", false);
        }
        if (!$(this).is(':checked')) {
            currentRow.find('input:text').attr("readonly", true);
            currentRow.find('.errss').css("display", "none");
        }
    });

    $("#CCMSToCardSearch").on('paste', '.cgl', function (event) {
        if (event.originalEvent.clipboardData.getData('Text').match(/[^\d]/)) {
            event.preventDefault();
        }
    });

    function OnFailure(data) {
        alert('HTTP Status Code: ' + data + '  Error Message: ' + data);
    }

    function transferAmount(){

        var updateArray = new Array();

        var customerId = $("#custIdVal").val();

        var flag = "Y";
        var CardNo;
        var TransferAmount;
        $("#CCMSToCardSearch input[type=checkbox]:checked").each(function () {

            var selectedRow = $(this).closest("tr")[0];
            console.log("index",selectedRow.rowIndex);
            
            var indexS = (selectedRow.rowIndex) - 1;

            var row = $(this).closest("tr");

            CardNo = row.find('.cdn').text();
            TransferAmount = row.find('.txnAmt').val();
            var balance = row.find('.balanceAmt').text();
            var cashPurseLimit = row.find('.cashPurseLimit').text();
            var MobileNo = row.find('.mobN').text();

            var totalVal = parseFloat(TransferAmount) + parseFloat(balance);

            updateArray.push({
                CardNo:CardNo,
                MobileNo:MobileNo,
                TransferAmount:TransferAmount
            });

            if(TransferAmount.trim() == ''){
                document.getElementById('amtToTrans_error_'+indexS).title="Please Enter Amount";
                document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                flag = "N";
            }

            if(TransferAmount.trim() != ''){
                if(!(parseFloat(totalVal) < parseFloat(cashPurseLimit))){
                    document.getElementById('amtToTrans_error_'+indexS).title="Card Balance should not be exceeded the Cash Purse Limit";
                    document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                    flag = "N";
                }else if(parseFloat(TransferAmount) > parseFloat(RestBal)){
                    document.getElementById('amtToTrans_error_'+indexS).title="Amount is greater than available CCMS Balance";
                    document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                    flag = "N";
                }else if(TransferAmount.trim() == 0){
                    document.getElementById('amtToTrans_error_'+indexS).title="Please Enter  Value greater than 0";
                    document.getElementById('amtToTrans_error_'+indexS).style.display = "block";
                    flag = "N";
                }
            }
        });

        
        if (CardNo == undefined) {
            alert("Please select atleast one record");
            flag = "N";
        }

        console.log("updt", updateArray);

        if (flag == "N")
            e.preventDefault();

        if (flag == "Y") {
             $("#CCMSToCardSearch input[type=checkbox]:checked").each(function () {
                var selectedRow = $(this).closest("tr")[0];
                console.log("index",selectedRow.rowIndex);
                var indexS = (selectedRow.rowIndex) - 1;
                document.getElementById('amtToTrans_error_'+indexS).style.display = "none";
            });

            if (confirm('Do you want to process the selected record, confirm once')) {
                console.log('ok');

                $.ajax({
                    url: "@Url.Action("CCMSToCardBalanceTransferAmount", "CustomerFinancial")",
                    type: "POST",
                    traditional: true,
                    data: { customerId: customerId, ccmsToCardTransfer: JSON.stringify(updateArray) },
                    success: function (res) {
                        console.log("res",res);
                        $("#formVal").hide();
                        for(var i = 0; i < res.reasonList.data.length; i++){
                             if(res.reasonList.data[i].status == 1){
                                 var bindRes = "<span>"+(res.reasonList.data[i].reason)+"</span><br>";

                                 $("#successUpdate").append(bindRes);
                                 document.getElementById('successUpdate').style.display = "block";
                            }else{
                                 var bindRes = "<span>"+(res.reasonList.data[i].reason)+"</span><br>";

                                 $("#ErrorResponse").append(bindRes);
                                 document.getElementById('ErrorResponse').style.display = "block";
                            }
                        }
                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });
        
            } else {
                console.log('cancel')
            }
        }
    }


    function amtToTransChange(o, rowSelected){
        var amountVal = o.value;
        var chkEnable=o.closest('td').closest('tr').cells[1].firstChild;
        
        if (chkEnable.checked) {
            var balance = $('#balanceId_'+rowSelected).text();
            var cashPurseLimit = $('#cashPurseLimitId_'+rowSelected).text();

            var total = parseFloat(amountVal) + parseFloat(balance);

             if(amountVal.trim()==''){
                document.getElementById('amtToTrans_error_'+rowSelected).title="Please Enter Amount";
                document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                return false;
             }

             if(amountVal.trim() !=''){
                 if(!(parseFloat(total) < parseFloat(cashPurseLimit))){
                        document.getElementById('amtToTrans_error_'+rowSelected).title="Card Balance should not be exceeded the Cash Purse Limit";
                        document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                        return false;
                 }else if(parseFloat(amountVal) > parseFloat(RestBal)){
                        document.getElementById('amtToTrans_error_'+rowSelected).title="Amount is greater than available CCMS Balance";
                        document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                        return false;
                 }else if(amountVal.trim() == 0){
                        document.getElementById('amtToTrans_error_'+rowSelected).title="Please Enter  Value greater than 0";
                        document.getElementById('amtToTrans_error_'+rowSelected).style.display = "block";
                        return false;
                 }
                 else{
                        document.getElementById('amtToTrans_error_'+rowSelected).title="";
                        document.getElementById('amtToTrans_error_'+rowSelected).style.display = "none";
                 }
             }
         }
     }

     
    $("#btnUploadExcel").on('click', function (e) {

        var custId = $("#custIdVal").val();

        var flag = "Y";
        if(custId.trim()==''){
            $("#CustomerIdErr").attr("style", "display:block");
            $("#CustomerIdErr").html("Customer ID should not be left empty");
            flag = "N";
        }
        else{
            if(custId.trim()!=''){
                if (!custId.match(mappedCustomerId)){
                    $("#CustomerIdErr").attr("style", "display:block");
                    $("#CustomerIdErr").html("Invalid Customer ID");
                    flag = "N";
                }
            }
        }

        if (flag == "N")
            e.preventDefault();

        if(flag == "Y"){
            var url = '@Html.Raw(@Url.Action("CcmsToCardAmountTransferViaExcel", new { customerId = "dd" }))';
            url = url.replace("dd", encodeURIComponent(custId));
            $(this).attr('href', url);
        }
    });
</script>

<style>
    .cgl {
        width: 80%;
    }
</style>